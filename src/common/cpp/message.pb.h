// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace khero {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_InitDefaults_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Command;
class CreateHomeRequest;
class CreateHomeResponse;
class DebugCommand;
class FrameNotification;
class GameStartNotification;
class GameStartRequest;
class HomeInfoRequest;
class HomeInfoResponse;
class JoinHomeRequest;
class JoinHomeResponse;
class KeyMsg;
class LoadingCompleteRequest;
class LoginRequest;
class LoginResponse;
class Notification;
class OperateRequest;
class RegisterRequest;
class RegisterResponse;
class Request;
class Response;
class RoleInfoRequest;
class RoleInfoResponse;
class RoleListRequest;
class RoleListResponse;
class TouchMsg;
class WelcomeNotification;

enum Msg {
  Register_Request = 65537,
  Register_Response = 65538,
  Login_Request = 65539,
  Login_Response = 65540,
  Operate_Request = 65541,
  Game_Start_Request = 65543,
  Create_Home_Request = 65545,
  Create_Home_Response = 65546,
  Join_Home_Request = 65547,
  Join_Home_Response = 65548,
  Home_Info_Request = 65549,
  Home_Info_Response = 65551,
  Role_List_Request = 65553,
  Role_List_Response = 65554,
  Role_Info_Request = 65555,
  Role_Info_Response = 65556,
  Loading_Complete_Request = 65557,
  Debug_Command = 69633,
  Welcom_Notification = 73729,
  Frame_Notification = 73730,
  Game_Start_Notification = 73731
};
bool Msg_IsValid(int value);
const Msg Msg_MIN = Register_Request;
const Msg Msg_MAX = Game_Start_Notification;
const int Msg_ARRAYSIZE = Msg_MAX + 1;

const ::google::protobuf::EnumDescriptor* Msg_descriptor();
inline const ::std::string& Msg_Name(Msg value) {
  return ::google::protobuf::internal::NameOfEnum(
    Msg_descriptor(), value);
}
inline bool Msg_Parse(
    const ::std::string& name, Msg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Msg>(
    Msg_descriptor(), name, value);
}
// ===================================================================

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  static const Command* internal_default_instance();

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  inline Command* New() const { return New(NULL); }

  Command* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Command* other);
  void UnsafeMergeFrom(const Command& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .khero.DebugCommand debug = 1;
  bool has_debug() const;
  void clear_debug();
  static const int kDebugFieldNumber = 1;
  const ::khero::DebugCommand& debug() const;
  ::khero::DebugCommand* mutable_debug();
  ::khero::DebugCommand* release_debug();
  void set_allocated_debug(::khero::DebugCommand* debug);

  // @@protoc_insertion_point(class_scope:khero.Command)
 private:
  inline void set_has_debug();
  inline void clear_has_debug();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::khero::DebugCommand* debug_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Command> Command_default_instance_;

// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static const Request* internal_default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  void UnsafeMergeFrom(const Request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .khero.RegisterRequest register = 1;
  bool has_register_() const;
  void clear_register_();
  static const int kRegisterFieldNumber = 1;
  const ::khero::RegisterRequest& register_() const;
  ::khero::RegisterRequest* mutable_register_();
  ::khero::RegisterRequest* release_register_();
  void set_allocated_register_(::khero::RegisterRequest* register_);

  // optional .khero.LoginRequest login = 2;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 2;
  const ::khero::LoginRequest& login() const;
  ::khero::LoginRequest* mutable_login();
  ::khero::LoginRequest* release_login();
  void set_allocated_login(::khero::LoginRequest* login);

  // optional .khero.OperateRequest operate = 3;
  bool has_operate() const;
  void clear_operate();
  static const int kOperateFieldNumber = 3;
  const ::khero::OperateRequest& operate() const;
  ::khero::OperateRequest* mutable_operate();
  ::khero::OperateRequest* release_operate();
  void set_allocated_operate(::khero::OperateRequest* operate);

  // optional .khero.GameStartRequest gameStart = 4;
  bool has_gamestart() const;
  void clear_gamestart();
  static const int kGameStartFieldNumber = 4;
  const ::khero::GameStartRequest& gamestart() const;
  ::khero::GameStartRequest* mutable_gamestart();
  ::khero::GameStartRequest* release_gamestart();
  void set_allocated_gamestart(::khero::GameStartRequest* gamestart);

  // optional .khero.CreateHomeRequest createHome = 5;
  bool has_createhome() const;
  void clear_createhome();
  static const int kCreateHomeFieldNumber = 5;
  const ::khero::CreateHomeRequest& createhome() const;
  ::khero::CreateHomeRequest* mutable_createhome();
  ::khero::CreateHomeRequest* release_createhome();
  void set_allocated_createhome(::khero::CreateHomeRequest* createhome);

  // optional .khero.JoinHomeRequest joinHome = 6;
  bool has_joinhome() const;
  void clear_joinhome();
  static const int kJoinHomeFieldNumber = 6;
  const ::khero::JoinHomeRequest& joinhome() const;
  ::khero::JoinHomeRequest* mutable_joinhome();
  ::khero::JoinHomeRequest* release_joinhome();
  void set_allocated_joinhome(::khero::JoinHomeRequest* joinhome);

  // optional .khero.HomeInfoRequest homeInfo = 7;
  bool has_homeinfo() const;
  void clear_homeinfo();
  static const int kHomeInfoFieldNumber = 7;
  const ::khero::HomeInfoRequest& homeinfo() const;
  ::khero::HomeInfoRequest* mutable_homeinfo();
  ::khero::HomeInfoRequest* release_homeinfo();
  void set_allocated_homeinfo(::khero::HomeInfoRequest* homeinfo);

  // optional .khero.RoleListRequest roleList = 8;
  bool has_rolelist() const;
  void clear_rolelist();
  static const int kRoleListFieldNumber = 8;
  const ::khero::RoleListRequest& rolelist() const;
  ::khero::RoleListRequest* mutable_rolelist();
  ::khero::RoleListRequest* release_rolelist();
  void set_allocated_rolelist(::khero::RoleListRequest* rolelist);

  // optional .khero.RoleInfoRequest roleInfo = 9;
  bool has_roleinfo() const;
  void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 9;
  const ::khero::RoleInfoRequest& roleinfo() const;
  ::khero::RoleInfoRequest* mutable_roleinfo();
  ::khero::RoleInfoRequest* release_roleinfo();
  void set_allocated_roleinfo(::khero::RoleInfoRequest* roleinfo);

  // optional .khero.LoadingCompleteRequest ready = 10;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 10;
  const ::khero::LoadingCompleteRequest& ready() const;
  ::khero::LoadingCompleteRequest* mutable_ready();
  ::khero::LoadingCompleteRequest* release_ready();
  void set_allocated_ready(::khero::LoadingCompleteRequest* ready);

  // @@protoc_insertion_point(class_scope:khero.Request)
 private:
  inline void set_has_register_();
  inline void clear_has_register_();
  inline void set_has_login();
  inline void clear_has_login();
  inline void set_has_operate();
  inline void clear_has_operate();
  inline void set_has_gamestart();
  inline void clear_has_gamestart();
  inline void set_has_createhome();
  inline void clear_has_createhome();
  inline void set_has_joinhome();
  inline void clear_has_joinhome();
  inline void set_has_homeinfo();
  inline void clear_has_homeinfo();
  inline void set_has_rolelist();
  inline void clear_has_rolelist();
  inline void set_has_roleinfo();
  inline void clear_has_roleinfo();
  inline void set_has_ready();
  inline void clear_has_ready();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::khero::RegisterRequest* register__;
  ::khero::LoginRequest* login_;
  ::khero::OperateRequest* operate_;
  ::khero::GameStartRequest* gamestart_;
  ::khero::CreateHomeRequest* createhome_;
  ::khero::JoinHomeRequest* joinhome_;
  ::khero::HomeInfoRequest* homeinfo_;
  ::khero::RoleListRequest* rolelist_;
  ::khero::RoleInfoRequest* roleinfo_;
  ::khero::LoadingCompleteRequest* ready_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static const Response* internal_default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  void UnsafeMergeFrom(const Response& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // required bool last_response = 2;
  bool has_last_response() const;
  void clear_last_response();
  static const int kLastResponseFieldNumber = 2;
  bool last_response() const;
  void set_last_response(bool value);

  // optional bytes error_describe = 3;
  bool has_error_describe() const;
  void clear_error_describe();
  static const int kErrorDescribeFieldNumber = 3;
  const ::std::string& error_describe() const;
  void set_error_describe(const ::std::string& value);
  void set_error_describe(const char* value);
  void set_error_describe(const void* value, size_t size);
  ::std::string* mutable_error_describe();
  ::std::string* release_error_describe();
  void set_allocated_error_describe(::std::string* error_describe);

  // optional .khero.RegisterResponse register = 4;
  bool has_register_() const;
  void clear_register_();
  static const int kRegisterFieldNumber = 4;
  const ::khero::RegisterResponse& register_() const;
  ::khero::RegisterResponse* mutable_register_();
  ::khero::RegisterResponse* release_register_();
  void set_allocated_register_(::khero::RegisterResponse* register_);

  // optional .khero.LoginResponse login = 5;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 5;
  const ::khero::LoginResponse& login() const;
  ::khero::LoginResponse* mutable_login();
  ::khero::LoginResponse* release_login();
  void set_allocated_login(::khero::LoginResponse* login);

  // optional .khero.CreateHomeResponse createHome = 6;
  bool has_createhome() const;
  void clear_createhome();
  static const int kCreateHomeFieldNumber = 6;
  const ::khero::CreateHomeResponse& createhome() const;
  ::khero::CreateHomeResponse* mutable_createhome();
  ::khero::CreateHomeResponse* release_createhome();
  void set_allocated_createhome(::khero::CreateHomeResponse* createhome);

  // optional .khero.JoinHomeResponse joinHome = 7;
  bool has_joinhome() const;
  void clear_joinhome();
  static const int kJoinHomeFieldNumber = 7;
  const ::khero::JoinHomeResponse& joinhome() const;
  ::khero::JoinHomeResponse* mutable_joinhome();
  ::khero::JoinHomeResponse* release_joinhome();
  void set_allocated_joinhome(::khero::JoinHomeResponse* joinhome);

  // optional .khero.HomeInfoResponse homeInfo = 8;
  bool has_homeinfo() const;
  void clear_homeinfo();
  static const int kHomeInfoFieldNumber = 8;
  const ::khero::HomeInfoResponse& homeinfo() const;
  ::khero::HomeInfoResponse* mutable_homeinfo();
  ::khero::HomeInfoResponse* release_homeinfo();
  void set_allocated_homeinfo(::khero::HomeInfoResponse* homeinfo);

  // optional .khero.RoleListResponse roleList = 9;
  bool has_rolelist() const;
  void clear_rolelist();
  static const int kRoleListFieldNumber = 9;
  const ::khero::RoleListResponse& rolelist() const;
  ::khero::RoleListResponse* mutable_rolelist();
  ::khero::RoleListResponse* release_rolelist();
  void set_allocated_rolelist(::khero::RoleListResponse* rolelist);

  // optional .khero.RoleInfoResponse roleInfo = 10;
  bool has_roleinfo() const;
  void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 10;
  const ::khero::RoleInfoResponse& roleinfo() const;
  ::khero::RoleInfoResponse* mutable_roleinfo();
  ::khero::RoleInfoResponse* release_roleinfo();
  void set_allocated_roleinfo(::khero::RoleInfoResponse* roleinfo);

  // @@protoc_insertion_point(class_scope:khero.Response)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_last_response();
  inline void clear_has_last_response();
  inline void set_has_error_describe();
  inline void clear_has_error_describe();
  inline void set_has_register_();
  inline void clear_has_register_();
  inline void set_has_login();
  inline void clear_has_login();
  inline void set_has_createhome();
  inline void clear_has_createhome();
  inline void set_has_joinhome();
  inline void clear_has_joinhome();
  inline void set_has_homeinfo();
  inline void clear_has_homeinfo();
  inline void set_has_rolelist();
  inline void clear_has_rolelist();
  inline void set_has_roleinfo();
  inline void clear_has_roleinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_describe_;
  ::khero::RegisterResponse* register__;
  ::khero::LoginResponse* login_;
  ::khero::CreateHomeResponse* createhome_;
  ::khero::JoinHomeResponse* joinhome_;
  ::khero::HomeInfoResponse* homeinfo_;
  ::khero::RoleListResponse* rolelist_;
  ::khero::RoleInfoResponse* roleinfo_;
  bool result_;
  bool last_response_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

// -------------------------------------------------------------------

class Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.Notification) */ {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Notification& default_instance();

  static const Notification* internal_default_instance();

  void Swap(Notification* other);

  // implements Message ----------------------------------------------

  inline Notification* New() const { return New(NULL); }

  Notification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Notification* other);
  void UnsafeMergeFrom(const Notification& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .khero.WelcomeNotification welcome = 1;
  bool has_welcome() const;
  void clear_welcome();
  static const int kWelcomeFieldNumber = 1;
  const ::khero::WelcomeNotification& welcome() const;
  ::khero::WelcomeNotification* mutable_welcome();
  ::khero::WelcomeNotification* release_welcome();
  void set_allocated_welcome(::khero::WelcomeNotification* welcome);

  // optional .khero.FrameNotification frame = 2;
  bool has_frame() const;
  void clear_frame();
  static const int kFrameFieldNumber = 2;
  const ::khero::FrameNotification& frame() const;
  ::khero::FrameNotification* mutable_frame();
  ::khero::FrameNotification* release_frame();
  void set_allocated_frame(::khero::FrameNotification* frame);

  // optional .khero.GameStartNotification gameStart = 3;
  bool has_gamestart() const;
  void clear_gamestart();
  static const int kGameStartFieldNumber = 3;
  const ::khero::GameStartNotification& gamestart() const;
  ::khero::GameStartNotification* mutable_gamestart();
  ::khero::GameStartNotification* release_gamestart();
  void set_allocated_gamestart(::khero::GameStartNotification* gamestart);

  // @@protoc_insertion_point(class_scope:khero.Notification)
 private:
  inline void set_has_welcome();
  inline void clear_has_welcome();
  inline void set_has_frame();
  inline void clear_has_frame();
  inline void set_has_gamestart();
  inline void clear_has_gamestart();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::khero::WelcomeNotification* welcome_;
  ::khero::FrameNotification* frame_;
  ::khero::GameStartNotification* gamestart_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Notification> Notification_default_instance_;

// -------------------------------------------------------------------

class DebugCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.DebugCommand) */ {
 public:
  DebugCommand();
  virtual ~DebugCommand();

  DebugCommand(const DebugCommand& from);

  inline DebugCommand& operator=(const DebugCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DebugCommand& default_instance();

  static const DebugCommand* internal_default_instance();

  void Swap(DebugCommand* other);

  // implements Message ----------------------------------------------

  inline DebugCommand* New() const { return New(NULL); }

  DebugCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DebugCommand& from);
  void MergeFrom(const DebugCommand& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DebugCommand* other);
  void UnsafeMergeFrom(const DebugCommand& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:khero.DebugCommand)
 private:
  inline void set_has_command();
  inline void clear_has_command();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DebugCommand> DebugCommand_default_instance_;

// -------------------------------------------------------------------

class RegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.RegisterRequest) */ {
 public:
  RegisterRequest();
  virtual ~RegisterRequest();

  RegisterRequest(const RegisterRequest& from);

  inline RegisterRequest& operator=(const RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterRequest& default_instance();

  static const RegisterRequest* internal_default_instance();

  void Swap(RegisterRequest* other);

  // implements Message ----------------------------------------------

  inline RegisterRequest* New() const { return New(NULL); }

  RegisterRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterRequest& from);
  void MergeFrom(const RegisterRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegisterRequest* other);
  void UnsafeMergeFrom(const RegisterRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:khero.RegisterRequest)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegisterRequest> RegisterRequest_default_instance_;

// -------------------------------------------------------------------

class RegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.RegisterResponse) */ {
 public:
  RegisterResponse();
  virtual ~RegisterResponse();

  RegisterResponse(const RegisterResponse& from);

  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResponse& default_instance();

  static const RegisterResponse* internal_default_instance();

  void Swap(RegisterResponse* other);

  // implements Message ----------------------------------------------

  inline RegisterResponse* New() const { return New(NULL); }

  RegisterResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterResponse& from);
  void MergeFrom(const RegisterResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegisterResponse* other);
  void UnsafeMergeFrom(const RegisterResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:khero.RegisterResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  bool result_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegisterResponse> RegisterResponse_default_instance_;

// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static const LoginRequest* internal_default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequest* other);
  void UnsafeMergeFrom(const LoginRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:khero.LoginRequest)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> LoginRequest_default_instance_;

// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static const LoginResponse* internal_default_instance();

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResponse* other);
  void UnsafeMergeFrom(const LoginResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.LoginResponse)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 playerid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> LoginResponse_default_instance_;

// -------------------------------------------------------------------

class KeyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.KeyMsg) */ {
 public:
  KeyMsg();
  virtual ~KeyMsg();

  KeyMsg(const KeyMsg& from);

  inline KeyMsg& operator=(const KeyMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyMsg& default_instance();

  static const KeyMsg* internal_default_instance();

  void Swap(KeyMsg* other);

  // implements Message ----------------------------------------------

  inline KeyMsg* New() const { return New(NULL); }

  KeyMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyMsg& from);
  void MergeFrom(const KeyMsg& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeyMsg* other);
  void UnsafeMergeFrom(const KeyMsg& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 keyCode = 1;
  bool has_keycode() const;
  void clear_keycode();
  static const int kKeyCodeFieldNumber = 1;
  ::google::protobuf::int32 keycode() const;
  void set_keycode(::google::protobuf::int32 value);

  // required bool keyDown = 2;
  bool has_keydown() const;
  void clear_keydown();
  static const int kKeyDownFieldNumber = 2;
  bool keydown() const;
  void set_keydown(bool value);

  // @@protoc_insertion_point(class_scope:khero.KeyMsg)
 private:
  inline void set_has_keycode();
  inline void clear_has_keycode();
  inline void set_has_keydown();
  inline void clear_has_keydown();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 keycode_;
  bool keydown_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<KeyMsg> KeyMsg_default_instance_;

// -------------------------------------------------------------------

class TouchMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.TouchMsg) */ {
 public:
  TouchMsg();
  virtual ~TouchMsg();

  TouchMsg(const TouchMsg& from);

  inline TouchMsg& operator=(const TouchMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchMsg& default_instance();

  static const TouchMsg* internal_default_instance();

  void Swap(TouchMsg* other);

  // implements Message ----------------------------------------------

  inline TouchMsg* New() const { return New(NULL); }

  TouchMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TouchMsg& from);
  void MergeFrom(const TouchMsg& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TouchMsg* other);
  void UnsafeMergeFrom(const TouchMsg& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float touchX = 1;
  bool has_touchx() const;
  void clear_touchx();
  static const int kTouchXFieldNumber = 1;
  float touchx() const;
  void set_touchx(float value);

  // required float touchY = 2;
  bool has_touchy() const;
  void clear_touchy();
  static const int kTouchYFieldNumber = 2;
  float touchy() const;
  void set_touchy(float value);

  // required bool touchUp = 3;
  bool has_touchup() const;
  void clear_touchup();
  static const int kTouchUpFieldNumber = 3;
  bool touchup() const;
  void set_touchup(bool value);

  // @@protoc_insertion_point(class_scope:khero.TouchMsg)
 private:
  inline void set_has_touchx();
  inline void clear_has_touchx();
  inline void set_has_touchy();
  inline void clear_has_touchy();
  inline void set_has_touchup();
  inline void clear_has_touchup();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float touchx_;
  float touchy_;
  bool touchup_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TouchMsg> TouchMsg_default_instance_;

// -------------------------------------------------------------------

class OperateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.OperateRequest) */ {
 public:
  OperateRequest();
  virtual ~OperateRequest();

  OperateRequest(const OperateRequest& from);

  inline OperateRequest& operator=(const OperateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperateRequest& default_instance();

  static const OperateRequest* internal_default_instance();

  void Swap(OperateRequest* other);

  // implements Message ----------------------------------------------

  inline OperateRequest* New() const { return New(NULL); }

  OperateRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperateRequest& from);
  void MergeFrom(const OperateRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperateRequest* other);
  void UnsafeMergeFrom(const OperateRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // optional .khero.KeyMsg keyMsg = 2;
  bool has_keymsg() const;
  void clear_keymsg();
  static const int kKeyMsgFieldNumber = 2;
  const ::khero::KeyMsg& keymsg() const;
  ::khero::KeyMsg* mutable_keymsg();
  ::khero::KeyMsg* release_keymsg();
  void set_allocated_keymsg(::khero::KeyMsg* keymsg);

  // optional .khero.TouchMsg touchMsg = 3;
  bool has_touchmsg() const;
  void clear_touchmsg();
  static const int kTouchMsgFieldNumber = 3;
  const ::khero::TouchMsg& touchmsg() const;
  ::khero::TouchMsg* mutable_touchmsg();
  ::khero::TouchMsg* release_touchmsg();
  void set_allocated_touchmsg(::khero::TouchMsg* touchmsg);

  // @@protoc_insertion_point(class_scope:khero.OperateRequest)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_keymsg();
  inline void clear_has_keymsg();
  inline void set_has_touchmsg();
  inline void clear_has_touchmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::khero::KeyMsg* keymsg_;
  ::khero::TouchMsg* touchmsg_;
  ::google::protobuf::int32 playerid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperateRequest> OperateRequest_default_instance_;

// -------------------------------------------------------------------

class GameStartRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.GameStartRequest) */ {
 public:
  GameStartRequest();
  virtual ~GameStartRequest();

  GameStartRequest(const GameStartRequest& from);

  inline GameStartRequest& operator=(const GameStartRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStartRequest& default_instance();

  static const GameStartRequest* internal_default_instance();

  void Swap(GameStartRequest* other);

  // implements Message ----------------------------------------------

  inline GameStartRequest* New() const { return New(NULL); }

  GameStartRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameStartRequest& from);
  void MergeFrom(const GameStartRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameStartRequest* other);
  void UnsafeMergeFrom(const GameStartRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 homeId = 1;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 1;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.GameStartRequest)
 private:
  inline void set_has_homeid();
  inline void clear_has_homeid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 homeid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GameStartRequest> GameStartRequest_default_instance_;

// -------------------------------------------------------------------

class CreateHomeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.CreateHomeRequest) */ {
 public:
  CreateHomeRequest();
  virtual ~CreateHomeRequest();

  CreateHomeRequest(const CreateHomeRequest& from);

  inline CreateHomeRequest& operator=(const CreateHomeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateHomeRequest& default_instance();

  static const CreateHomeRequest* internal_default_instance();

  void Swap(CreateHomeRequest* other);

  // implements Message ----------------------------------------------

  inline CreateHomeRequest* New() const { return New(NULL); }

  CreateHomeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateHomeRequest& from);
  void MergeFrom(const CreateHomeRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateHomeRequest* other);
  void UnsafeMergeFrom(const CreateHomeRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string homeName = 1;
  bool has_homename() const;
  void clear_homename();
  static const int kHomeNameFieldNumber = 1;
  const ::std::string& homename() const;
  void set_homename(const ::std::string& value);
  void set_homename(const char* value);
  void set_homename(const char* value, size_t size);
  ::std::string* mutable_homename();
  ::std::string* release_homename();
  void set_allocated_homename(::std::string* homename);

  // @@protoc_insertion_point(class_scope:khero.CreateHomeRequest)
 private:
  inline void set_has_homename();
  inline void clear_has_homename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr homename_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateHomeRequest> CreateHomeRequest_default_instance_;

// -------------------------------------------------------------------

class CreateHomeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.CreateHomeResponse) */ {
 public:
  CreateHomeResponse();
  virtual ~CreateHomeResponse();

  CreateHomeResponse(const CreateHomeResponse& from);

  inline CreateHomeResponse& operator=(const CreateHomeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateHomeResponse& default_instance();

  static const CreateHomeResponse* internal_default_instance();

  void Swap(CreateHomeResponse* other);

  // implements Message ----------------------------------------------

  inline CreateHomeResponse* New() const { return New(NULL); }

  CreateHomeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateHomeResponse& from);
  void MergeFrom(const CreateHomeResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateHomeResponse* other);
  void UnsafeMergeFrom(const CreateHomeResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional int32 homeId = 2;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 2;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // optional string text = 3;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:khero.CreateHomeResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_homeid();
  inline void clear_has_homeid();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  bool result_;
  ::google::protobuf::int32 homeid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateHomeResponse> CreateHomeResponse_default_instance_;

// -------------------------------------------------------------------

class JoinHomeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.JoinHomeRequest) */ {
 public:
  JoinHomeRequest();
  virtual ~JoinHomeRequest();

  JoinHomeRequest(const JoinHomeRequest& from);

  inline JoinHomeRequest& operator=(const JoinHomeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinHomeRequest& default_instance();

  static const JoinHomeRequest* internal_default_instance();

  void Swap(JoinHomeRequest* other);

  // implements Message ----------------------------------------------

  inline JoinHomeRequest* New() const { return New(NULL); }

  JoinHomeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinHomeRequest& from);
  void MergeFrom(const JoinHomeRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoinHomeRequest* other);
  void UnsafeMergeFrom(const JoinHomeRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 homeId = 1;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 1;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.JoinHomeRequest)
 private:
  inline void set_has_homeid();
  inline void clear_has_homeid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 homeid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<JoinHomeRequest> JoinHomeRequest_default_instance_;

// -------------------------------------------------------------------

class JoinHomeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.JoinHomeResponse) */ {
 public:
  JoinHomeResponse();
  virtual ~JoinHomeResponse();

  JoinHomeResponse(const JoinHomeResponse& from);

  inline JoinHomeResponse& operator=(const JoinHomeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinHomeResponse& default_instance();

  static const JoinHomeResponse* internal_default_instance();

  void Swap(JoinHomeResponse* other);

  // implements Message ----------------------------------------------

  inline JoinHomeResponse* New() const { return New(NULL); }

  JoinHomeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinHomeResponse& from);
  void MergeFrom(const JoinHomeResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoinHomeResponse* other);
  void UnsafeMergeFrom(const JoinHomeResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 homeId = 1;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 1;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // required int32 seatId = 2;
  bool has_seatid() const;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 2;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // required bool result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  bool result() const;
  void set_result(bool value);

  // optional string text = 4;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 4;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:khero.JoinHomeResponse)
 private:
  inline void set_has_homeid();
  inline void clear_has_homeid();
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_text();
  inline void clear_has_text();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 homeid_;
  ::google::protobuf::int32 seatid_;
  bool result_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<JoinHomeResponse> JoinHomeResponse_default_instance_;

// -------------------------------------------------------------------

class HomeInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.HomeInfoRequest) */ {
 public:
  HomeInfoRequest();
  virtual ~HomeInfoRequest();

  HomeInfoRequest(const HomeInfoRequest& from);

  inline HomeInfoRequest& operator=(const HomeInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeInfoRequest& default_instance();

  static const HomeInfoRequest* internal_default_instance();

  void Swap(HomeInfoRequest* other);

  // implements Message ----------------------------------------------

  inline HomeInfoRequest* New() const { return New(NULL); }

  HomeInfoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HomeInfoRequest& from);
  void MergeFrom(const HomeInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HomeInfoRequest* other);
  void UnsafeMergeFrom(const HomeInfoRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 homeId = 1;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 1;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.HomeInfoRequest)
 private:
  inline void set_has_homeid();
  inline void clear_has_homeid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 homeid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HomeInfoRequest> HomeInfoRequest_default_instance_;

// -------------------------------------------------------------------

class HomeInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.HomeInfoResponse) */ {
 public:
  HomeInfoResponse();
  virtual ~HomeInfoResponse();

  HomeInfoResponse(const HomeInfoResponse& from);

  inline HomeInfoResponse& operator=(const HomeInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeInfoResponse& default_instance();

  static const HomeInfoResponse* internal_default_instance();

  void Swap(HomeInfoResponse* other);

  // implements Message ----------------------------------------------

  inline HomeInfoResponse* New() const { return New(NULL); }

  HomeInfoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HomeInfoResponse& from);
  void MergeFrom(const HomeInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HomeInfoResponse* other);
  void UnsafeMergeFrom(const HomeInfoResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // required int32 homeId = 2;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 2;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // required string homeName = 3;
  bool has_homename() const;
  void clear_homename();
  static const int kHomeNameFieldNumber = 3;
  const ::std::string& homename() const;
  void set_homename(const ::std::string& value);
  void set_homename(const char* value);
  void set_homename(const char* value, size_t size);
  ::std::string* mutable_homename();
  ::std::string* release_homename();
  void set_allocated_homename(::std::string* homename);

  // required int32 owner = 4;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 4;
  ::google::protobuf::int32 owner() const;
  void set_owner(::google::protobuf::int32 value);

  // required int32 playerNum = 5;
  bool has_playernum() const;
  void clear_playernum();
  static const int kPlayerNumFieldNumber = 5;
  ::google::protobuf::int32 playernum() const;
  void set_playernum(::google::protobuf::int32 value);

  // optional int32 seatIds = 6;
  bool has_seatids() const;
  void clear_seatids();
  static const int kSeatIdsFieldNumber = 6;
  ::google::protobuf::int32 seatids() const;
  void set_seatids(::google::protobuf::int32 value);

  // optional string text = 7;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 7;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:khero.HomeInfoResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_homeid();
  inline void clear_has_homeid();
  inline void set_has_homename();
  inline void clear_has_homename();
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_playernum();
  inline void clear_has_playernum();
  inline void set_has_seatids();
  inline void clear_has_seatids();
  inline void set_has_text();
  inline void clear_has_text();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr homename_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  bool result_;
  ::google::protobuf::int32 homeid_;
  ::google::protobuf::int32 owner_;
  ::google::protobuf::int32 playernum_;
  ::google::protobuf::int32 seatids_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HomeInfoResponse> HomeInfoResponse_default_instance_;

// -------------------------------------------------------------------

class WelcomeNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.WelcomeNotification) */ {
 public:
  WelcomeNotification();
  virtual ~WelcomeNotification();

  WelcomeNotification(const WelcomeNotification& from);

  inline WelcomeNotification& operator=(const WelcomeNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WelcomeNotification& default_instance();

  static const WelcomeNotification* internal_default_instance();

  void Swap(WelcomeNotification* other);

  // implements Message ----------------------------------------------

  inline WelcomeNotification* New() const { return New(NULL); }

  WelcomeNotification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WelcomeNotification& from);
  void MergeFrom(const WelcomeNotification& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WelcomeNotification* other);
  void UnsafeMergeFrom(const WelcomeNotification& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:khero.WelcomeNotification)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WelcomeNotification> WelcomeNotification_default_instance_;

// -------------------------------------------------------------------

class RoleListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.RoleListRequest) */ {
 public:
  RoleListRequest();
  virtual ~RoleListRequest();

  RoleListRequest(const RoleListRequest& from);

  inline RoleListRequest& operator=(const RoleListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListRequest& default_instance();

  static const RoleListRequest* internal_default_instance();

  void Swap(RoleListRequest* other);

  // implements Message ----------------------------------------------

  inline RoleListRequest* New() const { return New(NULL); }

  RoleListRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListRequest& from);
  void MergeFrom(const RoleListRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleListRequest* other);
  void UnsafeMergeFrom(const RoleListRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 homeId = 1;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 1;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.RoleListRequest)
 private:
  inline void set_has_homeid();
  inline void clear_has_homeid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 homeid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RoleListRequest> RoleListRequest_default_instance_;

// -------------------------------------------------------------------

class RoleListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.RoleListResponse) */ {
 public:
  RoleListResponse();
  virtual ~RoleListResponse();

  RoleListResponse(const RoleListResponse& from);

  inline RoleListResponse& operator=(const RoleListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListResponse& default_instance();

  static const RoleListResponse* internal_default_instance();

  void Swap(RoleListResponse* other);

  // implements Message ----------------------------------------------

  inline RoleListResponse* New() const { return New(NULL); }

  RoleListResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListResponse& from);
  void MergeFrom(const RoleListResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleListResponse* other);
  void UnsafeMergeFrom(const RoleListResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 roles = 1;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 1;
  ::google::protobuf::int32 roles(int index) const;
  void set_roles(int index, ::google::protobuf::int32 value);
  void add_roles(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roles() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roles();

  // @@protoc_insertion_point(class_scope:khero.RoleListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roles_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RoleListResponse> RoleListResponse_default_instance_;

// -------------------------------------------------------------------

class RoleInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.RoleInfoRequest) */ {
 public:
  RoleInfoRequest();
  virtual ~RoleInfoRequest();

  RoleInfoRequest(const RoleInfoRequest& from);

  inline RoleInfoRequest& operator=(const RoleInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfoRequest& default_instance();

  static const RoleInfoRequest* internal_default_instance();

  void Swap(RoleInfoRequest* other);

  // implements Message ----------------------------------------------

  inline RoleInfoRequest* New() const { return New(NULL); }

  RoleInfoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfoRequest& from);
  void MergeFrom(const RoleInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleInfoRequest* other);
  void UnsafeMergeFrom(const RoleInfoRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 homeId = 1;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 1;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // required int32 roleId = 2;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.RoleInfoRequest)
 private:
  inline void set_has_homeid();
  inline void clear_has_homeid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 homeid_;
  ::google::protobuf::int32 roleid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RoleInfoRequest> RoleInfoRequest_default_instance_;

// -------------------------------------------------------------------

class RoleInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.RoleInfoResponse) */ {
 public:
  RoleInfoResponse();
  virtual ~RoleInfoResponse();

  RoleInfoResponse(const RoleInfoResponse& from);

  inline RoleInfoResponse& operator=(const RoleInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfoResponse& default_instance();

  static const RoleInfoResponse* internal_default_instance();

  void Swap(RoleInfoResponse* other);

  // implements Message ----------------------------------------------

  inline RoleInfoResponse* New() const { return New(NULL); }

  RoleInfoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfoResponse& from);
  void MergeFrom(const RoleInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleInfoResponse* other);
  void UnsafeMergeFrom(const RoleInfoResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seatId = 1;
  bool has_seatid() const;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 1;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // required float max_speed = 4;
  bool has_max_speed() const;
  void clear_max_speed();
  static const int kMaxSpeedFieldNumber = 4;
  float max_speed() const;
  void set_max_speed(float value);

  // required float min_speed = 5;
  bool has_min_speed() const;
  void clear_min_speed();
  static const int kMinSpeedFieldNumber = 5;
  float min_speed() const;
  void set_min_speed(float value);

  // required float degree = 6;
  bool has_degree() const;
  void clear_degree();
  static const int kDegreeFieldNumber = 6;
  float degree() const;
  void set_degree(float value);

  // required float angularVelocity = 7;
  bool has_angularvelocity() const;
  void clear_angularvelocity();
  static const int kAngularVelocityFieldNumber = 7;
  float angularvelocity() const;
  void set_angularvelocity(float value);

  // required int32 gunNum = 8;
  bool has_gunnum() const;
  void clear_gunnum();
  static const int kGunNumFieldNumber = 8;
  ::google::protobuf::int32 gunnum() const;
  void set_gunnum(::google::protobuf::int32 value);

  // required float gunDemage = 9;
  bool has_gundemage() const;
  void clear_gundemage();
  static const int kGunDemageFieldNumber = 9;
  float gundemage() const;
  void set_gundemage(float value);

  // required int32 gunMagazineCapacity = 10;
  bool has_gunmagazinecapacity() const;
  void clear_gunmagazinecapacity();
  static const int kGunMagazineCapacityFieldNumber = 10;
  ::google::protobuf::int32 gunmagazinecapacity() const;
  void set_gunmagazinecapacity(::google::protobuf::int32 value);

  // required float gunFireRate = 11;
  bool has_gunfirerate() const;
  void clear_gunfirerate();
  static const int kGunFireRateFieldNumber = 11;
  float gunfirerate() const;
  void set_gunfirerate(float value);

  // required float gunFireRange = 12;
  bool has_gunfirerange() const;
  void clear_gunfirerange();
  static const int kGunFireRangeFieldNumber = 12;
  float gunfirerange() const;
  void set_gunfirerange(float value);

  // required float missileDemage = 13;
  bool has_missiledemage() const;
  void clear_missiledemage();
  static const int kMissileDemageFieldNumber = 13;
  float missiledemage() const;
  void set_missiledemage(float value);

  // required int32 missileNum = 14;
  bool has_missilenum() const;
  void clear_missilenum();
  static const int kMissileNumFieldNumber = 14;
  ::google::protobuf::int32 missilenum() const;
  void set_missilenum(::google::protobuf::int32 value);

  // required float missileSpeed = 15;
  bool has_missilespeed() const;
  void clear_missilespeed();
  static const int kMissileSpeedFieldNumber = 15;
  float missilespeed() const;
  void set_missilespeed(float value);

  // required float missileMaxAngularVelocity = 16;
  bool has_missilemaxangularvelocity() const;
  void clear_missilemaxangularvelocity();
  static const int kMissileMaxAngularVelocityFieldNumber = 16;
  float missilemaxangularvelocity() const;
  void set_missilemaxangularvelocity(float value);

  // required float bombDemage = 17;
  bool has_bombdemage() const;
  void clear_bombdemage();
  static const int kBombDemageFieldNumber = 17;
  float bombdemage() const;
  void set_bombdemage(float value);

  // required float bombNum = 18;
  bool has_bombnum() const;
  void clear_bombnum();
  static const int kBombNumFieldNumber = 18;
  float bombnum() const;
  void set_bombnum(float value);

  // required float bombFireRate = 19;
  bool has_bombfirerate() const;
  void clear_bombfirerate();
  static const int kBombFireRateFieldNumber = 19;
  float bombfirerate() const;
  void set_bombfirerate(float value);

  // required int32 campId = 20;
  bool has_campid() const;
  void clear_campid();
  static const int kCampIdFieldNumber = 20;
  ::google::protobuf::int32 campid() const;
  void set_campid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.RoleInfoResponse)
 private:
  inline void set_has_seatid();
  inline void clear_has_seatid();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_max_speed();
  inline void clear_has_max_speed();
  inline void set_has_min_speed();
  inline void clear_has_min_speed();
  inline void set_has_degree();
  inline void clear_has_degree();
  inline void set_has_angularvelocity();
  inline void clear_has_angularvelocity();
  inline void set_has_gunnum();
  inline void clear_has_gunnum();
  inline void set_has_gundemage();
  inline void clear_has_gundemage();
  inline void set_has_gunmagazinecapacity();
  inline void clear_has_gunmagazinecapacity();
  inline void set_has_gunfirerate();
  inline void clear_has_gunfirerate();
  inline void set_has_gunfirerange();
  inline void clear_has_gunfirerange();
  inline void set_has_missiledemage();
  inline void clear_has_missiledemage();
  inline void set_has_missilenum();
  inline void clear_has_missilenum();
  inline void set_has_missilespeed();
  inline void clear_has_missilespeed();
  inline void set_has_missilemaxangularvelocity();
  inline void clear_has_missilemaxangularvelocity();
  inline void set_has_bombdemage();
  inline void clear_has_bombdemage();
  inline void set_has_bombnum();
  inline void clear_has_bombnum();
  inline void set_has_bombfirerate();
  inline void clear_has_bombfirerate();
  inline void set_has_campid();
  inline void clear_has_campid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 seatid_;
  float x_;
  float y_;
  float max_speed_;
  float min_speed_;
  float degree_;
  float angularvelocity_;
  ::google::protobuf::int32 gunnum_;
  float gundemage_;
  ::google::protobuf::int32 gunmagazinecapacity_;
  float gunfirerate_;
  float gunfirerange_;
  float missiledemage_;
  ::google::protobuf::int32 missilenum_;
  float missilespeed_;
  float missilemaxangularvelocity_;
  float bombdemage_;
  float bombnum_;
  float bombfirerate_;
  ::google::protobuf::int32 campid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RoleInfoResponse> RoleInfoResponse_default_instance_;

// -------------------------------------------------------------------

class FrameNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.FrameNotification) */ {
 public:
  FrameNotification();
  virtual ~FrameNotification();

  FrameNotification(const FrameNotification& from);

  inline FrameNotification& operator=(const FrameNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameNotification& default_instance();

  static const FrameNotification* internal_default_instance();

  void Swap(FrameNotification* other);

  // implements Message ----------------------------------------------

  inline FrameNotification* New() const { return New(NULL); }

  FrameNotification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrameNotification& from);
  void MergeFrom(const FrameNotification& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FrameNotification* other);
  void UnsafeMergeFrom(const FrameNotification& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 frameId = 1;
  bool has_frameid() const;
  void clear_frameid();
  static const int kFrameIdFieldNumber = 1;
  ::google::protobuf::int32 frameid() const;
  void set_frameid(::google::protobuf::int32 value);

  // repeated .khero.OperateRequest operates = 2;
  int operates_size() const;
  void clear_operates();
  static const int kOperatesFieldNumber = 2;
  const ::khero::OperateRequest& operates(int index) const;
  ::khero::OperateRequest* mutable_operates(int index);
  ::khero::OperateRequest* add_operates();
  ::google::protobuf::RepeatedPtrField< ::khero::OperateRequest >*
      mutable_operates();
  const ::google::protobuf::RepeatedPtrField< ::khero::OperateRequest >&
      operates() const;

  // @@protoc_insertion_point(class_scope:khero.FrameNotification)
 private:
  inline void set_has_frameid();
  inline void clear_has_frameid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::khero::OperateRequest > operates_;
  ::google::protobuf::int32 frameid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FrameNotification> FrameNotification_default_instance_;

// -------------------------------------------------------------------

class GameStartNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.GameStartNotification) */ {
 public:
  GameStartNotification();
  virtual ~GameStartNotification();

  GameStartNotification(const GameStartNotification& from);

  inline GameStartNotification& operator=(const GameStartNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStartNotification& default_instance();

  static const GameStartNotification* internal_default_instance();

  void Swap(GameStartNotification* other);

  // implements Message ----------------------------------------------

  inline GameStartNotification* New() const { return New(NULL); }

  GameStartNotification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameStartNotification& from);
  void MergeFrom(const GameStartNotification& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GameStartNotification* other);
  void UnsafeMergeFrom(const GameStartNotification& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:khero.GameStartNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GameStartNotification> GameStartNotification_default_instance_;

// -------------------------------------------------------------------

class LoadingCompleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:khero.LoadingCompleteRequest) */ {
 public:
  LoadingCompleteRequest();
  virtual ~LoadingCompleteRequest();

  LoadingCompleteRequest(const LoadingCompleteRequest& from);

  inline LoadingCompleteRequest& operator=(const LoadingCompleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadingCompleteRequest& default_instance();

  static const LoadingCompleteRequest* internal_default_instance();

  void Swap(LoadingCompleteRequest* other);

  // implements Message ----------------------------------------------

  inline LoadingCompleteRequest* New() const { return New(NULL); }

  LoadingCompleteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadingCompleteRequest& from);
  void MergeFrom(const LoadingCompleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadingCompleteRequest* other);
  void UnsafeMergeFrom(const LoadingCompleteRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 homeId = 1;
  bool has_homeid() const;
  void clear_homeid();
  static const int kHomeIdFieldNumber = 1;
  ::google::protobuf::int32 homeid() const;
  void set_homeid(::google::protobuf::int32 value);

  // required int32 seatId = 2;
  bool has_seatid() const;
  void clear_seatid();
  static const int kSeatIdFieldNumber = 2;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:khero.LoadingCompleteRequest)
 private:
  inline void set_has_homeid();
  inline void clear_has_homeid();
  inline void set_has_seatid();
  inline void clear_has_seatid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 homeid_;
  ::google::protobuf::int32 seatid_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoadingCompleteRequest> LoadingCompleteRequest_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Command

// optional .khero.DebugCommand debug = 1;
inline bool Command::has_debug() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Command::set_has_debug() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Command::clear_has_debug() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Command::clear_debug() {
  if (debug_ != NULL) debug_->::khero::DebugCommand::Clear();
  clear_has_debug();
}
inline const ::khero::DebugCommand& Command::debug() const {
  // @@protoc_insertion_point(field_get:khero.Command.debug)
  return debug_ != NULL ? *debug_
                         : *::khero::DebugCommand::internal_default_instance();
}
inline ::khero::DebugCommand* Command::mutable_debug() {
  set_has_debug();
  if (debug_ == NULL) {
    debug_ = new ::khero::DebugCommand;
  }
  // @@protoc_insertion_point(field_mutable:khero.Command.debug)
  return debug_;
}
inline ::khero::DebugCommand* Command::release_debug() {
  // @@protoc_insertion_point(field_release:khero.Command.debug)
  clear_has_debug();
  ::khero::DebugCommand* temp = debug_;
  debug_ = NULL;
  return temp;
}
inline void Command::set_allocated_debug(::khero::DebugCommand* debug) {
  delete debug_;
  debug_ = debug;
  if (debug) {
    set_has_debug();
  } else {
    clear_has_debug();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Command.debug)
}

inline const Command* Command::internal_default_instance() {
  return &Command_default_instance_.get();
}
// -------------------------------------------------------------------

// Request

// optional .khero.RegisterRequest register = 1;
inline bool Request::has_register_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_register_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_register_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_register_() {
  if (register__ != NULL) register__->::khero::RegisterRequest::Clear();
  clear_has_register_();
}
inline const ::khero::RegisterRequest& Request::register_() const {
  // @@protoc_insertion_point(field_get:khero.Request.register)
  return register__ != NULL ? *register__
                         : *::khero::RegisterRequest::internal_default_instance();
}
inline ::khero::RegisterRequest* Request::mutable_register_() {
  set_has_register_();
  if (register__ == NULL) {
    register__ = new ::khero::RegisterRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.register)
  return register__;
}
inline ::khero::RegisterRequest* Request::release_register_() {
  // @@protoc_insertion_point(field_release:khero.Request.register)
  clear_has_register_();
  ::khero::RegisterRequest* temp = register__;
  register__ = NULL;
  return temp;
}
inline void Request::set_allocated_register_(::khero::RegisterRequest* register_) {
  delete register__;
  register__ = register_;
  if (register_) {
    set_has_register_();
  } else {
    clear_has_register_();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.register)
}

// optional .khero.LoginRequest login = 2;
inline bool Request::has_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_login() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_login() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_login() {
  if (login_ != NULL) login_->::khero::LoginRequest::Clear();
  clear_has_login();
}
inline const ::khero::LoginRequest& Request::login() const {
  // @@protoc_insertion_point(field_get:khero.Request.login)
  return login_ != NULL ? *login_
                         : *::khero::LoginRequest::internal_default_instance();
}
inline ::khero::LoginRequest* Request::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::khero::LoginRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.login)
  return login_;
}
inline ::khero::LoginRequest* Request::release_login() {
  // @@protoc_insertion_point(field_release:khero.Request.login)
  clear_has_login();
  ::khero::LoginRequest* temp = login_;
  login_ = NULL;
  return temp;
}
inline void Request::set_allocated_login(::khero::LoginRequest* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.login)
}

// optional .khero.OperateRequest operate = 3;
inline bool Request::has_operate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_operate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_operate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_operate() {
  if (operate_ != NULL) operate_->::khero::OperateRequest::Clear();
  clear_has_operate();
}
inline const ::khero::OperateRequest& Request::operate() const {
  // @@protoc_insertion_point(field_get:khero.Request.operate)
  return operate_ != NULL ? *operate_
                         : *::khero::OperateRequest::internal_default_instance();
}
inline ::khero::OperateRequest* Request::mutable_operate() {
  set_has_operate();
  if (operate_ == NULL) {
    operate_ = new ::khero::OperateRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.operate)
  return operate_;
}
inline ::khero::OperateRequest* Request::release_operate() {
  // @@protoc_insertion_point(field_release:khero.Request.operate)
  clear_has_operate();
  ::khero::OperateRequest* temp = operate_;
  operate_ = NULL;
  return temp;
}
inline void Request::set_allocated_operate(::khero::OperateRequest* operate) {
  delete operate_;
  operate_ = operate;
  if (operate) {
    set_has_operate();
  } else {
    clear_has_operate();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.operate)
}

// optional .khero.GameStartRequest gameStart = 4;
inline bool Request::has_gamestart() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_gamestart() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_gamestart() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_gamestart() {
  if (gamestart_ != NULL) gamestart_->::khero::GameStartRequest::Clear();
  clear_has_gamestart();
}
inline const ::khero::GameStartRequest& Request::gamestart() const {
  // @@protoc_insertion_point(field_get:khero.Request.gameStart)
  return gamestart_ != NULL ? *gamestart_
                         : *::khero::GameStartRequest::internal_default_instance();
}
inline ::khero::GameStartRequest* Request::mutable_gamestart() {
  set_has_gamestart();
  if (gamestart_ == NULL) {
    gamestart_ = new ::khero::GameStartRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.gameStart)
  return gamestart_;
}
inline ::khero::GameStartRequest* Request::release_gamestart() {
  // @@protoc_insertion_point(field_release:khero.Request.gameStart)
  clear_has_gamestart();
  ::khero::GameStartRequest* temp = gamestart_;
  gamestart_ = NULL;
  return temp;
}
inline void Request::set_allocated_gamestart(::khero::GameStartRequest* gamestart) {
  delete gamestart_;
  gamestart_ = gamestart;
  if (gamestart) {
    set_has_gamestart();
  } else {
    clear_has_gamestart();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.gameStart)
}

// optional .khero.CreateHomeRequest createHome = 5;
inline bool Request::has_createhome() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_createhome() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_createhome() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_createhome() {
  if (createhome_ != NULL) createhome_->::khero::CreateHomeRequest::Clear();
  clear_has_createhome();
}
inline const ::khero::CreateHomeRequest& Request::createhome() const {
  // @@protoc_insertion_point(field_get:khero.Request.createHome)
  return createhome_ != NULL ? *createhome_
                         : *::khero::CreateHomeRequest::internal_default_instance();
}
inline ::khero::CreateHomeRequest* Request::mutable_createhome() {
  set_has_createhome();
  if (createhome_ == NULL) {
    createhome_ = new ::khero::CreateHomeRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.createHome)
  return createhome_;
}
inline ::khero::CreateHomeRequest* Request::release_createhome() {
  // @@protoc_insertion_point(field_release:khero.Request.createHome)
  clear_has_createhome();
  ::khero::CreateHomeRequest* temp = createhome_;
  createhome_ = NULL;
  return temp;
}
inline void Request::set_allocated_createhome(::khero::CreateHomeRequest* createhome) {
  delete createhome_;
  createhome_ = createhome;
  if (createhome) {
    set_has_createhome();
  } else {
    clear_has_createhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.createHome)
}

// optional .khero.JoinHomeRequest joinHome = 6;
inline bool Request::has_joinhome() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request::set_has_joinhome() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request::clear_has_joinhome() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request::clear_joinhome() {
  if (joinhome_ != NULL) joinhome_->::khero::JoinHomeRequest::Clear();
  clear_has_joinhome();
}
inline const ::khero::JoinHomeRequest& Request::joinhome() const {
  // @@protoc_insertion_point(field_get:khero.Request.joinHome)
  return joinhome_ != NULL ? *joinhome_
                         : *::khero::JoinHomeRequest::internal_default_instance();
}
inline ::khero::JoinHomeRequest* Request::mutable_joinhome() {
  set_has_joinhome();
  if (joinhome_ == NULL) {
    joinhome_ = new ::khero::JoinHomeRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.joinHome)
  return joinhome_;
}
inline ::khero::JoinHomeRequest* Request::release_joinhome() {
  // @@protoc_insertion_point(field_release:khero.Request.joinHome)
  clear_has_joinhome();
  ::khero::JoinHomeRequest* temp = joinhome_;
  joinhome_ = NULL;
  return temp;
}
inline void Request::set_allocated_joinhome(::khero::JoinHomeRequest* joinhome) {
  delete joinhome_;
  joinhome_ = joinhome;
  if (joinhome) {
    set_has_joinhome();
  } else {
    clear_has_joinhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.joinHome)
}

// optional .khero.HomeInfoRequest homeInfo = 7;
inline bool Request::has_homeinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request::set_has_homeinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request::clear_has_homeinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request::clear_homeinfo() {
  if (homeinfo_ != NULL) homeinfo_->::khero::HomeInfoRequest::Clear();
  clear_has_homeinfo();
}
inline const ::khero::HomeInfoRequest& Request::homeinfo() const {
  // @@protoc_insertion_point(field_get:khero.Request.homeInfo)
  return homeinfo_ != NULL ? *homeinfo_
                         : *::khero::HomeInfoRequest::internal_default_instance();
}
inline ::khero::HomeInfoRequest* Request::mutable_homeinfo() {
  set_has_homeinfo();
  if (homeinfo_ == NULL) {
    homeinfo_ = new ::khero::HomeInfoRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.homeInfo)
  return homeinfo_;
}
inline ::khero::HomeInfoRequest* Request::release_homeinfo() {
  // @@protoc_insertion_point(field_release:khero.Request.homeInfo)
  clear_has_homeinfo();
  ::khero::HomeInfoRequest* temp = homeinfo_;
  homeinfo_ = NULL;
  return temp;
}
inline void Request::set_allocated_homeinfo(::khero::HomeInfoRequest* homeinfo) {
  delete homeinfo_;
  homeinfo_ = homeinfo;
  if (homeinfo) {
    set_has_homeinfo();
  } else {
    clear_has_homeinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.homeInfo)
}

// optional .khero.RoleListRequest roleList = 8;
inline bool Request::has_rolelist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request::set_has_rolelist() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request::clear_has_rolelist() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request::clear_rolelist() {
  if (rolelist_ != NULL) rolelist_->::khero::RoleListRequest::Clear();
  clear_has_rolelist();
}
inline const ::khero::RoleListRequest& Request::rolelist() const {
  // @@protoc_insertion_point(field_get:khero.Request.roleList)
  return rolelist_ != NULL ? *rolelist_
                         : *::khero::RoleListRequest::internal_default_instance();
}
inline ::khero::RoleListRequest* Request::mutable_rolelist() {
  set_has_rolelist();
  if (rolelist_ == NULL) {
    rolelist_ = new ::khero::RoleListRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.roleList)
  return rolelist_;
}
inline ::khero::RoleListRequest* Request::release_rolelist() {
  // @@protoc_insertion_point(field_release:khero.Request.roleList)
  clear_has_rolelist();
  ::khero::RoleListRequest* temp = rolelist_;
  rolelist_ = NULL;
  return temp;
}
inline void Request::set_allocated_rolelist(::khero::RoleListRequest* rolelist) {
  delete rolelist_;
  rolelist_ = rolelist;
  if (rolelist) {
    set_has_rolelist();
  } else {
    clear_has_rolelist();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.roleList)
}

// optional .khero.RoleInfoRequest roleInfo = 9;
inline bool Request::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::khero::RoleInfoRequest::Clear();
  clear_has_roleinfo();
}
inline const ::khero::RoleInfoRequest& Request::roleinfo() const {
  // @@protoc_insertion_point(field_get:khero.Request.roleInfo)
  return roleinfo_ != NULL ? *roleinfo_
                         : *::khero::RoleInfoRequest::internal_default_instance();
}
inline ::khero::RoleInfoRequest* Request::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) {
    roleinfo_ = new ::khero::RoleInfoRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.roleInfo)
  return roleinfo_;
}
inline ::khero::RoleInfoRequest* Request::release_roleinfo() {
  // @@protoc_insertion_point(field_release:khero.Request.roleInfo)
  clear_has_roleinfo();
  ::khero::RoleInfoRequest* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
inline void Request::set_allocated_roleinfo(::khero::RoleInfoRequest* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.roleInfo)
}

// optional .khero.LoadingCompleteRequest ready = 10;
inline bool Request::has_ready() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Request::set_has_ready() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Request::clear_has_ready() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Request::clear_ready() {
  if (ready_ != NULL) ready_->::khero::LoadingCompleteRequest::Clear();
  clear_has_ready();
}
inline const ::khero::LoadingCompleteRequest& Request::ready() const {
  // @@protoc_insertion_point(field_get:khero.Request.ready)
  return ready_ != NULL ? *ready_
                         : *::khero::LoadingCompleteRequest::internal_default_instance();
}
inline ::khero::LoadingCompleteRequest* Request::mutable_ready() {
  set_has_ready();
  if (ready_ == NULL) {
    ready_ = new ::khero::LoadingCompleteRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.ready)
  return ready_;
}
inline ::khero::LoadingCompleteRequest* Request::release_ready() {
  // @@protoc_insertion_point(field_release:khero.Request.ready)
  clear_has_ready();
  ::khero::LoadingCompleteRequest* temp = ready_;
  ready_ = NULL;
  return temp;
}
inline void Request::set_allocated_ready(::khero::LoadingCompleteRequest* ready) {
  delete ready_;
  ready_ = ready;
  if (ready) {
    set_has_ready();
  } else {
    clear_has_ready();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.ready)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
// -------------------------------------------------------------------

// Response

// required bool result = 1;
inline bool Response::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool Response::result() const {
  // @@protoc_insertion_point(field_get:khero.Response.result)
  return result_;
}
inline void Response::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.Response.result)
}

// required bool last_response = 2;
inline bool Response::has_last_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_last_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_last_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_last_response() {
  last_response_ = false;
  clear_has_last_response();
}
inline bool Response::last_response() const {
  // @@protoc_insertion_point(field_get:khero.Response.last_response)
  return last_response_;
}
inline void Response::set_last_response(bool value) {
  set_has_last_response();
  last_response_ = value;
  // @@protoc_insertion_point(field_set:khero.Response.last_response)
}

// optional bytes error_describe = 3;
inline bool Response::has_error_describe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_error_describe() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_error_describe() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_error_describe() {
  error_describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_describe();
}
inline const ::std::string& Response::error_describe() const {
  // @@protoc_insertion_point(field_get:khero.Response.error_describe)
  return error_describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_error_describe(const ::std::string& value) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.Response.error_describe)
}
inline void Response::set_error_describe(const char* value) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.Response.error_describe)
}
inline void Response::set_error_describe(const void* value, size_t size) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.Response.error_describe)
}
inline ::std::string* Response::mutable_error_describe() {
  set_has_error_describe();
  // @@protoc_insertion_point(field_mutable:khero.Response.error_describe)
  return error_describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_error_describe() {
  // @@protoc_insertion_point(field_release:khero.Response.error_describe)
  clear_has_error_describe();
  return error_describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_error_describe(::std::string* error_describe) {
  if (error_describe != NULL) {
    set_has_error_describe();
  } else {
    clear_has_error_describe();
  }
  error_describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_describe);
  // @@protoc_insertion_point(field_set_allocated:khero.Response.error_describe)
}

// optional .khero.RegisterResponse register = 4;
inline bool Response::has_register_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_register_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_register_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_register_() {
  if (register__ != NULL) register__->::khero::RegisterResponse::Clear();
  clear_has_register_();
}
inline const ::khero::RegisterResponse& Response::register_() const {
  // @@protoc_insertion_point(field_get:khero.Response.register)
  return register__ != NULL ? *register__
                         : *::khero::RegisterResponse::internal_default_instance();
}
inline ::khero::RegisterResponse* Response::mutable_register_() {
  set_has_register_();
  if (register__ == NULL) {
    register__ = new ::khero::RegisterResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.register)
  return register__;
}
inline ::khero::RegisterResponse* Response::release_register_() {
  // @@protoc_insertion_point(field_release:khero.Response.register)
  clear_has_register_();
  ::khero::RegisterResponse* temp = register__;
  register__ = NULL;
  return temp;
}
inline void Response::set_allocated_register_(::khero::RegisterResponse* register_) {
  delete register__;
  register__ = register_;
  if (register_) {
    set_has_register_();
  } else {
    clear_has_register_();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.register)
}

// optional .khero.LoginResponse login = 5;
inline bool Response::has_login() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Response::set_has_login() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Response::clear_has_login() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Response::clear_login() {
  if (login_ != NULL) login_->::khero::LoginResponse::Clear();
  clear_has_login();
}
inline const ::khero::LoginResponse& Response::login() const {
  // @@protoc_insertion_point(field_get:khero.Response.login)
  return login_ != NULL ? *login_
                         : *::khero::LoginResponse::internal_default_instance();
}
inline ::khero::LoginResponse* Response::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::khero::LoginResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.login)
  return login_;
}
inline ::khero::LoginResponse* Response::release_login() {
  // @@protoc_insertion_point(field_release:khero.Response.login)
  clear_has_login();
  ::khero::LoginResponse* temp = login_;
  login_ = NULL;
  return temp;
}
inline void Response::set_allocated_login(::khero::LoginResponse* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.login)
}

// optional .khero.CreateHomeResponse createHome = 6;
inline bool Response::has_createhome() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response::set_has_createhome() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response::clear_has_createhome() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response::clear_createhome() {
  if (createhome_ != NULL) createhome_->::khero::CreateHomeResponse::Clear();
  clear_has_createhome();
}
inline const ::khero::CreateHomeResponse& Response::createhome() const {
  // @@protoc_insertion_point(field_get:khero.Response.createHome)
  return createhome_ != NULL ? *createhome_
                         : *::khero::CreateHomeResponse::internal_default_instance();
}
inline ::khero::CreateHomeResponse* Response::mutable_createhome() {
  set_has_createhome();
  if (createhome_ == NULL) {
    createhome_ = new ::khero::CreateHomeResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.createHome)
  return createhome_;
}
inline ::khero::CreateHomeResponse* Response::release_createhome() {
  // @@protoc_insertion_point(field_release:khero.Response.createHome)
  clear_has_createhome();
  ::khero::CreateHomeResponse* temp = createhome_;
  createhome_ = NULL;
  return temp;
}
inline void Response::set_allocated_createhome(::khero::CreateHomeResponse* createhome) {
  delete createhome_;
  createhome_ = createhome;
  if (createhome) {
    set_has_createhome();
  } else {
    clear_has_createhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.createHome)
}

// optional .khero.JoinHomeResponse joinHome = 7;
inline bool Response::has_joinhome() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Response::set_has_joinhome() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Response::clear_has_joinhome() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Response::clear_joinhome() {
  if (joinhome_ != NULL) joinhome_->::khero::JoinHomeResponse::Clear();
  clear_has_joinhome();
}
inline const ::khero::JoinHomeResponse& Response::joinhome() const {
  // @@protoc_insertion_point(field_get:khero.Response.joinHome)
  return joinhome_ != NULL ? *joinhome_
                         : *::khero::JoinHomeResponse::internal_default_instance();
}
inline ::khero::JoinHomeResponse* Response::mutable_joinhome() {
  set_has_joinhome();
  if (joinhome_ == NULL) {
    joinhome_ = new ::khero::JoinHomeResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.joinHome)
  return joinhome_;
}
inline ::khero::JoinHomeResponse* Response::release_joinhome() {
  // @@protoc_insertion_point(field_release:khero.Response.joinHome)
  clear_has_joinhome();
  ::khero::JoinHomeResponse* temp = joinhome_;
  joinhome_ = NULL;
  return temp;
}
inline void Response::set_allocated_joinhome(::khero::JoinHomeResponse* joinhome) {
  delete joinhome_;
  joinhome_ = joinhome;
  if (joinhome) {
    set_has_joinhome();
  } else {
    clear_has_joinhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.joinHome)
}

// optional .khero.HomeInfoResponse homeInfo = 8;
inline bool Response::has_homeinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Response::set_has_homeinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Response::clear_has_homeinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Response::clear_homeinfo() {
  if (homeinfo_ != NULL) homeinfo_->::khero::HomeInfoResponse::Clear();
  clear_has_homeinfo();
}
inline const ::khero::HomeInfoResponse& Response::homeinfo() const {
  // @@protoc_insertion_point(field_get:khero.Response.homeInfo)
  return homeinfo_ != NULL ? *homeinfo_
                         : *::khero::HomeInfoResponse::internal_default_instance();
}
inline ::khero::HomeInfoResponse* Response::mutable_homeinfo() {
  set_has_homeinfo();
  if (homeinfo_ == NULL) {
    homeinfo_ = new ::khero::HomeInfoResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.homeInfo)
  return homeinfo_;
}
inline ::khero::HomeInfoResponse* Response::release_homeinfo() {
  // @@protoc_insertion_point(field_release:khero.Response.homeInfo)
  clear_has_homeinfo();
  ::khero::HomeInfoResponse* temp = homeinfo_;
  homeinfo_ = NULL;
  return temp;
}
inline void Response::set_allocated_homeinfo(::khero::HomeInfoResponse* homeinfo) {
  delete homeinfo_;
  homeinfo_ = homeinfo;
  if (homeinfo) {
    set_has_homeinfo();
  } else {
    clear_has_homeinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.homeInfo)
}

// optional .khero.RoleListResponse roleList = 9;
inline bool Response::has_rolelist() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Response::set_has_rolelist() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Response::clear_has_rolelist() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Response::clear_rolelist() {
  if (rolelist_ != NULL) rolelist_->::khero::RoleListResponse::Clear();
  clear_has_rolelist();
}
inline const ::khero::RoleListResponse& Response::rolelist() const {
  // @@protoc_insertion_point(field_get:khero.Response.roleList)
  return rolelist_ != NULL ? *rolelist_
                         : *::khero::RoleListResponse::internal_default_instance();
}
inline ::khero::RoleListResponse* Response::mutable_rolelist() {
  set_has_rolelist();
  if (rolelist_ == NULL) {
    rolelist_ = new ::khero::RoleListResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.roleList)
  return rolelist_;
}
inline ::khero::RoleListResponse* Response::release_rolelist() {
  // @@protoc_insertion_point(field_release:khero.Response.roleList)
  clear_has_rolelist();
  ::khero::RoleListResponse* temp = rolelist_;
  rolelist_ = NULL;
  return temp;
}
inline void Response::set_allocated_rolelist(::khero::RoleListResponse* rolelist) {
  delete rolelist_;
  rolelist_ = rolelist;
  if (rolelist) {
    set_has_rolelist();
  } else {
    clear_has_rolelist();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.roleList)
}

// optional .khero.RoleInfoResponse roleInfo = 10;
inline bool Response::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Response::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Response::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Response::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::khero::RoleInfoResponse::Clear();
  clear_has_roleinfo();
}
inline const ::khero::RoleInfoResponse& Response::roleinfo() const {
  // @@protoc_insertion_point(field_get:khero.Response.roleInfo)
  return roleinfo_ != NULL ? *roleinfo_
                         : *::khero::RoleInfoResponse::internal_default_instance();
}
inline ::khero::RoleInfoResponse* Response::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) {
    roleinfo_ = new ::khero::RoleInfoResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.roleInfo)
  return roleinfo_;
}
inline ::khero::RoleInfoResponse* Response::release_roleinfo() {
  // @@protoc_insertion_point(field_release:khero.Response.roleInfo)
  clear_has_roleinfo();
  ::khero::RoleInfoResponse* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
inline void Response::set_allocated_roleinfo(::khero::RoleInfoResponse* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.roleInfo)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
// -------------------------------------------------------------------

// Notification

// optional .khero.WelcomeNotification welcome = 1;
inline bool Notification::has_welcome() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Notification::set_has_welcome() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Notification::clear_has_welcome() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Notification::clear_welcome() {
  if (welcome_ != NULL) welcome_->::khero::WelcomeNotification::Clear();
  clear_has_welcome();
}
inline const ::khero::WelcomeNotification& Notification::welcome() const {
  // @@protoc_insertion_point(field_get:khero.Notification.welcome)
  return welcome_ != NULL ? *welcome_
                         : *::khero::WelcomeNotification::internal_default_instance();
}
inline ::khero::WelcomeNotification* Notification::mutable_welcome() {
  set_has_welcome();
  if (welcome_ == NULL) {
    welcome_ = new ::khero::WelcomeNotification;
  }
  // @@protoc_insertion_point(field_mutable:khero.Notification.welcome)
  return welcome_;
}
inline ::khero::WelcomeNotification* Notification::release_welcome() {
  // @@protoc_insertion_point(field_release:khero.Notification.welcome)
  clear_has_welcome();
  ::khero::WelcomeNotification* temp = welcome_;
  welcome_ = NULL;
  return temp;
}
inline void Notification::set_allocated_welcome(::khero::WelcomeNotification* welcome) {
  delete welcome_;
  welcome_ = welcome;
  if (welcome) {
    set_has_welcome();
  } else {
    clear_has_welcome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Notification.welcome)
}

// optional .khero.FrameNotification frame = 2;
inline bool Notification::has_frame() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Notification::set_has_frame() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Notification::clear_has_frame() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Notification::clear_frame() {
  if (frame_ != NULL) frame_->::khero::FrameNotification::Clear();
  clear_has_frame();
}
inline const ::khero::FrameNotification& Notification::frame() const {
  // @@protoc_insertion_point(field_get:khero.Notification.frame)
  return frame_ != NULL ? *frame_
                         : *::khero::FrameNotification::internal_default_instance();
}
inline ::khero::FrameNotification* Notification::mutable_frame() {
  set_has_frame();
  if (frame_ == NULL) {
    frame_ = new ::khero::FrameNotification;
  }
  // @@protoc_insertion_point(field_mutable:khero.Notification.frame)
  return frame_;
}
inline ::khero::FrameNotification* Notification::release_frame() {
  // @@protoc_insertion_point(field_release:khero.Notification.frame)
  clear_has_frame();
  ::khero::FrameNotification* temp = frame_;
  frame_ = NULL;
  return temp;
}
inline void Notification::set_allocated_frame(::khero::FrameNotification* frame) {
  delete frame_;
  frame_ = frame;
  if (frame) {
    set_has_frame();
  } else {
    clear_has_frame();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Notification.frame)
}

// optional .khero.GameStartNotification gameStart = 3;
inline bool Notification::has_gamestart() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Notification::set_has_gamestart() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Notification::clear_has_gamestart() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Notification::clear_gamestart() {
  if (gamestart_ != NULL) gamestart_->::khero::GameStartNotification::Clear();
  clear_has_gamestart();
}
inline const ::khero::GameStartNotification& Notification::gamestart() const {
  // @@protoc_insertion_point(field_get:khero.Notification.gameStart)
  return gamestart_ != NULL ? *gamestart_
                         : *::khero::GameStartNotification::internal_default_instance();
}
inline ::khero::GameStartNotification* Notification::mutable_gamestart() {
  set_has_gamestart();
  if (gamestart_ == NULL) {
    gamestart_ = new ::khero::GameStartNotification;
  }
  // @@protoc_insertion_point(field_mutable:khero.Notification.gameStart)
  return gamestart_;
}
inline ::khero::GameStartNotification* Notification::release_gamestart() {
  // @@protoc_insertion_point(field_release:khero.Notification.gameStart)
  clear_has_gamestart();
  ::khero::GameStartNotification* temp = gamestart_;
  gamestart_ = NULL;
  return temp;
}
inline void Notification::set_allocated_gamestart(::khero::GameStartNotification* gamestart) {
  delete gamestart_;
  gamestart_ = gamestart;
  if (gamestart) {
    set_has_gamestart();
  } else {
    clear_has_gamestart();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Notification.gameStart)
}

inline const Notification* Notification::internal_default_instance() {
  return &Notification_default_instance_.get();
}
// -------------------------------------------------------------------

// DebugCommand

// required string command = 1;
inline bool DebugCommand::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DebugCommand::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DebugCommand::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DebugCommand::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
inline const ::std::string& DebugCommand::command() const {
  // @@protoc_insertion_point(field_get:khero.DebugCommand.command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugCommand::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.DebugCommand.command)
}
inline void DebugCommand::set_command(const char* value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.DebugCommand.command)
}
inline void DebugCommand::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.DebugCommand.command)
}
inline ::std::string* DebugCommand::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:khero.DebugCommand.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DebugCommand::release_command() {
  // @@protoc_insertion_point(field_release:khero.DebugCommand.command)
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DebugCommand::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:khero.DebugCommand.command)
}

inline const DebugCommand* DebugCommand::internal_default_instance() {
  return &DebugCommand_default_instance_.get();
}
// -------------------------------------------------------------------

// RegisterRequest

// required string username = 1;
inline bool RegisterRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& RegisterRequest::username() const {
  // @@protoc_insertion_point(field_get:khero.RegisterRequest.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.RegisterRequest.username)
}
inline void RegisterRequest::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.RegisterRequest.username)
}
inline void RegisterRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.RegisterRequest.username)
}
inline ::std::string* RegisterRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:khero.RegisterRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterRequest::release_username() {
  // @@protoc_insertion_point(field_release:khero.RegisterRequest.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:khero.RegisterRequest.username)
}

// required string password = 2;
inline bool RegisterRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& RegisterRequest::password() const {
  // @@protoc_insertion_point(field_get:khero.RegisterRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.RegisterRequest.password)
}
inline void RegisterRequest::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.RegisterRequest.password)
}
inline void RegisterRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.RegisterRequest.password)
}
inline ::std::string* RegisterRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:khero.RegisterRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterRequest::release_password() {
  // @@protoc_insertion_point(field_release:khero.RegisterRequest.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:khero.RegisterRequest.password)
}

inline const RegisterRequest* RegisterRequest::internal_default_instance() {
  return &RegisterRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// RegisterResponse

// required bool result = 1;
inline bool RegisterResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool RegisterResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.RegisterResponse.result)
  return result_;
}
inline void RegisterResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.RegisterResponse.result)
}

// optional string text = 2;
inline bool RegisterResponse::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterResponse::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& RegisterResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.RegisterResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.RegisterResponse.text)
}
inline void RegisterResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.RegisterResponse.text)
}
inline void RegisterResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.RegisterResponse.text)
}
inline ::std::string* RegisterResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.RegisterResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.RegisterResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.RegisterResponse.text)
}

inline const RegisterResponse* RegisterResponse::internal_default_instance() {
  return &RegisterResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginRequest

// required string username = 1;
inline bool LoginRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:khero.LoginRequest.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.LoginRequest.username)
}
inline void LoginRequest::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.LoginRequest.username)
}
inline void LoginRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.LoginRequest.username)
}
inline ::std::string* LoginRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:khero.LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:khero.LoginRequest.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:khero.LoginRequest.username)
}

// required string password = 2;
inline bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:khero.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:khero.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:khero.LoginRequest.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:khero.LoginRequest.password)
}

inline const LoginRequest* LoginRequest::internal_default_instance() {
  return &LoginRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginResponse

// required int32 playerId = 1;
inline bool LoginResponse::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 LoginResponse::playerid() const {
  // @@protoc_insertion_point(field_get:khero.LoginResponse.playerId)
  return playerid_;
}
inline void LoginResponse::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:khero.LoginResponse.playerId)
}

inline const LoginResponse* LoginResponse::internal_default_instance() {
  return &LoginResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// KeyMsg

// required int32 keyCode = 1;
inline bool KeyMsg::has_keycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyMsg::set_has_keycode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyMsg::clear_has_keycode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyMsg::clear_keycode() {
  keycode_ = 0;
  clear_has_keycode();
}
inline ::google::protobuf::int32 KeyMsg::keycode() const {
  // @@protoc_insertion_point(field_get:khero.KeyMsg.keyCode)
  return keycode_;
}
inline void KeyMsg::set_keycode(::google::protobuf::int32 value) {
  set_has_keycode();
  keycode_ = value;
  // @@protoc_insertion_point(field_set:khero.KeyMsg.keyCode)
}

// required bool keyDown = 2;
inline bool KeyMsg::has_keydown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyMsg::set_has_keydown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyMsg::clear_has_keydown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyMsg::clear_keydown() {
  keydown_ = false;
  clear_has_keydown();
}
inline bool KeyMsg::keydown() const {
  // @@protoc_insertion_point(field_get:khero.KeyMsg.keyDown)
  return keydown_;
}
inline void KeyMsg::set_keydown(bool value) {
  set_has_keydown();
  keydown_ = value;
  // @@protoc_insertion_point(field_set:khero.KeyMsg.keyDown)
}

inline const KeyMsg* KeyMsg::internal_default_instance() {
  return &KeyMsg_default_instance_.get();
}
// -------------------------------------------------------------------

// TouchMsg

// required float touchX = 1;
inline bool TouchMsg::has_touchx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TouchMsg::set_has_touchx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TouchMsg::clear_has_touchx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TouchMsg::clear_touchx() {
  touchx_ = 0;
  clear_has_touchx();
}
inline float TouchMsg::touchx() const {
  // @@protoc_insertion_point(field_get:khero.TouchMsg.touchX)
  return touchx_;
}
inline void TouchMsg::set_touchx(float value) {
  set_has_touchx();
  touchx_ = value;
  // @@protoc_insertion_point(field_set:khero.TouchMsg.touchX)
}

// required float touchY = 2;
inline bool TouchMsg::has_touchy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TouchMsg::set_has_touchy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TouchMsg::clear_has_touchy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TouchMsg::clear_touchy() {
  touchy_ = 0;
  clear_has_touchy();
}
inline float TouchMsg::touchy() const {
  // @@protoc_insertion_point(field_get:khero.TouchMsg.touchY)
  return touchy_;
}
inline void TouchMsg::set_touchy(float value) {
  set_has_touchy();
  touchy_ = value;
  // @@protoc_insertion_point(field_set:khero.TouchMsg.touchY)
}

// required bool touchUp = 3;
inline bool TouchMsg::has_touchup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TouchMsg::set_has_touchup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TouchMsg::clear_has_touchup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TouchMsg::clear_touchup() {
  touchup_ = false;
  clear_has_touchup();
}
inline bool TouchMsg::touchup() const {
  // @@protoc_insertion_point(field_get:khero.TouchMsg.touchUp)
  return touchup_;
}
inline void TouchMsg::set_touchup(bool value) {
  set_has_touchup();
  touchup_ = value;
  // @@protoc_insertion_point(field_set:khero.TouchMsg.touchUp)
}

inline const TouchMsg* TouchMsg::internal_default_instance() {
  return &TouchMsg_default_instance_.get();
}
// -------------------------------------------------------------------

// OperateRequest

// required int32 playerId = 1;
inline bool OperateRequest::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperateRequest::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperateRequest::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperateRequest::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 OperateRequest::playerid() const {
  // @@protoc_insertion_point(field_get:khero.OperateRequest.playerId)
  return playerid_;
}
inline void OperateRequest::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:khero.OperateRequest.playerId)
}

// optional .khero.KeyMsg keyMsg = 2;
inline bool OperateRequest::has_keymsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperateRequest::set_has_keymsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperateRequest::clear_has_keymsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperateRequest::clear_keymsg() {
  if (keymsg_ != NULL) keymsg_->::khero::KeyMsg::Clear();
  clear_has_keymsg();
}
inline const ::khero::KeyMsg& OperateRequest::keymsg() const {
  // @@protoc_insertion_point(field_get:khero.OperateRequest.keyMsg)
  return keymsg_ != NULL ? *keymsg_
                         : *::khero::KeyMsg::internal_default_instance();
}
inline ::khero::KeyMsg* OperateRequest::mutable_keymsg() {
  set_has_keymsg();
  if (keymsg_ == NULL) {
    keymsg_ = new ::khero::KeyMsg;
  }
  // @@protoc_insertion_point(field_mutable:khero.OperateRequest.keyMsg)
  return keymsg_;
}
inline ::khero::KeyMsg* OperateRequest::release_keymsg() {
  // @@protoc_insertion_point(field_release:khero.OperateRequest.keyMsg)
  clear_has_keymsg();
  ::khero::KeyMsg* temp = keymsg_;
  keymsg_ = NULL;
  return temp;
}
inline void OperateRequest::set_allocated_keymsg(::khero::KeyMsg* keymsg) {
  delete keymsg_;
  keymsg_ = keymsg;
  if (keymsg) {
    set_has_keymsg();
  } else {
    clear_has_keymsg();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.OperateRequest.keyMsg)
}

// optional .khero.TouchMsg touchMsg = 3;
inline bool OperateRequest::has_touchmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperateRequest::set_has_touchmsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperateRequest::clear_has_touchmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperateRequest::clear_touchmsg() {
  if (touchmsg_ != NULL) touchmsg_->::khero::TouchMsg::Clear();
  clear_has_touchmsg();
}
inline const ::khero::TouchMsg& OperateRequest::touchmsg() const {
  // @@protoc_insertion_point(field_get:khero.OperateRequest.touchMsg)
  return touchmsg_ != NULL ? *touchmsg_
                         : *::khero::TouchMsg::internal_default_instance();
}
inline ::khero::TouchMsg* OperateRequest::mutable_touchmsg() {
  set_has_touchmsg();
  if (touchmsg_ == NULL) {
    touchmsg_ = new ::khero::TouchMsg;
  }
  // @@protoc_insertion_point(field_mutable:khero.OperateRequest.touchMsg)
  return touchmsg_;
}
inline ::khero::TouchMsg* OperateRequest::release_touchmsg() {
  // @@protoc_insertion_point(field_release:khero.OperateRequest.touchMsg)
  clear_has_touchmsg();
  ::khero::TouchMsg* temp = touchmsg_;
  touchmsg_ = NULL;
  return temp;
}
inline void OperateRequest::set_allocated_touchmsg(::khero::TouchMsg* touchmsg) {
  delete touchmsg_;
  touchmsg_ = touchmsg;
  if (touchmsg) {
    set_has_touchmsg();
  } else {
    clear_has_touchmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.OperateRequest.touchMsg)
}

inline const OperateRequest* OperateRequest::internal_default_instance() {
  return &OperateRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GameStartRequest

// required int32 homeId = 1;
inline bool GameStartRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameStartRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameStartRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameStartRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 GameStartRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.GameStartRequest.homeId)
  return homeid_;
}
inline void GameStartRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.GameStartRequest.homeId)
}

inline const GameStartRequest* GameStartRequest::internal_default_instance() {
  return &GameStartRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateHomeRequest

// required string homeName = 1;
inline bool CreateHomeRequest::has_homename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateHomeRequest::set_has_homename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateHomeRequest::clear_has_homename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateHomeRequest::clear_homename() {
  homename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_homename();
}
inline const ::std::string& CreateHomeRequest::homename() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeRequest.homeName)
  return homename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateHomeRequest::set_homename(const ::std::string& value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.CreateHomeRequest.homeName)
}
inline void CreateHomeRequest::set_homename(const char* value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.CreateHomeRequest.homeName)
}
inline void CreateHomeRequest::set_homename(const char* value, size_t size) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.CreateHomeRequest.homeName)
}
inline ::std::string* CreateHomeRequest::mutable_homename() {
  set_has_homename();
  // @@protoc_insertion_point(field_mutable:khero.CreateHomeRequest.homeName)
  return homename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateHomeRequest::release_homename() {
  // @@protoc_insertion_point(field_release:khero.CreateHomeRequest.homeName)
  clear_has_homename();
  return homename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateHomeRequest::set_allocated_homename(::std::string* homename) {
  if (homename != NULL) {
    set_has_homename();
  } else {
    clear_has_homename();
  }
  homename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), homename);
  // @@protoc_insertion_point(field_set_allocated:khero.CreateHomeRequest.homeName)
}

inline const CreateHomeRequest* CreateHomeRequest::internal_default_instance() {
  return &CreateHomeRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateHomeResponse

// required bool result = 1;
inline bool CreateHomeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateHomeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateHomeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateHomeResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CreateHomeResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeResponse.result)
  return result_;
}
inline void CreateHomeResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.CreateHomeResponse.result)
}

// optional int32 homeId = 2;
inline bool CreateHomeResponse::has_homeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateHomeResponse::set_has_homeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateHomeResponse::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateHomeResponse::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 CreateHomeResponse::homeid() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeResponse.homeId)
  return homeid_;
}
inline void CreateHomeResponse::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.CreateHomeResponse.homeId)
}

// optional string text = 3;
inline bool CreateHomeResponse::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateHomeResponse::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateHomeResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateHomeResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CreateHomeResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateHomeResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.CreateHomeResponse.text)
}
inline void CreateHomeResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.CreateHomeResponse.text)
}
inline void CreateHomeResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.CreateHomeResponse.text)
}
inline ::std::string* CreateHomeResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.CreateHomeResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateHomeResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.CreateHomeResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateHomeResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.CreateHomeResponse.text)
}

inline const CreateHomeResponse* CreateHomeResponse::internal_default_instance() {
  return &CreateHomeResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// JoinHomeRequest

// required int32 homeId = 1;
inline bool JoinHomeRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinHomeRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinHomeRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinHomeRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 JoinHomeRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeRequest.homeId)
  return homeid_;
}
inline void JoinHomeRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeRequest.homeId)
}

inline const JoinHomeRequest* JoinHomeRequest::internal_default_instance() {
  return &JoinHomeRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// JoinHomeResponse

// required int32 homeId = 1;
inline bool JoinHomeResponse::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinHomeResponse::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinHomeResponse::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinHomeResponse::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 JoinHomeResponse::homeid() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.homeId)
  return homeid_;
}
inline void JoinHomeResponse::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.homeId)
}

// required int32 seatId = 2;
inline bool JoinHomeResponse::has_seatid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinHomeResponse::set_has_seatid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinHomeResponse::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinHomeResponse::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 JoinHomeResponse::seatid() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.seatId)
  return seatid_;
}
inline void JoinHomeResponse::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.seatId)
}

// required bool result = 3;
inline bool JoinHomeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinHomeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinHomeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinHomeResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool JoinHomeResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.result)
  return result_;
}
inline void JoinHomeResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.result)
}

// optional string text = 4;
inline bool JoinHomeResponse::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinHomeResponse::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinHomeResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinHomeResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& JoinHomeResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinHomeResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.text)
}
inline void JoinHomeResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.JoinHomeResponse.text)
}
inline void JoinHomeResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.JoinHomeResponse.text)
}
inline ::std::string* JoinHomeResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.JoinHomeResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinHomeResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.JoinHomeResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinHomeResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.JoinHomeResponse.text)
}

inline const JoinHomeResponse* JoinHomeResponse::internal_default_instance() {
  return &JoinHomeResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// HomeInfoRequest

// required int32 homeId = 1;
inline bool HomeInfoRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HomeInfoRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HomeInfoRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HomeInfoRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 HomeInfoRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoRequest.homeId)
  return homeid_;
}
inline void HomeInfoRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoRequest.homeId)
}

inline const HomeInfoRequest* HomeInfoRequest::internal_default_instance() {
  return &HomeInfoRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// HomeInfoResponse

// required bool result = 1;
inline bool HomeInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HomeInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HomeInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HomeInfoResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool HomeInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.result)
  return result_;
}
inline void HomeInfoResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.result)
}

// required int32 homeId = 2;
inline bool HomeInfoResponse::has_homeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HomeInfoResponse::set_has_homeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HomeInfoResponse::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HomeInfoResponse::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 HomeInfoResponse::homeid() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.homeId)
  return homeid_;
}
inline void HomeInfoResponse::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.homeId)
}

// required string homeName = 3;
inline bool HomeInfoResponse::has_homename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HomeInfoResponse::set_has_homename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HomeInfoResponse::clear_has_homename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HomeInfoResponse::clear_homename() {
  homename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_homename();
}
inline const ::std::string& HomeInfoResponse::homename() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.homeName)
  return homename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeInfoResponse::set_homename(const ::std::string& value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.homeName)
}
inline void HomeInfoResponse::set_homename(const char* value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.HomeInfoResponse.homeName)
}
inline void HomeInfoResponse::set_homename(const char* value, size_t size) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.HomeInfoResponse.homeName)
}
inline ::std::string* HomeInfoResponse::mutable_homename() {
  set_has_homename();
  // @@protoc_insertion_point(field_mutable:khero.HomeInfoResponse.homeName)
  return homename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeInfoResponse::release_homename() {
  // @@protoc_insertion_point(field_release:khero.HomeInfoResponse.homeName)
  clear_has_homename();
  return homename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeInfoResponse::set_allocated_homename(::std::string* homename) {
  if (homename != NULL) {
    set_has_homename();
  } else {
    clear_has_homename();
  }
  homename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), homename);
  // @@protoc_insertion_point(field_set_allocated:khero.HomeInfoResponse.homeName)
}

// required int32 owner = 4;
inline bool HomeInfoResponse::has_owner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HomeInfoResponse::set_has_owner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HomeInfoResponse::clear_has_owner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HomeInfoResponse::clear_owner() {
  owner_ = 0;
  clear_has_owner();
}
inline ::google::protobuf::int32 HomeInfoResponse::owner() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.owner)
  return owner_;
}
inline void HomeInfoResponse::set_owner(::google::protobuf::int32 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.owner)
}

// required int32 playerNum = 5;
inline bool HomeInfoResponse::has_playernum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HomeInfoResponse::set_has_playernum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HomeInfoResponse::clear_has_playernum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HomeInfoResponse::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
inline ::google::protobuf::int32 HomeInfoResponse::playernum() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.playerNum)
  return playernum_;
}
inline void HomeInfoResponse::set_playernum(::google::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.playerNum)
}

// optional int32 seatIds = 6;
inline bool HomeInfoResponse::has_seatids() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HomeInfoResponse::set_has_seatids() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HomeInfoResponse::clear_has_seatids() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HomeInfoResponse::clear_seatids() {
  seatids_ = 0;
  clear_has_seatids();
}
inline ::google::protobuf::int32 HomeInfoResponse::seatids() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.seatIds)
  return seatids_;
}
inline void HomeInfoResponse::set_seatids(::google::protobuf::int32 value) {
  set_has_seatids();
  seatids_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.seatIds)
}

// optional string text = 7;
inline bool HomeInfoResponse::has_text() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HomeInfoResponse::set_has_text() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HomeInfoResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HomeInfoResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& HomeInfoResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeInfoResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.text)
}
inline void HomeInfoResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.HomeInfoResponse.text)
}
inline void HomeInfoResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.HomeInfoResponse.text)
}
inline ::std::string* HomeInfoResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.HomeInfoResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeInfoResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.HomeInfoResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeInfoResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.HomeInfoResponse.text)
}

inline const HomeInfoResponse* HomeInfoResponse::internal_default_instance() {
  return &HomeInfoResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// WelcomeNotification

// required string text = 1;
inline bool WelcomeNotification::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WelcomeNotification::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WelcomeNotification::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WelcomeNotification::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& WelcomeNotification::text() const {
  // @@protoc_insertion_point(field_get:khero.WelcomeNotification.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WelcomeNotification::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.WelcomeNotification.text)
}
inline void WelcomeNotification::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.WelcomeNotification.text)
}
inline void WelcomeNotification::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.WelcomeNotification.text)
}
inline ::std::string* WelcomeNotification::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.WelcomeNotification.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WelcomeNotification::release_text() {
  // @@protoc_insertion_point(field_release:khero.WelcomeNotification.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WelcomeNotification::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.WelcomeNotification.text)
}

inline const WelcomeNotification* WelcomeNotification::internal_default_instance() {
  return &WelcomeNotification_default_instance_.get();
}
// -------------------------------------------------------------------

// RoleListRequest

// required int32 homeId = 1;
inline bool RoleListRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 RoleListRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.RoleListRequest.homeId)
  return homeid_;
}
inline void RoleListRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleListRequest.homeId)
}

inline const RoleListRequest* RoleListRequest::internal_default_instance() {
  return &RoleListRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// RoleListResponse

// repeated int32 roles = 1;
inline int RoleListResponse::roles_size() const {
  return roles_.size();
}
inline void RoleListResponse::clear_roles() {
  roles_.Clear();
}
inline ::google::protobuf::int32 RoleListResponse::roles(int index) const {
  // @@protoc_insertion_point(field_get:khero.RoleListResponse.roles)
  return roles_.Get(index);
}
inline void RoleListResponse::set_roles(int index, ::google::protobuf::int32 value) {
  roles_.Set(index, value);
  // @@protoc_insertion_point(field_set:khero.RoleListResponse.roles)
}
inline void RoleListResponse::add_roles(::google::protobuf::int32 value) {
  roles_.Add(value);
  // @@protoc_insertion_point(field_add:khero.RoleListResponse.roles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleListResponse::roles() const {
  // @@protoc_insertion_point(field_list:khero.RoleListResponse.roles)
  return roles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleListResponse::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:khero.RoleListResponse.roles)
  return &roles_;
}

inline const RoleListResponse* RoleListResponse::internal_default_instance() {
  return &RoleListResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// RoleInfoRequest

// required int32 homeId = 1;
inline bool RoleInfoRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfoRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfoRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfoRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 RoleInfoRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoRequest.homeId)
  return homeid_;
}
inline void RoleInfoRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoRequest.homeId)
}

// required int32 roleId = 2;
inline bool RoleInfoRequest::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfoRequest::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfoRequest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfoRequest::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 RoleInfoRequest::roleid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoRequest.roleId)
  return roleid_;
}
inline void RoleInfoRequest::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoRequest.roleId)
}

inline const RoleInfoRequest* RoleInfoRequest::internal_default_instance() {
  return &RoleInfoRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// RoleInfoResponse

// required int32 seatId = 1;
inline bool RoleInfoResponse::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfoResponse::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfoResponse::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfoResponse::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 RoleInfoResponse::seatid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.seatId)
  return seatid_;
}
inline void RoleInfoResponse::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.seatId)
}

// required float x = 2;
inline bool RoleInfoResponse::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfoResponse::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfoResponse::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfoResponse::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float RoleInfoResponse::x() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.x)
  return x_;
}
inline void RoleInfoResponse::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.x)
}

// required float y = 3;
inline bool RoleInfoResponse::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfoResponse::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfoResponse::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfoResponse::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float RoleInfoResponse::y() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.y)
  return y_;
}
inline void RoleInfoResponse::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.y)
}

// required float max_speed = 4;
inline bool RoleInfoResponse::has_max_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleInfoResponse::set_has_max_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleInfoResponse::clear_has_max_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleInfoResponse::clear_max_speed() {
  max_speed_ = 0;
  clear_has_max_speed();
}
inline float RoleInfoResponse::max_speed() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.max_speed)
  return max_speed_;
}
inline void RoleInfoResponse::set_max_speed(float value) {
  set_has_max_speed();
  max_speed_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.max_speed)
}

// required float min_speed = 5;
inline bool RoleInfoResponse::has_min_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleInfoResponse::set_has_min_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleInfoResponse::clear_has_min_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleInfoResponse::clear_min_speed() {
  min_speed_ = 0;
  clear_has_min_speed();
}
inline float RoleInfoResponse::min_speed() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.min_speed)
  return min_speed_;
}
inline void RoleInfoResponse::set_min_speed(float value) {
  set_has_min_speed();
  min_speed_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.min_speed)
}

// required float degree = 6;
inline bool RoleInfoResponse::has_degree() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleInfoResponse::set_has_degree() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleInfoResponse::clear_has_degree() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleInfoResponse::clear_degree() {
  degree_ = 0;
  clear_has_degree();
}
inline float RoleInfoResponse::degree() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.degree)
  return degree_;
}
inline void RoleInfoResponse::set_degree(float value) {
  set_has_degree();
  degree_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.degree)
}

// required float angularVelocity = 7;
inline bool RoleInfoResponse::has_angularvelocity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleInfoResponse::set_has_angularvelocity() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleInfoResponse::clear_has_angularvelocity() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleInfoResponse::clear_angularvelocity() {
  angularvelocity_ = 0;
  clear_has_angularvelocity();
}
inline float RoleInfoResponse::angularvelocity() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.angularVelocity)
  return angularvelocity_;
}
inline void RoleInfoResponse::set_angularvelocity(float value) {
  set_has_angularvelocity();
  angularvelocity_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.angularVelocity)
}

// required int32 gunNum = 8;
inline bool RoleInfoResponse::has_gunnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleInfoResponse::set_has_gunnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleInfoResponse::clear_has_gunnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleInfoResponse::clear_gunnum() {
  gunnum_ = 0;
  clear_has_gunnum();
}
inline ::google::protobuf::int32 RoleInfoResponse::gunnum() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunNum)
  return gunnum_;
}
inline void RoleInfoResponse::set_gunnum(::google::protobuf::int32 value) {
  set_has_gunnum();
  gunnum_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunNum)
}

// required float gunDemage = 9;
inline bool RoleInfoResponse::has_gundemage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleInfoResponse::set_has_gundemage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleInfoResponse::clear_has_gundemage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleInfoResponse::clear_gundemage() {
  gundemage_ = 0;
  clear_has_gundemage();
}
inline float RoleInfoResponse::gundemage() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunDemage)
  return gundemage_;
}
inline void RoleInfoResponse::set_gundemage(float value) {
  set_has_gundemage();
  gundemage_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunDemage)
}

// required int32 gunMagazineCapacity = 10;
inline bool RoleInfoResponse::has_gunmagazinecapacity() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleInfoResponse::set_has_gunmagazinecapacity() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleInfoResponse::clear_has_gunmagazinecapacity() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleInfoResponse::clear_gunmagazinecapacity() {
  gunmagazinecapacity_ = 0;
  clear_has_gunmagazinecapacity();
}
inline ::google::protobuf::int32 RoleInfoResponse::gunmagazinecapacity() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunMagazineCapacity)
  return gunmagazinecapacity_;
}
inline void RoleInfoResponse::set_gunmagazinecapacity(::google::protobuf::int32 value) {
  set_has_gunmagazinecapacity();
  gunmagazinecapacity_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunMagazineCapacity)
}

// required float gunFireRate = 11;
inline bool RoleInfoResponse::has_gunfirerate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleInfoResponse::set_has_gunfirerate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleInfoResponse::clear_has_gunfirerate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleInfoResponse::clear_gunfirerate() {
  gunfirerate_ = 0;
  clear_has_gunfirerate();
}
inline float RoleInfoResponse::gunfirerate() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunFireRate)
  return gunfirerate_;
}
inline void RoleInfoResponse::set_gunfirerate(float value) {
  set_has_gunfirerate();
  gunfirerate_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunFireRate)
}

// required float gunFireRange = 12;
inline bool RoleInfoResponse::has_gunfirerange() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleInfoResponse::set_has_gunfirerange() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleInfoResponse::clear_has_gunfirerange() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleInfoResponse::clear_gunfirerange() {
  gunfirerange_ = 0;
  clear_has_gunfirerange();
}
inline float RoleInfoResponse::gunfirerange() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunFireRange)
  return gunfirerange_;
}
inline void RoleInfoResponse::set_gunfirerange(float value) {
  set_has_gunfirerange();
  gunfirerange_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunFireRange)
}

// required float missileDemage = 13;
inline bool RoleInfoResponse::has_missiledemage() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleInfoResponse::set_has_missiledemage() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleInfoResponse::clear_has_missiledemage() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleInfoResponse::clear_missiledemage() {
  missiledemage_ = 0;
  clear_has_missiledemage();
}
inline float RoleInfoResponse::missiledemage() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileDemage)
  return missiledemage_;
}
inline void RoleInfoResponse::set_missiledemage(float value) {
  set_has_missiledemage();
  missiledemage_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileDemage)
}

// required int32 missileNum = 14;
inline bool RoleInfoResponse::has_missilenum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleInfoResponse::set_has_missilenum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleInfoResponse::clear_has_missilenum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleInfoResponse::clear_missilenum() {
  missilenum_ = 0;
  clear_has_missilenum();
}
inline ::google::protobuf::int32 RoleInfoResponse::missilenum() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileNum)
  return missilenum_;
}
inline void RoleInfoResponse::set_missilenum(::google::protobuf::int32 value) {
  set_has_missilenum();
  missilenum_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileNum)
}

// required float missileSpeed = 15;
inline bool RoleInfoResponse::has_missilespeed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RoleInfoResponse::set_has_missilespeed() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RoleInfoResponse::clear_has_missilespeed() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RoleInfoResponse::clear_missilespeed() {
  missilespeed_ = 0;
  clear_has_missilespeed();
}
inline float RoleInfoResponse::missilespeed() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileSpeed)
  return missilespeed_;
}
inline void RoleInfoResponse::set_missilespeed(float value) {
  set_has_missilespeed();
  missilespeed_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileSpeed)
}

// required float missileMaxAngularVelocity = 16;
inline bool RoleInfoResponse::has_missilemaxangularvelocity() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RoleInfoResponse::set_has_missilemaxangularvelocity() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RoleInfoResponse::clear_has_missilemaxangularvelocity() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RoleInfoResponse::clear_missilemaxangularvelocity() {
  missilemaxangularvelocity_ = 0;
  clear_has_missilemaxangularvelocity();
}
inline float RoleInfoResponse::missilemaxangularvelocity() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileMaxAngularVelocity)
  return missilemaxangularvelocity_;
}
inline void RoleInfoResponse::set_missilemaxangularvelocity(float value) {
  set_has_missilemaxangularvelocity();
  missilemaxangularvelocity_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileMaxAngularVelocity)
}

// required float bombDemage = 17;
inline bool RoleInfoResponse::has_bombdemage() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleInfoResponse::set_has_bombdemage() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleInfoResponse::clear_has_bombdemage() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleInfoResponse::clear_bombdemage() {
  bombdemage_ = 0;
  clear_has_bombdemage();
}
inline float RoleInfoResponse::bombdemage() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.bombDemage)
  return bombdemage_;
}
inline void RoleInfoResponse::set_bombdemage(float value) {
  set_has_bombdemage();
  bombdemage_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.bombDemage)
}

// required float bombNum = 18;
inline bool RoleInfoResponse::has_bombnum() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RoleInfoResponse::set_has_bombnum() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RoleInfoResponse::clear_has_bombnum() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RoleInfoResponse::clear_bombnum() {
  bombnum_ = 0;
  clear_has_bombnum();
}
inline float RoleInfoResponse::bombnum() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.bombNum)
  return bombnum_;
}
inline void RoleInfoResponse::set_bombnum(float value) {
  set_has_bombnum();
  bombnum_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.bombNum)
}

// required float bombFireRate = 19;
inline bool RoleInfoResponse::has_bombfirerate() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RoleInfoResponse::set_has_bombfirerate() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RoleInfoResponse::clear_has_bombfirerate() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RoleInfoResponse::clear_bombfirerate() {
  bombfirerate_ = 0;
  clear_has_bombfirerate();
}
inline float RoleInfoResponse::bombfirerate() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.bombFireRate)
  return bombfirerate_;
}
inline void RoleInfoResponse::set_bombfirerate(float value) {
  set_has_bombfirerate();
  bombfirerate_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.bombFireRate)
}

// required int32 campId = 20;
inline bool RoleInfoResponse::has_campid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RoleInfoResponse::set_has_campid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RoleInfoResponse::clear_has_campid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RoleInfoResponse::clear_campid() {
  campid_ = 0;
  clear_has_campid();
}
inline ::google::protobuf::int32 RoleInfoResponse::campid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.campId)
  return campid_;
}
inline void RoleInfoResponse::set_campid(::google::protobuf::int32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.campId)
}

inline const RoleInfoResponse* RoleInfoResponse::internal_default_instance() {
  return &RoleInfoResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// FrameNotification

// required int32 frameId = 1;
inline bool FrameNotification::has_frameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameNotification::set_has_frameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameNotification::clear_has_frameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameNotification::clear_frameid() {
  frameid_ = 0;
  clear_has_frameid();
}
inline ::google::protobuf::int32 FrameNotification::frameid() const {
  // @@protoc_insertion_point(field_get:khero.FrameNotification.frameId)
  return frameid_;
}
inline void FrameNotification::set_frameid(::google::protobuf::int32 value) {
  set_has_frameid();
  frameid_ = value;
  // @@protoc_insertion_point(field_set:khero.FrameNotification.frameId)
}

// repeated .khero.OperateRequest operates = 2;
inline int FrameNotification::operates_size() const {
  return operates_.size();
}
inline void FrameNotification::clear_operates() {
  operates_.Clear();
}
inline const ::khero::OperateRequest& FrameNotification::operates(int index) const {
  // @@protoc_insertion_point(field_get:khero.FrameNotification.operates)
  return operates_.Get(index);
}
inline ::khero::OperateRequest* FrameNotification::mutable_operates(int index) {
  // @@protoc_insertion_point(field_mutable:khero.FrameNotification.operates)
  return operates_.Mutable(index);
}
inline ::khero::OperateRequest* FrameNotification::add_operates() {
  // @@protoc_insertion_point(field_add:khero.FrameNotification.operates)
  return operates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::khero::OperateRequest >*
FrameNotification::mutable_operates() {
  // @@protoc_insertion_point(field_mutable_list:khero.FrameNotification.operates)
  return &operates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::khero::OperateRequest >&
FrameNotification::operates() const {
  // @@protoc_insertion_point(field_list:khero.FrameNotification.operates)
  return operates_;
}

inline const FrameNotification* FrameNotification::internal_default_instance() {
  return &FrameNotification_default_instance_.get();
}
// -------------------------------------------------------------------

// GameStartNotification

inline const GameStartNotification* GameStartNotification::internal_default_instance() {
  return &GameStartNotification_default_instance_.get();
}
// -------------------------------------------------------------------

// LoadingCompleteRequest

// required int32 homeId = 1;
inline bool LoadingCompleteRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoadingCompleteRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoadingCompleteRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoadingCompleteRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
inline ::google::protobuf::int32 LoadingCompleteRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.LoadingCompleteRequest.homeId)
  return homeid_;
}
inline void LoadingCompleteRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.LoadingCompleteRequest.homeId)
}

// required int32 seatId = 2;
inline bool LoadingCompleteRequest::has_seatid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoadingCompleteRequest::set_has_seatid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoadingCompleteRequest::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoadingCompleteRequest::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 LoadingCompleteRequest::seatid() const {
  // @@protoc_insertion_point(field_get:khero.LoadingCompleteRequest.seatId)
  return seatid_;
}
inline void LoadingCompleteRequest::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:khero.LoadingCompleteRequest.seatId)
}

inline const LoadingCompleteRequest* LoadingCompleteRequest::internal_default_instance() {
  return &LoadingCompleteRequest_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace khero

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::khero::Msg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::khero::Msg>() {
  return ::khero::Msg_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
