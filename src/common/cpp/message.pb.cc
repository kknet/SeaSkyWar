// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace khero {

namespace {

const ::google::protobuf::Descriptor* Command_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Command_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* Notification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Notification_reflection_ = NULL;
const ::google::protobuf::Descriptor* DebugCommand_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DebugCommand_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegisterResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegisterResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeyMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* TouchMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TouchMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameStartRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameStartRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateHomeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateHomeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateHomeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateHomeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinHomeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinHomeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* JoinHomeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JoinHomeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HomeInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HomeInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HomeInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HomeInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelcomeNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelcomeNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameStartNotification_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameStartNotification_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadingCompleteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadingCompleteRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Msg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  Command_descriptor_ = file->message_type(0);
  static const int Command_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Command, debug_),
  };
  Command_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Command_descriptor_,
      Command::internal_default_instance(),
      Command_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Command, _has_bits_),
      -1,
      -1,
      sizeof(Command),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Command, _internal_metadata_));
  Request_descriptor_ = file->message_type(1);
  static const int Request_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, register__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, operate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, gamestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, createhome_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, joinhome_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, homeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, rolelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, roleinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, ready_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::internal_default_instance(),
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_));
  Response_descriptor_ = file->message_type(2);
  static const int Response_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, last_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, error_describe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, register__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, createhome_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, joinhome_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, homeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, rolelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, roleinfo_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::internal_default_instance(),
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_),
      -1,
      -1,
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_));
  Notification_descriptor_ = file->message_type(3);
  static const int Notification_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, welcome_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, gamestart_),
  };
  Notification_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Notification_descriptor_,
      Notification::internal_default_instance(),
      Notification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, _has_bits_),
      -1,
      -1,
      sizeof(Notification),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, _internal_metadata_));
  DebugCommand_descriptor_ = file->message_type(4);
  static const int DebugCommand_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugCommand, command_),
  };
  DebugCommand_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DebugCommand_descriptor_,
      DebugCommand::internal_default_instance(),
      DebugCommand_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugCommand, _has_bits_),
      -1,
      -1,
      sizeof(DebugCommand),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DebugCommand, _internal_metadata_));
  RegisterRequest_descriptor_ = file->message_type(5);
  static const int RegisterRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, password_),
  };
  RegisterRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegisterRequest_descriptor_,
      RegisterRequest::internal_default_instance(),
      RegisterRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, _has_bits_),
      -1,
      -1,
      sizeof(RegisterRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, _internal_metadata_));
  RegisterResponse_descriptor_ = file->message_type(6);
  static const int RegisterResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterResponse, text_),
  };
  RegisterResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegisterResponse_descriptor_,
      RegisterResponse::internal_default_instance(),
      RegisterResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterResponse, _has_bits_),
      -1,
      -1,
      sizeof(RegisterResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterResponse, _internal_metadata_));
  LoginRequest_descriptor_ = file->message_type(7);
  static const int LoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, password_),
  };
  LoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::internal_default_instance(),
      LoginRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _has_bits_),
      -1,
      -1,
      sizeof(LoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_));
  LoginResponse_descriptor_ = file->message_type(8);
  static const int LoginResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, playerid_),
  };
  LoginResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginResponse_descriptor_,
      LoginResponse::internal_default_instance(),
      LoginResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _has_bits_),
      -1,
      -1,
      sizeof(LoginResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _internal_metadata_));
  KeyMsg_descriptor_ = file->message_type(9);
  static const int KeyMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyMsg, keycode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyMsg, keydown_),
  };
  KeyMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeyMsg_descriptor_,
      KeyMsg::internal_default_instance(),
      KeyMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyMsg, _has_bits_),
      -1,
      -1,
      sizeof(KeyMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyMsg, _internal_metadata_));
  TouchMsg_descriptor_ = file->message_type(10);
  static const int TouchMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchMsg, touchx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchMsg, touchy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchMsg, touchup_),
  };
  TouchMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TouchMsg_descriptor_,
      TouchMsg::internal_default_instance(),
      TouchMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchMsg, _has_bits_),
      -1,
      -1,
      sizeof(TouchMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TouchMsg, _internal_metadata_));
  OperateRequest_descriptor_ = file->message_type(11);
  static const int OperateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateRequest, playerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateRequest, keymsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateRequest, touchmsg_),
  };
  OperateRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OperateRequest_descriptor_,
      OperateRequest::internal_default_instance(),
      OperateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateRequest, _has_bits_),
      -1,
      -1,
      sizeof(OperateRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperateRequest, _internal_metadata_));
  GameStartRequest_descriptor_ = file->message_type(12);
  static const int GameStartRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameStartRequest, homeid_),
  };
  GameStartRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameStartRequest_descriptor_,
      GameStartRequest::internal_default_instance(),
      GameStartRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameStartRequest, _has_bits_),
      -1,
      -1,
      sizeof(GameStartRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameStartRequest, _internal_metadata_));
  CreateHomeRequest_descriptor_ = file->message_type(13);
  static const int CreateHomeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeRequest, homename_),
  };
  CreateHomeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateHomeRequest_descriptor_,
      CreateHomeRequest::internal_default_instance(),
      CreateHomeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeRequest, _has_bits_),
      -1,
      -1,
      sizeof(CreateHomeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeRequest, _internal_metadata_));
  CreateHomeResponse_descriptor_ = file->message_type(14);
  static const int CreateHomeResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeResponse, homeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeResponse, text_),
  };
  CreateHomeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateHomeResponse_descriptor_,
      CreateHomeResponse::internal_default_instance(),
      CreateHomeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeResponse, _has_bits_),
      -1,
      -1,
      sizeof(CreateHomeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateHomeResponse, _internal_metadata_));
  JoinHomeRequest_descriptor_ = file->message_type(15);
  static const int JoinHomeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeRequest, homeid_),
  };
  JoinHomeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JoinHomeRequest_descriptor_,
      JoinHomeRequest::internal_default_instance(),
      JoinHomeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeRequest, _has_bits_),
      -1,
      -1,
      sizeof(JoinHomeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeRequest, _internal_metadata_));
  JoinHomeResponse_descriptor_ = file->message_type(16);
  static const int JoinHomeResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeResponse, homeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeResponse, seatid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeResponse, text_),
  };
  JoinHomeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JoinHomeResponse_descriptor_,
      JoinHomeResponse::internal_default_instance(),
      JoinHomeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeResponse, _has_bits_),
      -1,
      -1,
      sizeof(JoinHomeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinHomeResponse, _internal_metadata_));
  HomeInfoRequest_descriptor_ = file->message_type(17);
  static const int HomeInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoRequest, homeid_),
  };
  HomeInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HomeInfoRequest_descriptor_,
      HomeInfoRequest::internal_default_instance(),
      HomeInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoRequest, _has_bits_),
      -1,
      -1,
      sizeof(HomeInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoRequest, _internal_metadata_));
  HomeInfoResponse_descriptor_ = file->message_type(18);
  static const int HomeInfoResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, homeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, homename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, owner_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, playernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, seatids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, text_),
  };
  HomeInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HomeInfoResponse_descriptor_,
      HomeInfoResponse::internal_default_instance(),
      HomeInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, _has_bits_),
      -1,
      -1,
      sizeof(HomeInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HomeInfoResponse, _internal_metadata_));
  WelcomeNotification_descriptor_ = file->message_type(19);
  static const int WelcomeNotification_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelcomeNotification, text_),
  };
  WelcomeNotification_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WelcomeNotification_descriptor_,
      WelcomeNotification::internal_default_instance(),
      WelcomeNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelcomeNotification, _has_bits_),
      -1,
      -1,
      sizeof(WelcomeNotification),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelcomeNotification, _internal_metadata_));
  RoleListRequest_descriptor_ = file->message_type(20);
  static const int RoleListRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListRequest, homeid_),
  };
  RoleListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleListRequest_descriptor_,
      RoleListRequest::internal_default_instance(),
      RoleListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListRequest, _has_bits_),
      -1,
      -1,
      sizeof(RoleListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListRequest, _internal_metadata_));
  RoleListResponse_descriptor_ = file->message_type(21);
  static const int RoleListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListResponse, roles_),
  };
  RoleListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleListResponse_descriptor_,
      RoleListResponse::internal_default_instance(),
      RoleListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListResponse, _has_bits_),
      -1,
      -1,
      sizeof(RoleListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListResponse, _internal_metadata_));
  RoleInfoRequest_descriptor_ = file->message_type(22);
  static const int RoleInfoRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoRequest, homeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoRequest, roleid_),
  };
  RoleInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleInfoRequest_descriptor_,
      RoleInfoRequest::internal_default_instance(),
      RoleInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoRequest, _has_bits_),
      -1,
      -1,
      sizeof(RoleInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoRequest, _internal_metadata_));
  RoleInfoResponse_descriptor_ = file->message_type(23);
  static const int RoleInfoResponse_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, seatid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, max_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, min_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, angularvelocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, gunnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, gundemage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, gunmagazinecapacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, gunfirerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, gunfirerange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, missiledemage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, missilenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, missilespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, missilemaxangularvelocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, bombdemage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, bombnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, bombfirerate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, campid_),
  };
  RoleInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleInfoResponse_descriptor_,
      RoleInfoResponse::internal_default_instance(),
      RoleInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, _has_bits_),
      -1,
      -1,
      sizeof(RoleInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfoResponse, _internal_metadata_));
  FrameNotification_descriptor_ = file->message_type(24);
  static const int FrameNotification_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameNotification, frameid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameNotification, operates_),
  };
  FrameNotification_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameNotification_descriptor_,
      FrameNotification::internal_default_instance(),
      FrameNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameNotification, _has_bits_),
      -1,
      -1,
      sizeof(FrameNotification),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameNotification, _internal_metadata_));
  GameStartNotification_descriptor_ = file->message_type(25);
  static const int GameStartNotification_offsets_[1] = {
  };
  GameStartNotification_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameStartNotification_descriptor_,
      GameStartNotification::internal_default_instance(),
      GameStartNotification_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameStartNotification, _has_bits_),
      -1,
      -1,
      sizeof(GameStartNotification),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameStartNotification, _internal_metadata_));
  LoadingCompleteRequest_descriptor_ = file->message_type(26);
  static const int LoadingCompleteRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadingCompleteRequest, homeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadingCompleteRequest, seatid_),
  };
  LoadingCompleteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadingCompleteRequest_descriptor_,
      LoadingCompleteRequest::internal_default_instance(),
      LoadingCompleteRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadingCompleteRequest, _has_bits_),
      -1,
      -1,
      sizeof(LoadingCompleteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadingCompleteRequest, _internal_metadata_));
  Msg_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Command_descriptor_, Command::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, Request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, Response::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Notification_descriptor_, Notification::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DebugCommand_descriptor_, DebugCommand::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegisterRequest_descriptor_, RegisterRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegisterResponse_descriptor_, RegisterResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRequest_descriptor_, LoginRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginResponse_descriptor_, LoginResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeyMsg_descriptor_, KeyMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TouchMsg_descriptor_, TouchMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OperateRequest_descriptor_, OperateRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameStartRequest_descriptor_, GameStartRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateHomeRequest_descriptor_, CreateHomeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateHomeResponse_descriptor_, CreateHomeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JoinHomeRequest_descriptor_, JoinHomeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JoinHomeResponse_descriptor_, JoinHomeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HomeInfoRequest_descriptor_, HomeInfoRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HomeInfoResponse_descriptor_, HomeInfoResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WelcomeNotification_descriptor_, WelcomeNotification::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleListRequest_descriptor_, RoleListRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleListResponse_descriptor_, RoleListResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleInfoRequest_descriptor_, RoleInfoRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleInfoResponse_descriptor_, RoleInfoResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameNotification_descriptor_, FrameNotification::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameStartNotification_descriptor_, GameStartNotification::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadingCompleteRequest_descriptor_, LoadingCompleteRequest::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  Command_default_instance_.Shutdown();
  delete Command_reflection_;
  Request_default_instance_.Shutdown();
  delete Request_reflection_;
  Response_default_instance_.Shutdown();
  delete Response_reflection_;
  Notification_default_instance_.Shutdown();
  delete Notification_reflection_;
  DebugCommand_default_instance_.Shutdown();
  delete DebugCommand_reflection_;
  RegisterRequest_default_instance_.Shutdown();
  delete RegisterRequest_reflection_;
  RegisterResponse_default_instance_.Shutdown();
  delete RegisterResponse_reflection_;
  LoginRequest_default_instance_.Shutdown();
  delete LoginRequest_reflection_;
  LoginResponse_default_instance_.Shutdown();
  delete LoginResponse_reflection_;
  KeyMsg_default_instance_.Shutdown();
  delete KeyMsg_reflection_;
  TouchMsg_default_instance_.Shutdown();
  delete TouchMsg_reflection_;
  OperateRequest_default_instance_.Shutdown();
  delete OperateRequest_reflection_;
  GameStartRequest_default_instance_.Shutdown();
  delete GameStartRequest_reflection_;
  CreateHomeRequest_default_instance_.Shutdown();
  delete CreateHomeRequest_reflection_;
  CreateHomeResponse_default_instance_.Shutdown();
  delete CreateHomeResponse_reflection_;
  JoinHomeRequest_default_instance_.Shutdown();
  delete JoinHomeRequest_reflection_;
  JoinHomeResponse_default_instance_.Shutdown();
  delete JoinHomeResponse_reflection_;
  HomeInfoRequest_default_instance_.Shutdown();
  delete HomeInfoRequest_reflection_;
  HomeInfoResponse_default_instance_.Shutdown();
  delete HomeInfoResponse_reflection_;
  WelcomeNotification_default_instance_.Shutdown();
  delete WelcomeNotification_reflection_;
  RoleListRequest_default_instance_.Shutdown();
  delete RoleListRequest_reflection_;
  RoleListResponse_default_instance_.Shutdown();
  delete RoleListResponse_reflection_;
  RoleInfoRequest_default_instance_.Shutdown();
  delete RoleInfoRequest_reflection_;
  RoleInfoResponse_default_instance_.Shutdown();
  delete RoleInfoResponse_reflection_;
  FrameNotification_default_instance_.Shutdown();
  delete FrameNotification_reflection_;
  GameStartNotification_default_instance_.Shutdown();
  delete GameStartNotification_reflection_;
  LoadingCompleteRequest_default_instance_.Shutdown();
  delete LoadingCompleteRequest_reflection_;
}

void protobuf_InitDefaults_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Command_default_instance_.DefaultConstruct();
  Request_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Response_default_instance_.DefaultConstruct();
  Notification_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DebugCommand_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RegisterRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RegisterResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginRequest_default_instance_.DefaultConstruct();
  LoginResponse_default_instance_.DefaultConstruct();
  KeyMsg_default_instance_.DefaultConstruct();
  TouchMsg_default_instance_.DefaultConstruct();
  OperateRequest_default_instance_.DefaultConstruct();
  GameStartRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateHomeRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateHomeResponse_default_instance_.DefaultConstruct();
  JoinHomeRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  JoinHomeResponse_default_instance_.DefaultConstruct();
  HomeInfoRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HomeInfoResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WelcomeNotification_default_instance_.DefaultConstruct();
  RoleListRequest_default_instance_.DefaultConstruct();
  RoleListResponse_default_instance_.DefaultConstruct();
  RoleInfoRequest_default_instance_.DefaultConstruct();
  RoleInfoResponse_default_instance_.DefaultConstruct();
  FrameNotification_default_instance_.DefaultConstruct();
  GameStartNotification_default_instance_.DefaultConstruct();
  LoadingCompleteRequest_default_instance_.DefaultConstruct();
  Command_default_instance_.get_mutable()->InitAsDefaultInstance();
  Request_default_instance_.get_mutable()->InitAsDefaultInstance();
  Response_default_instance_.get_mutable()->InitAsDefaultInstance();
  Notification_default_instance_.get_mutable()->InitAsDefaultInstance();
  DebugCommand_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegisterRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegisterResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  KeyMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  TouchMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OperateRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GameStartRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateHomeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateHomeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  JoinHomeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  JoinHomeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  HomeInfoRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  HomeInfoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  WelcomeNotification_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoleListRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoleListResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoleInfoRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoleInfoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameNotification_default_instance_.get_mutable()->InitAsDefaultInstance();
  GameStartNotification_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoadingCompleteRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_message_2eproto_once_);
void protobuf_InitDefaults_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_message_2eproto_once_,
                 &protobuf_InitDefaults_message_2eproto_impl);
}
void protobuf_AddDesc_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_message_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\005khero\"-\n\007Command\022\"\n\005deb"
    "ug\030\001 \001(\0132\023.khero.DebugCommand\"\257\003\n\007Reques"
    "t\022(\n\010register\030\001 \001(\0132\026.khero.RegisterRequ"
    "est\022\"\n\005login\030\002 \001(\0132\023.khero.LoginRequest\022"
    "&\n\007operate\030\003 \001(\0132\025.khero.OperateRequest\022"
    "*\n\tgameStart\030\004 \001(\0132\027.khero.GameStartRequ"
    "est\022,\n\ncreateHome\030\005 \001(\0132\030.khero.CreateHo"
    "meRequest\022(\n\010joinHome\030\006 \001(\0132\026.khero.Join"
    "HomeRequest\022(\n\010homeInfo\030\007 \001(\0132\026.khero.Ho"
    "meInfoRequest\022(\n\010roleList\030\010 \001(\0132\026.khero."
    "RoleListRequest\022(\n\010roleInfo\030\t \001(\0132\026.kher"
    "o.RoleInfoRequest\022,\n\005ready\030\n \001(\0132\035.khero"
    ".LoadingCompleteRequest\"\364\002\n\010Response\022\016\n\006"
    "result\030\001 \002(\010\022\025\n\rlast_response\030\002 \002(\010\022\026\n\016e"
    "rror_describe\030\003 \001(\014\022)\n\010register\030\004 \001(\0132\027."
    "khero.RegisterResponse\022#\n\005login\030\005 \001(\0132\024."
    "khero.LoginResponse\022-\n\ncreateHome\030\006 \001(\0132"
    "\031.khero.CreateHomeResponse\022)\n\010joinHome\030\007"
    " \001(\0132\027.khero.JoinHomeResponse\022)\n\010homeInf"
    "o\030\010 \001(\0132\027.khero.HomeInfoResponse\022)\n\010role"
    "List\030\t \001(\0132\027.khero.RoleListResponse\022)\n\010r"
    "oleInfo\030\n \001(\0132\027.khero.RoleInfoResponse\"\225"
    "\001\n\014Notification\022+\n\007welcome\030\001 \001(\0132\032.khero"
    ".WelcomeNotification\022\'\n\005frame\030\002 \001(\0132\030.kh"
    "ero.FrameNotification\022/\n\tgameStart\030\003 \001(\013"
    "2\034.khero.GameStartNotification\"\037\n\014DebugC"
    "ommand\022\017\n\007command\030\001 \002(\t\"5\n\017RegisterReque"
    "st\022\020\n\010username\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\"0"
    "\n\020RegisterResponse\022\016\n\006result\030\001 \002(\010\022\014\n\004te"
    "xt\030\002 \001(\t\"2\n\014LoginRequest\022\020\n\010username\030\001 \002"
    "(\t\022\020\n\010password\030\002 \002(\t\"!\n\rLoginResponse\022\020\n"
    "\010playerId\030\001 \002(\005\"*\n\006KeyMsg\022\017\n\007keyCode\030\001 \002"
    "(\005\022\017\n\007keyDown\030\002 \002(\010\";\n\010TouchMsg\022\016\n\006touch"
    "X\030\001 \002(\002\022\016\n\006touchY\030\002 \002(\002\022\017\n\007touchUp\030\003 \002(\010"
    "\"d\n\016OperateRequest\022\020\n\010playerId\030\001 \002(\005\022\035\n\006"
    "keyMsg\030\002 \001(\0132\r.khero.KeyMsg\022!\n\010touchMsg\030"
    "\003 \001(\0132\017.khero.TouchMsg\"\"\n\020GameStartReque"
    "st\022\016\n\006homeId\030\001 \002(\005\"%\n\021CreateHomeRequest\022"
    "\020\n\010homeName\030\001 \002(\t\"B\n\022CreateHomeResponse\022"
    "\016\n\006result\030\001 \002(\010\022\016\n\006homeId\030\002 \001(\005\022\014\n\004text\030"
    "\003 \001(\t\"!\n\017JoinHomeRequest\022\016\n\006homeId\030\001 \002(\005"
    "\"P\n\020JoinHomeResponse\022\016\n\006homeId\030\001 \002(\005\022\016\n\006"
    "seatId\030\002 \002(\005\022\016\n\006result\030\003 \002(\010\022\014\n\004text\030\004 \001"
    "(\t\"!\n\017HomeInfoRequest\022\016\n\006homeId\030\001 \002(\005\"\205\001"
    "\n\020HomeInfoResponse\022\016\n\006result\030\001 \002(\010\022\016\n\006ho"
    "meId\030\002 \002(\005\022\020\n\010homeName\030\003 \002(\t\022\r\n\005owner\030\004 "
    "\002(\005\022\021\n\tplayerNum\030\005 \002(\005\022\017\n\007seatIds\030\006 \001(\005\022"
    "\014\n\004text\030\007 \001(\t\"#\n\023WelcomeNotification\022\014\n\004"
    "text\030\001 \002(\t\"!\n\017RoleListRequest\022\016\n\006homeId\030"
    "\001 \002(\005\"!\n\020RoleListResponse\022\r\n\005roles\030\001 \003(\005"
    "\"1\n\017RoleInfoRequest\022\016\n\006homeId\030\001 \002(\005\022\016\n\006r"
    "oleId\030\002 \002(\005\"\241\003\n\020RoleInfoResponse\022\016\n\006seat"
    "Id\030\001 \002(\005\022\t\n\001x\030\002 \002(\002\022\t\n\001y\030\003 \002(\002\022\021\n\tmax_sp"
    "eed\030\004 \002(\002\022\021\n\tmin_speed\030\005 \002(\002\022\016\n\006degree\030\006"
    " \002(\002\022\027\n\017angularVelocity\030\007 \002(\002\022\016\n\006gunNum\030"
    "\010 \002(\005\022\021\n\tgunDemage\030\t \002(\002\022\033\n\023gunMagazineC"
    "apacity\030\n \002(\005\022\023\n\013gunFireRate\030\013 \002(\002\022\024\n\014gu"
    "nFireRange\030\014 \002(\002\022\025\n\rmissileDemage\030\r \002(\002\022"
    "\022\n\nmissileNum\030\016 \002(\005\022\024\n\014missileSpeed\030\017 \002("
    "\002\022!\n\031missileMaxAngularVelocity\030\020 \002(\002\022\022\n\n"
    "bombDemage\030\021 \002(\002\022\017\n\007bombNum\030\022 \002(\002\022\024\n\014bom"
    "bFireRate\030\023 \002(\002\022\016\n\006campId\030\024 \002(\005\"M\n\021Frame"
    "Notification\022\017\n\007frameId\030\001 \002(\005\022\'\n\010operate"
    "s\030\002 \003(\0132\025.khero.OperateRequest\"\027\n\025GameSt"
    "artNotification\"8\n\026LoadingCompleteReques"
    "t\022\016\n\006homeId\030\001 \002(\005\022\016\n\006seatId\030\002 \002(\005*\236\004\n\003Ms"
    "g\022\026\n\020Register_Request\020\201\200\004\022\027\n\021Register_Re"
    "sponse\020\202\200\004\022\023\n\rLogin_Request\020\203\200\004\022\024\n\016Login"
    "_Response\020\204\200\004\022\025\n\017Operate_Request\020\205\200\004\022\030\n\022"
    "Game_Start_Request\020\207\200\004\022\031\n\023Create_Home_Re"
    "quest\020\211\200\004\022\032\n\024Create_Home_Response\020\212\200\004\022\027\n"
    "\021Join_Home_Request\020\213\200\004\022\030\n\022Join_Home_Resp"
    "onse\020\214\200\004\022\027\n\021Home_Info_Request\020\215\200\004\022\030\n\022Hom"
    "e_Info_Response\020\217\200\004\022\027\n\021Role_List_Request"
    "\020\221\200\004\022\030\n\022Role_List_Response\020\222\200\004\022\027\n\021Role_I"
    "nfo_Request\020\223\200\004\022\030\n\022Role_Info_Response\020\224\200"
    "\004\022\036\n\030Loading_Complete_Request\020\225\200\004\022\023\n\rDeb"
    "ug_Command\020\201\240\004\022\031\n\023Welcom_Notification\020\201\300"
    "\004\022\030\n\022Frame_Notification\020\202\300\004\022\035\n\027Game_Star"
    "t_Notification\020\203\300\004B\033\n\031com.kongyt.khero.m"
    "essages", 3207);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_message_2eproto_once_);
void protobuf_AddDesc_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_message_2eproto_once_,
                 &protobuf_AddDesc_message_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;
const ::google::protobuf::EnumDescriptor* Msg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_descriptor_;
}
bool Msg_IsValid(int value) {
  switch (value) {
    case 65537:
    case 65538:
    case 65539:
    case 65540:
    case 65541:
    case 65543:
    case 65545:
    case 65546:
    case 65547:
    case 65548:
    case 65549:
    case 65551:
    case 65553:
    case 65554:
    case 65555:
    case 65556:
    case 65557:
    case 69633:
    case 73729:
    case 73730:
    case 73731:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.Command)
}

void Command::InitAsDefaultInstance() {
  debug_ = const_cast< ::khero::DebugCommand*>(
      ::khero::DebugCommand::internal_default_instance());
}

Command::Command(const Command& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.Command)
}

void Command::SharedCtor() {
  _cached_size_ = 0;
  debug_ = NULL;
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:khero.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  if (this != &Command_default_instance_.get()) {
    delete debug_;
  }
}

void Command::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Command_descriptor_;
}

const Command& Command::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Command> Command_default_instance_;

Command* Command::New(::google::protobuf::Arena* arena) const {
  Command* n = new Command;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.Command)
  if (has_debug()) {
    if (debug_ != NULL) debug_->::khero::DebugCommand::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.Command)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .khero.DebugCommand debug = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_debug()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.Command)
  // optional .khero.DebugCommand debug = 1;
  if (has_debug()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->debug_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.Command)
  // optional .khero.DebugCommand debug = 1;
  if (has_debug()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->debug_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.Command)
  size_t total_size = 0;

  // optional .khero.DebugCommand debug = 1;
  if (has_debug()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->debug_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.Command)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.Command)
    UnsafeMergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.Command)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Command::UnsafeMergeFrom(const Command& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_debug()) {
      mutable_debug()->::khero::DebugCommand::MergeFrom(from.debug());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.Command)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Command::IsInitialized() const {

  if (has_debug()) {
    if (!this->debug_->IsInitialized()) return false;
  }
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  std::swap(debug_, other->debug_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Command_descriptor_;
  metadata.reflection = Command_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Command

// optional .khero.DebugCommand debug = 1;
bool Command::has_debug() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Command::set_has_debug() {
  _has_bits_[0] |= 0x00000001u;
}
void Command::clear_has_debug() {
  _has_bits_[0] &= ~0x00000001u;
}
void Command::clear_debug() {
  if (debug_ != NULL) debug_->::khero::DebugCommand::Clear();
  clear_has_debug();
}
const ::khero::DebugCommand& Command::debug() const {
  // @@protoc_insertion_point(field_get:khero.Command.debug)
  return debug_ != NULL ? *debug_
                         : *::khero::DebugCommand::internal_default_instance();
}
::khero::DebugCommand* Command::mutable_debug() {
  set_has_debug();
  if (debug_ == NULL) {
    debug_ = new ::khero::DebugCommand;
  }
  // @@protoc_insertion_point(field_mutable:khero.Command.debug)
  return debug_;
}
::khero::DebugCommand* Command::release_debug() {
  // @@protoc_insertion_point(field_release:khero.Command.debug)
  clear_has_debug();
  ::khero::DebugCommand* temp = debug_;
  debug_ = NULL;
  return temp;
}
void Command::set_allocated_debug(::khero::DebugCommand* debug) {
  delete debug_;
  debug_ = debug;
  if (debug) {
    set_has_debug();
  } else {
    clear_has_debug();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Command.debug)
}

inline const Command* Command::internal_default_instance() {
  return &Command_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kRegisterFieldNumber;
const int Request::kLoginFieldNumber;
const int Request::kOperateFieldNumber;
const int Request::kGameStartFieldNumber;
const int Request::kCreateHomeFieldNumber;
const int Request::kJoinHomeFieldNumber;
const int Request::kHomeInfoFieldNumber;
const int Request::kRoleListFieldNumber;
const int Request::kRoleInfoFieldNumber;
const int Request::kReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.Request)
}

void Request::InitAsDefaultInstance() {
  register__ = const_cast< ::khero::RegisterRequest*>(
      ::khero::RegisterRequest::internal_default_instance());
  login_ = const_cast< ::khero::LoginRequest*>(
      ::khero::LoginRequest::internal_default_instance());
  operate_ = const_cast< ::khero::OperateRequest*>(
      ::khero::OperateRequest::internal_default_instance());
  gamestart_ = const_cast< ::khero::GameStartRequest*>(
      ::khero::GameStartRequest::internal_default_instance());
  createhome_ = const_cast< ::khero::CreateHomeRequest*>(
      ::khero::CreateHomeRequest::internal_default_instance());
  joinhome_ = const_cast< ::khero::JoinHomeRequest*>(
      ::khero::JoinHomeRequest::internal_default_instance());
  homeinfo_ = const_cast< ::khero::HomeInfoRequest*>(
      ::khero::HomeInfoRequest::internal_default_instance());
  rolelist_ = const_cast< ::khero::RoleListRequest*>(
      ::khero::RoleListRequest::internal_default_instance());
  roleinfo_ = const_cast< ::khero::RoleInfoRequest*>(
      ::khero::RoleInfoRequest::internal_default_instance());
  ready_ = const_cast< ::khero::LoadingCompleteRequest*>(
      ::khero::LoadingCompleteRequest::internal_default_instance());
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  register__ = NULL;
  login_ = NULL;
  operate_ = NULL;
  gamestart_ = NULL;
  createhome_ = NULL;
  joinhome_ = NULL;
  homeinfo_ = NULL;
  rolelist_ = NULL;
  roleinfo_ = NULL;
  ready_ = NULL;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:khero.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != &Request_default_instance_.get()) {
    delete register__;
    delete login_;
    delete operate_;
    delete gamestart_;
    delete createhome_;
    delete joinhome_;
    delete homeinfo_;
    delete rolelist_;
    delete roleinfo_;
    delete ready_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.Request)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_register_()) {
      if (register__ != NULL) register__->::khero::RegisterRequest::Clear();
    }
    if (has_login()) {
      if (login_ != NULL) login_->::khero::LoginRequest::Clear();
    }
    if (has_operate()) {
      if (operate_ != NULL) operate_->::khero::OperateRequest::Clear();
    }
    if (has_gamestart()) {
      if (gamestart_ != NULL) gamestart_->::khero::GameStartRequest::Clear();
    }
    if (has_createhome()) {
      if (createhome_ != NULL) createhome_->::khero::CreateHomeRequest::Clear();
    }
    if (has_joinhome()) {
      if (joinhome_ != NULL) joinhome_->::khero::JoinHomeRequest::Clear();
    }
    if (has_homeinfo()) {
      if (homeinfo_ != NULL) homeinfo_->::khero::HomeInfoRequest::Clear();
    }
    if (has_rolelist()) {
      if (rolelist_ != NULL) rolelist_->::khero::RoleListRequest::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_roleinfo()) {
      if (roleinfo_ != NULL) roleinfo_->::khero::RoleInfoRequest::Clear();
    }
    if (has_ready()) {
      if (ready_ != NULL) ready_->::khero::LoadingCompleteRequest::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .khero.RegisterRequest register = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_register_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_login;
        break;
      }

      // optional .khero.LoginRequest login = 2;
      case 2: {
        if (tag == 18) {
         parse_login:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_operate;
        break;
      }

      // optional .khero.OperateRequest operate = 3;
      case 3: {
        if (tag == 26) {
         parse_operate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_operate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_gameStart;
        break;
      }

      // optional .khero.GameStartRequest gameStart = 4;
      case 4: {
        if (tag == 34) {
         parse_gameStart:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamestart()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_createHome;
        break;
      }

      // optional .khero.CreateHomeRequest createHome = 5;
      case 5: {
        if (tag == 42) {
         parse_createHome:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createhome()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_joinHome;
        break;
      }

      // optional .khero.JoinHomeRequest joinHome = 6;
      case 6: {
        if (tag == 50) {
         parse_joinHome:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_joinhome()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_homeInfo;
        break;
      }

      // optional .khero.HomeInfoRequest homeInfo = 7;
      case 7: {
        if (tag == 58) {
         parse_homeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_homeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_roleList;
        break;
      }

      // optional .khero.RoleListRequest roleList = 8;
      case 8: {
        if (tag == 66) {
         parse_roleList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rolelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_roleInfo;
        break;
      }

      // optional .khero.RoleInfoRequest roleInfo = 9;
      case 9: {
        if (tag == 74) {
         parse_roleInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ready;
        break;
      }

      // optional .khero.LoadingCompleteRequest ready = 10;
      case 10: {
        if (tag == 82) {
         parse_ready:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ready()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.Request)
  // optional .khero.RegisterRequest register = 1;
  if (has_register_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->register__, output);
  }

  // optional .khero.LoginRequest login = 2;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->login_, output);
  }

  // optional .khero.OperateRequest operate = 3;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->operate_, output);
  }

  // optional .khero.GameStartRequest gameStart = 4;
  if (has_gamestart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->gamestart_, output);
  }

  // optional .khero.CreateHomeRequest createHome = 5;
  if (has_createhome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->createhome_, output);
  }

  // optional .khero.JoinHomeRequest joinHome = 6;
  if (has_joinhome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->joinhome_, output);
  }

  // optional .khero.HomeInfoRequest homeInfo = 7;
  if (has_homeinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->homeinfo_, output);
  }

  // optional .khero.RoleListRequest roleList = 8;
  if (has_rolelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->rolelist_, output);
  }

  // optional .khero.RoleInfoRequest roleInfo = 9;
  if (has_roleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->roleinfo_, output);
  }

  // optional .khero.LoadingCompleteRequest ready = 10;
  if (has_ready()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->ready_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.Request)
  // optional .khero.RegisterRequest register = 1;
  if (has_register_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->register__, false, target);
  }

  // optional .khero.LoginRequest login = 2;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->login_, false, target);
  }

  // optional .khero.OperateRequest operate = 3;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->operate_, false, target);
  }

  // optional .khero.GameStartRequest gameStart = 4;
  if (has_gamestart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->gamestart_, false, target);
  }

  // optional .khero.CreateHomeRequest createHome = 5;
  if (has_createhome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->createhome_, false, target);
  }

  // optional .khero.JoinHomeRequest joinHome = 6;
  if (has_joinhome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->joinhome_, false, target);
  }

  // optional .khero.HomeInfoRequest homeInfo = 7;
  if (has_homeinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->homeinfo_, false, target);
  }

  // optional .khero.RoleListRequest roleList = 8;
  if (has_rolelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->rolelist_, false, target);
  }

  // optional .khero.RoleInfoRequest roleInfo = 9;
  if (has_roleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->roleinfo_, false, target);
  }

  // optional .khero.LoadingCompleteRequest ready = 10;
  if (has_ready()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->ready_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.Request)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .khero.RegisterRequest register = 1;
    if (has_register_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->register__);
    }

    // optional .khero.LoginRequest login = 2;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->login_);
    }

    // optional .khero.OperateRequest operate = 3;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->operate_);
    }

    // optional .khero.GameStartRequest gameStart = 4;
    if (has_gamestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamestart_);
    }

    // optional .khero.CreateHomeRequest createHome = 5;
    if (has_createhome()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createhome_);
    }

    // optional .khero.JoinHomeRequest joinHome = 6;
    if (has_joinhome()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->joinhome_);
    }

    // optional .khero.HomeInfoRequest homeInfo = 7;
    if (has_homeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->homeinfo_);
    }

    // optional .khero.RoleListRequest roleList = 8;
    if (has_rolelist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rolelist_);
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .khero.RoleInfoRequest roleInfo = 9;
    if (has_roleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->roleinfo_);
    }

    // optional .khero.LoadingCompleteRequest ready = 10;
    if (has_ready()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ready_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.Request)
    UnsafeMergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.Request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Request::UnsafeMergeFrom(const Request& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_register_()) {
      mutable_register_()->::khero::RegisterRequest::MergeFrom(from.register_());
    }
    if (from.has_login()) {
      mutable_login()->::khero::LoginRequest::MergeFrom(from.login());
    }
    if (from.has_operate()) {
      mutable_operate()->::khero::OperateRequest::MergeFrom(from.operate());
    }
    if (from.has_gamestart()) {
      mutable_gamestart()->::khero::GameStartRequest::MergeFrom(from.gamestart());
    }
    if (from.has_createhome()) {
      mutable_createhome()->::khero::CreateHomeRequest::MergeFrom(from.createhome());
    }
    if (from.has_joinhome()) {
      mutable_joinhome()->::khero::JoinHomeRequest::MergeFrom(from.joinhome());
    }
    if (from.has_homeinfo()) {
      mutable_homeinfo()->::khero::HomeInfoRequest::MergeFrom(from.homeinfo());
    }
    if (from.has_rolelist()) {
      mutable_rolelist()->::khero::RoleListRequest::MergeFrom(from.rolelist());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_roleinfo()) {
      mutable_roleinfo()->::khero::RoleInfoRequest::MergeFrom(from.roleinfo());
    }
    if (from.has_ready()) {
      mutable_ready()->::khero::LoadingCompleteRequest::MergeFrom(from.ready());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.Request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Request::IsInitialized() const {

  if (has_register_()) {
    if (!this->register__->IsInitialized()) return false;
  }
  if (has_login()) {
    if (!this->login_->IsInitialized()) return false;
  }
  if (has_operate()) {
    if (!this->operate_->IsInitialized()) return false;
  }
  if (has_gamestart()) {
    if (!this->gamestart_->IsInitialized()) return false;
  }
  if (has_createhome()) {
    if (!this->createhome_->IsInitialized()) return false;
  }
  if (has_joinhome()) {
    if (!this->joinhome_->IsInitialized()) return false;
  }
  if (has_homeinfo()) {
    if (!this->homeinfo_->IsInitialized()) return false;
  }
  if (has_rolelist()) {
    if (!this->rolelist_->IsInitialized()) return false;
  }
  if (has_roleinfo()) {
    if (!this->roleinfo_->IsInitialized()) return false;
  }
  if (has_ready()) {
    if (!this->ready_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(register__, other->register__);
  std::swap(login_, other->login_);
  std::swap(operate_, other->operate_);
  std::swap(gamestart_, other->gamestart_);
  std::swap(createhome_, other->createhome_);
  std::swap(joinhome_, other->joinhome_);
  std::swap(homeinfo_, other->homeinfo_);
  std::swap(rolelist_, other->rolelist_);
  std::swap(roleinfo_, other->roleinfo_);
  std::swap(ready_, other->ready_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional .khero.RegisterRequest register = 1;
bool Request::has_register_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_register_() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_register_() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_register_() {
  if (register__ != NULL) register__->::khero::RegisterRequest::Clear();
  clear_has_register_();
}
const ::khero::RegisterRequest& Request::register_() const {
  // @@protoc_insertion_point(field_get:khero.Request.register)
  return register__ != NULL ? *register__
                         : *::khero::RegisterRequest::internal_default_instance();
}
::khero::RegisterRequest* Request::mutable_register_() {
  set_has_register_();
  if (register__ == NULL) {
    register__ = new ::khero::RegisterRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.register)
  return register__;
}
::khero::RegisterRequest* Request::release_register_() {
  // @@protoc_insertion_point(field_release:khero.Request.register)
  clear_has_register_();
  ::khero::RegisterRequest* temp = register__;
  register__ = NULL;
  return temp;
}
void Request::set_allocated_register_(::khero::RegisterRequest* register_) {
  delete register__;
  register__ = register_;
  if (register_) {
    set_has_register_();
  } else {
    clear_has_register_();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.register)
}

// optional .khero.LoginRequest login = 2;
bool Request::has_login() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_login() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_login() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_login() {
  if (login_ != NULL) login_->::khero::LoginRequest::Clear();
  clear_has_login();
}
const ::khero::LoginRequest& Request::login() const {
  // @@protoc_insertion_point(field_get:khero.Request.login)
  return login_ != NULL ? *login_
                         : *::khero::LoginRequest::internal_default_instance();
}
::khero::LoginRequest* Request::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::khero::LoginRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.login)
  return login_;
}
::khero::LoginRequest* Request::release_login() {
  // @@protoc_insertion_point(field_release:khero.Request.login)
  clear_has_login();
  ::khero::LoginRequest* temp = login_;
  login_ = NULL;
  return temp;
}
void Request::set_allocated_login(::khero::LoginRequest* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.login)
}

// optional .khero.OperateRequest operate = 3;
bool Request::has_operate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_operate() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_operate() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_operate() {
  if (operate_ != NULL) operate_->::khero::OperateRequest::Clear();
  clear_has_operate();
}
const ::khero::OperateRequest& Request::operate() const {
  // @@protoc_insertion_point(field_get:khero.Request.operate)
  return operate_ != NULL ? *operate_
                         : *::khero::OperateRequest::internal_default_instance();
}
::khero::OperateRequest* Request::mutable_operate() {
  set_has_operate();
  if (operate_ == NULL) {
    operate_ = new ::khero::OperateRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.operate)
  return operate_;
}
::khero::OperateRequest* Request::release_operate() {
  // @@protoc_insertion_point(field_release:khero.Request.operate)
  clear_has_operate();
  ::khero::OperateRequest* temp = operate_;
  operate_ = NULL;
  return temp;
}
void Request::set_allocated_operate(::khero::OperateRequest* operate) {
  delete operate_;
  operate_ = operate;
  if (operate) {
    set_has_operate();
  } else {
    clear_has_operate();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.operate)
}

// optional .khero.GameStartRequest gameStart = 4;
bool Request::has_gamestart() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_gamestart() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_gamestart() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_gamestart() {
  if (gamestart_ != NULL) gamestart_->::khero::GameStartRequest::Clear();
  clear_has_gamestart();
}
const ::khero::GameStartRequest& Request::gamestart() const {
  // @@protoc_insertion_point(field_get:khero.Request.gameStart)
  return gamestart_ != NULL ? *gamestart_
                         : *::khero::GameStartRequest::internal_default_instance();
}
::khero::GameStartRequest* Request::mutable_gamestart() {
  set_has_gamestart();
  if (gamestart_ == NULL) {
    gamestart_ = new ::khero::GameStartRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.gameStart)
  return gamestart_;
}
::khero::GameStartRequest* Request::release_gamestart() {
  // @@protoc_insertion_point(field_release:khero.Request.gameStart)
  clear_has_gamestart();
  ::khero::GameStartRequest* temp = gamestart_;
  gamestart_ = NULL;
  return temp;
}
void Request::set_allocated_gamestart(::khero::GameStartRequest* gamestart) {
  delete gamestart_;
  gamestart_ = gamestart;
  if (gamestart) {
    set_has_gamestart();
  } else {
    clear_has_gamestart();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.gameStart)
}

// optional .khero.CreateHomeRequest createHome = 5;
bool Request::has_createhome() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request::set_has_createhome() {
  _has_bits_[0] |= 0x00000010u;
}
void Request::clear_has_createhome() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request::clear_createhome() {
  if (createhome_ != NULL) createhome_->::khero::CreateHomeRequest::Clear();
  clear_has_createhome();
}
const ::khero::CreateHomeRequest& Request::createhome() const {
  // @@protoc_insertion_point(field_get:khero.Request.createHome)
  return createhome_ != NULL ? *createhome_
                         : *::khero::CreateHomeRequest::internal_default_instance();
}
::khero::CreateHomeRequest* Request::mutable_createhome() {
  set_has_createhome();
  if (createhome_ == NULL) {
    createhome_ = new ::khero::CreateHomeRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.createHome)
  return createhome_;
}
::khero::CreateHomeRequest* Request::release_createhome() {
  // @@protoc_insertion_point(field_release:khero.Request.createHome)
  clear_has_createhome();
  ::khero::CreateHomeRequest* temp = createhome_;
  createhome_ = NULL;
  return temp;
}
void Request::set_allocated_createhome(::khero::CreateHomeRequest* createhome) {
  delete createhome_;
  createhome_ = createhome;
  if (createhome) {
    set_has_createhome();
  } else {
    clear_has_createhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.createHome)
}

// optional .khero.JoinHomeRequest joinHome = 6;
bool Request::has_joinhome() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Request::set_has_joinhome() {
  _has_bits_[0] |= 0x00000020u;
}
void Request::clear_has_joinhome() {
  _has_bits_[0] &= ~0x00000020u;
}
void Request::clear_joinhome() {
  if (joinhome_ != NULL) joinhome_->::khero::JoinHomeRequest::Clear();
  clear_has_joinhome();
}
const ::khero::JoinHomeRequest& Request::joinhome() const {
  // @@protoc_insertion_point(field_get:khero.Request.joinHome)
  return joinhome_ != NULL ? *joinhome_
                         : *::khero::JoinHomeRequest::internal_default_instance();
}
::khero::JoinHomeRequest* Request::mutable_joinhome() {
  set_has_joinhome();
  if (joinhome_ == NULL) {
    joinhome_ = new ::khero::JoinHomeRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.joinHome)
  return joinhome_;
}
::khero::JoinHomeRequest* Request::release_joinhome() {
  // @@protoc_insertion_point(field_release:khero.Request.joinHome)
  clear_has_joinhome();
  ::khero::JoinHomeRequest* temp = joinhome_;
  joinhome_ = NULL;
  return temp;
}
void Request::set_allocated_joinhome(::khero::JoinHomeRequest* joinhome) {
  delete joinhome_;
  joinhome_ = joinhome;
  if (joinhome) {
    set_has_joinhome();
  } else {
    clear_has_joinhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.joinHome)
}

// optional .khero.HomeInfoRequest homeInfo = 7;
bool Request::has_homeinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Request::set_has_homeinfo() {
  _has_bits_[0] |= 0x00000040u;
}
void Request::clear_has_homeinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
void Request::clear_homeinfo() {
  if (homeinfo_ != NULL) homeinfo_->::khero::HomeInfoRequest::Clear();
  clear_has_homeinfo();
}
const ::khero::HomeInfoRequest& Request::homeinfo() const {
  // @@protoc_insertion_point(field_get:khero.Request.homeInfo)
  return homeinfo_ != NULL ? *homeinfo_
                         : *::khero::HomeInfoRequest::internal_default_instance();
}
::khero::HomeInfoRequest* Request::mutable_homeinfo() {
  set_has_homeinfo();
  if (homeinfo_ == NULL) {
    homeinfo_ = new ::khero::HomeInfoRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.homeInfo)
  return homeinfo_;
}
::khero::HomeInfoRequest* Request::release_homeinfo() {
  // @@protoc_insertion_point(field_release:khero.Request.homeInfo)
  clear_has_homeinfo();
  ::khero::HomeInfoRequest* temp = homeinfo_;
  homeinfo_ = NULL;
  return temp;
}
void Request::set_allocated_homeinfo(::khero::HomeInfoRequest* homeinfo) {
  delete homeinfo_;
  homeinfo_ = homeinfo;
  if (homeinfo) {
    set_has_homeinfo();
  } else {
    clear_has_homeinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.homeInfo)
}

// optional .khero.RoleListRequest roleList = 8;
bool Request::has_rolelist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request::set_has_rolelist() {
  _has_bits_[0] |= 0x00000080u;
}
void Request::clear_has_rolelist() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request::clear_rolelist() {
  if (rolelist_ != NULL) rolelist_->::khero::RoleListRequest::Clear();
  clear_has_rolelist();
}
const ::khero::RoleListRequest& Request::rolelist() const {
  // @@protoc_insertion_point(field_get:khero.Request.roleList)
  return rolelist_ != NULL ? *rolelist_
                         : *::khero::RoleListRequest::internal_default_instance();
}
::khero::RoleListRequest* Request::mutable_rolelist() {
  set_has_rolelist();
  if (rolelist_ == NULL) {
    rolelist_ = new ::khero::RoleListRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.roleList)
  return rolelist_;
}
::khero::RoleListRequest* Request::release_rolelist() {
  // @@protoc_insertion_point(field_release:khero.Request.roleList)
  clear_has_rolelist();
  ::khero::RoleListRequest* temp = rolelist_;
  rolelist_ = NULL;
  return temp;
}
void Request::set_allocated_rolelist(::khero::RoleListRequest* rolelist) {
  delete rolelist_;
  rolelist_ = rolelist;
  if (rolelist) {
    set_has_rolelist();
  } else {
    clear_has_rolelist();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.roleList)
}

// optional .khero.RoleInfoRequest roleInfo = 9;
bool Request::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Request::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000100u;
}
void Request::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
void Request::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::khero::RoleInfoRequest::Clear();
  clear_has_roleinfo();
}
const ::khero::RoleInfoRequest& Request::roleinfo() const {
  // @@protoc_insertion_point(field_get:khero.Request.roleInfo)
  return roleinfo_ != NULL ? *roleinfo_
                         : *::khero::RoleInfoRequest::internal_default_instance();
}
::khero::RoleInfoRequest* Request::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) {
    roleinfo_ = new ::khero::RoleInfoRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.roleInfo)
  return roleinfo_;
}
::khero::RoleInfoRequest* Request::release_roleinfo() {
  // @@protoc_insertion_point(field_release:khero.Request.roleInfo)
  clear_has_roleinfo();
  ::khero::RoleInfoRequest* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
void Request::set_allocated_roleinfo(::khero::RoleInfoRequest* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.roleInfo)
}

// optional .khero.LoadingCompleteRequest ready = 10;
bool Request::has_ready() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Request::set_has_ready() {
  _has_bits_[0] |= 0x00000200u;
}
void Request::clear_has_ready() {
  _has_bits_[0] &= ~0x00000200u;
}
void Request::clear_ready() {
  if (ready_ != NULL) ready_->::khero::LoadingCompleteRequest::Clear();
  clear_has_ready();
}
const ::khero::LoadingCompleteRequest& Request::ready() const {
  // @@protoc_insertion_point(field_get:khero.Request.ready)
  return ready_ != NULL ? *ready_
                         : *::khero::LoadingCompleteRequest::internal_default_instance();
}
::khero::LoadingCompleteRequest* Request::mutable_ready() {
  set_has_ready();
  if (ready_ == NULL) {
    ready_ = new ::khero::LoadingCompleteRequest;
  }
  // @@protoc_insertion_point(field_mutable:khero.Request.ready)
  return ready_;
}
::khero::LoadingCompleteRequest* Request::release_ready() {
  // @@protoc_insertion_point(field_release:khero.Request.ready)
  clear_has_ready();
  ::khero::LoadingCompleteRequest* temp = ready_;
  ready_ = NULL;
  return temp;
}
void Request::set_allocated_ready(::khero::LoadingCompleteRequest* ready) {
  delete ready_;
  ready_ = ready;
  if (ready) {
    set_has_ready();
  } else {
    clear_has_ready();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Request.ready)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kResultFieldNumber;
const int Response::kLastResponseFieldNumber;
const int Response::kErrorDescribeFieldNumber;
const int Response::kRegisterFieldNumber;
const int Response::kLoginFieldNumber;
const int Response::kCreateHomeFieldNumber;
const int Response::kJoinHomeFieldNumber;
const int Response::kHomeInfoFieldNumber;
const int Response::kRoleListFieldNumber;
const int Response::kRoleInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.Response)
}

void Response::InitAsDefaultInstance() {
  register__ = const_cast< ::khero::RegisterResponse*>(
      ::khero::RegisterResponse::internal_default_instance());
  login_ = const_cast< ::khero::LoginResponse*>(
      ::khero::LoginResponse::internal_default_instance());
  createhome_ = const_cast< ::khero::CreateHomeResponse*>(
      ::khero::CreateHomeResponse::internal_default_instance());
  joinhome_ = const_cast< ::khero::JoinHomeResponse*>(
      ::khero::JoinHomeResponse::internal_default_instance());
  homeinfo_ = const_cast< ::khero::HomeInfoResponse*>(
      ::khero::HomeInfoResponse::internal_default_instance());
  rolelist_ = const_cast< ::khero::RoleListResponse*>(
      ::khero::RoleListResponse::internal_default_instance());
  roleinfo_ = const_cast< ::khero::RoleInfoResponse*>(
      ::khero::RoleInfoResponse::internal_default_instance());
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  error_describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  register__ = NULL;
  login_ = NULL;
  createhome_ = NULL;
  joinhome_ = NULL;
  homeinfo_ = NULL;
  rolelist_ = NULL;
  roleinfo_ = NULL;
  ::memset(&result_, 0, reinterpret_cast<char*>(&last_response_) -
    reinterpret_cast<char*>(&result_) + sizeof(last_response_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:khero.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  error_describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Response_default_instance_.get()) {
    delete register__;
    delete login_;
    delete createhome_;
    delete joinhome_;
    delete homeinfo_;
    delete rolelist_;
    delete roleinfo_;
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.Response)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(result_, last_response_);
    if (has_error_describe()) {
      error_describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_register_()) {
      if (register__ != NULL) register__->::khero::RegisterResponse::Clear();
    }
    if (has_login()) {
      if (login_ != NULL) login_->::khero::LoginResponse::Clear();
    }
    if (has_createhome()) {
      if (createhome_ != NULL) createhome_->::khero::CreateHomeResponse::Clear();
    }
    if (has_joinhome()) {
      if (joinhome_ != NULL) joinhome_->::khero::JoinHomeResponse::Clear();
    }
    if (has_homeinfo()) {
      if (homeinfo_ != NULL) homeinfo_->::khero::HomeInfoResponse::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_rolelist()) {
      if (rolelist_ != NULL) rolelist_->::khero::RoleListResponse::Clear();
    }
    if (has_roleinfo()) {
      if (roleinfo_ != NULL) roleinfo_->::khero::RoleInfoResponse::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_last_response;
        break;
      }

      // required bool last_response = 2;
      case 2: {
        if (tag == 16) {
         parse_last_response:
          set_has_last_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &last_response_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error_describe;
        break;
      }

      // optional bytes error_describe = 3;
      case 3: {
        if (tag == 26) {
         parse_error_describe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_error_describe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_register;
        break;
      }

      // optional .khero.RegisterResponse register = 4;
      case 4: {
        if (tag == 34) {
         parse_register:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_register_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_login;
        break;
      }

      // optional .khero.LoginResponse login = 5;
      case 5: {
        if (tag == 42) {
         parse_login:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_createHome;
        break;
      }

      // optional .khero.CreateHomeResponse createHome = 6;
      case 6: {
        if (tag == 50) {
         parse_createHome:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createhome()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_joinHome;
        break;
      }

      // optional .khero.JoinHomeResponse joinHome = 7;
      case 7: {
        if (tag == 58) {
         parse_joinHome:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_joinhome()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_homeInfo;
        break;
      }

      // optional .khero.HomeInfoResponse homeInfo = 8;
      case 8: {
        if (tag == 66) {
         parse_homeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_homeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_roleList;
        break;
      }

      // optional .khero.RoleListResponse roleList = 9;
      case 9: {
        if (tag == 74) {
         parse_roleList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rolelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_roleInfo;
        break;
      }

      // optional .khero.RoleInfoResponse roleInfo = 10;
      case 10: {
        if (tag == 82) {
         parse_roleInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roleinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.Response)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // required bool last_response = 2;
  if (has_last_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->last_response(), output);
  }

  // optional bytes error_describe = 3;
  if (has_error_describe()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->error_describe(), output);
  }

  // optional .khero.RegisterResponse register = 4;
  if (has_register_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->register__, output);
  }

  // optional .khero.LoginResponse login = 5;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->login_, output);
  }

  // optional .khero.CreateHomeResponse createHome = 6;
  if (has_createhome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->createhome_, output);
  }

  // optional .khero.JoinHomeResponse joinHome = 7;
  if (has_joinhome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->joinhome_, output);
  }

  // optional .khero.HomeInfoResponse homeInfo = 8;
  if (has_homeinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->homeinfo_, output);
  }

  // optional .khero.RoleListResponse roleList = 9;
  if (has_rolelist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->rolelist_, output);
  }

  // optional .khero.RoleInfoResponse roleInfo = 10;
  if (has_roleinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->roleinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.Response)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // required bool last_response = 2;
  if (has_last_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->last_response(), target);
  }

  // optional bytes error_describe = 3;
  if (has_error_describe()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->error_describe(), target);
  }

  // optional .khero.RegisterResponse register = 4;
  if (has_register_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->register__, false, target);
  }

  // optional .khero.LoginResponse login = 5;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->login_, false, target);
  }

  // optional .khero.CreateHomeResponse createHome = 6;
  if (has_createhome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->createhome_, false, target);
  }

  // optional .khero.JoinHomeResponse joinHome = 7;
  if (has_joinhome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->joinhome_, false, target);
  }

  // optional .khero.HomeInfoResponse homeInfo = 8;
  if (has_homeinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->homeinfo_, false, target);
  }

  // optional .khero.RoleListResponse roleList = 9;
  if (has_rolelist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->rolelist_, false, target);
  }

  // optional .khero.RoleInfoResponse roleInfo = 10;
  if (has_roleinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->roleinfo_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.Response)
  return target;
}

size_t Response::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.Response)
  size_t total_size = 0;

  if (has_result()) {
    // required bool result = 1;
    total_size += 1 + 1;
  }

  if (has_last_response()) {
    // required bool last_response = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.Response)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bool result = 1;
    total_size += 1 + 1;

    // required bool last_response = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional bytes error_describe = 3;
    if (has_error_describe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->error_describe());
    }

    // optional .khero.RegisterResponse register = 4;
    if (has_register_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->register__);
    }

    // optional .khero.LoginResponse login = 5;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->login_);
    }

    // optional .khero.CreateHomeResponse createHome = 6;
    if (has_createhome()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createhome_);
    }

    // optional .khero.JoinHomeResponse joinHome = 7;
    if (has_joinhome()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->joinhome_);
    }

    // optional .khero.HomeInfoResponse homeInfo = 8;
    if (has_homeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->homeinfo_);
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .khero.RoleListResponse roleList = 9;
    if (has_rolelist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rolelist_);
    }

    // optional .khero.RoleInfoResponse roleInfo = 10;
    if (has_roleinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->roleinfo_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.Response)
    UnsafeMergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.Response)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Response::UnsafeMergeFrom(const Response& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_last_response()) {
      set_last_response(from.last_response());
    }
    if (from.has_error_describe()) {
      set_has_error_describe();
      error_describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_describe_);
    }
    if (from.has_register_()) {
      mutable_register_()->::khero::RegisterResponse::MergeFrom(from.register_());
    }
    if (from.has_login()) {
      mutable_login()->::khero::LoginResponse::MergeFrom(from.login());
    }
    if (from.has_createhome()) {
      mutable_createhome()->::khero::CreateHomeResponse::MergeFrom(from.createhome());
    }
    if (from.has_joinhome()) {
      mutable_joinhome()->::khero::JoinHomeResponse::MergeFrom(from.joinhome());
    }
    if (from.has_homeinfo()) {
      mutable_homeinfo()->::khero::HomeInfoResponse::MergeFrom(from.homeinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rolelist()) {
      mutable_rolelist()->::khero::RoleListResponse::MergeFrom(from.rolelist());
    }
    if (from.has_roleinfo()) {
      mutable_roleinfo()->::khero::RoleInfoResponse::MergeFrom(from.roleinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.Response)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_register_()) {
    if (!this->register__->IsInitialized()) return false;
  }
  if (has_login()) {
    if (!this->login_->IsInitialized()) return false;
  }
  if (has_createhome()) {
    if (!this->createhome_->IsInitialized()) return false;
  }
  if (has_joinhome()) {
    if (!this->joinhome_->IsInitialized()) return false;
  }
  if (has_homeinfo()) {
    if (!this->homeinfo_->IsInitialized()) return false;
  }
  if (has_roleinfo()) {
    if (!this->roleinfo_->IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  std::swap(result_, other->result_);
  std::swap(last_response_, other->last_response_);
  error_describe_.Swap(&other->error_describe_);
  std::swap(register__, other->register__);
  std::swap(login_, other->login_);
  std::swap(createhome_, other->createhome_);
  std::swap(joinhome_, other->joinhome_);
  std::swap(homeinfo_, other->homeinfo_);
  std::swap(rolelist_, other->rolelist_);
  std::swap(roleinfo_, other->roleinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// required bool result = 1;
bool Response::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void Response::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response::clear_result() {
  result_ = false;
  clear_has_result();
}
bool Response::result() const {
  // @@protoc_insertion_point(field_get:khero.Response.result)
  return result_;
}
void Response::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.Response.result)
}

// required bool last_response = 2;
bool Response::has_last_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response::set_has_last_response() {
  _has_bits_[0] |= 0x00000002u;
}
void Response::clear_has_last_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response::clear_last_response() {
  last_response_ = false;
  clear_has_last_response();
}
bool Response::last_response() const {
  // @@protoc_insertion_point(field_get:khero.Response.last_response)
  return last_response_;
}
void Response::set_last_response(bool value) {
  set_has_last_response();
  last_response_ = value;
  // @@protoc_insertion_point(field_set:khero.Response.last_response)
}

// optional bytes error_describe = 3;
bool Response::has_error_describe() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response::set_has_error_describe() {
  _has_bits_[0] |= 0x00000004u;
}
void Response::clear_has_error_describe() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response::clear_error_describe() {
  error_describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_describe();
}
const ::std::string& Response::error_describe() const {
  // @@protoc_insertion_point(field_get:khero.Response.error_describe)
  return error_describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response::set_error_describe(const ::std::string& value) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.Response.error_describe)
}
void Response::set_error_describe(const char* value) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.Response.error_describe)
}
void Response::set_error_describe(const void* value, size_t size) {
  set_has_error_describe();
  error_describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.Response.error_describe)
}
::std::string* Response::mutable_error_describe() {
  set_has_error_describe();
  // @@protoc_insertion_point(field_mutable:khero.Response.error_describe)
  return error_describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Response::release_error_describe() {
  // @@protoc_insertion_point(field_release:khero.Response.error_describe)
  clear_has_error_describe();
  return error_describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Response::set_allocated_error_describe(::std::string* error_describe) {
  if (error_describe != NULL) {
    set_has_error_describe();
  } else {
    clear_has_error_describe();
  }
  error_describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_describe);
  // @@protoc_insertion_point(field_set_allocated:khero.Response.error_describe)
}

// optional .khero.RegisterResponse register = 4;
bool Response::has_register_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Response::set_has_register_() {
  _has_bits_[0] |= 0x00000008u;
}
void Response::clear_has_register_() {
  _has_bits_[0] &= ~0x00000008u;
}
void Response::clear_register_() {
  if (register__ != NULL) register__->::khero::RegisterResponse::Clear();
  clear_has_register_();
}
const ::khero::RegisterResponse& Response::register_() const {
  // @@protoc_insertion_point(field_get:khero.Response.register)
  return register__ != NULL ? *register__
                         : *::khero::RegisterResponse::internal_default_instance();
}
::khero::RegisterResponse* Response::mutable_register_() {
  set_has_register_();
  if (register__ == NULL) {
    register__ = new ::khero::RegisterResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.register)
  return register__;
}
::khero::RegisterResponse* Response::release_register_() {
  // @@protoc_insertion_point(field_release:khero.Response.register)
  clear_has_register_();
  ::khero::RegisterResponse* temp = register__;
  register__ = NULL;
  return temp;
}
void Response::set_allocated_register_(::khero::RegisterResponse* register_) {
  delete register__;
  register__ = register_;
  if (register_) {
    set_has_register_();
  } else {
    clear_has_register_();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.register)
}

// optional .khero.LoginResponse login = 5;
bool Response::has_login() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Response::set_has_login() {
  _has_bits_[0] |= 0x00000010u;
}
void Response::clear_has_login() {
  _has_bits_[0] &= ~0x00000010u;
}
void Response::clear_login() {
  if (login_ != NULL) login_->::khero::LoginResponse::Clear();
  clear_has_login();
}
const ::khero::LoginResponse& Response::login() const {
  // @@protoc_insertion_point(field_get:khero.Response.login)
  return login_ != NULL ? *login_
                         : *::khero::LoginResponse::internal_default_instance();
}
::khero::LoginResponse* Response::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::khero::LoginResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.login)
  return login_;
}
::khero::LoginResponse* Response::release_login() {
  // @@protoc_insertion_point(field_release:khero.Response.login)
  clear_has_login();
  ::khero::LoginResponse* temp = login_;
  login_ = NULL;
  return temp;
}
void Response::set_allocated_login(::khero::LoginResponse* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.login)
}

// optional .khero.CreateHomeResponse createHome = 6;
bool Response::has_createhome() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Response::set_has_createhome() {
  _has_bits_[0] |= 0x00000020u;
}
void Response::clear_has_createhome() {
  _has_bits_[0] &= ~0x00000020u;
}
void Response::clear_createhome() {
  if (createhome_ != NULL) createhome_->::khero::CreateHomeResponse::Clear();
  clear_has_createhome();
}
const ::khero::CreateHomeResponse& Response::createhome() const {
  // @@protoc_insertion_point(field_get:khero.Response.createHome)
  return createhome_ != NULL ? *createhome_
                         : *::khero::CreateHomeResponse::internal_default_instance();
}
::khero::CreateHomeResponse* Response::mutable_createhome() {
  set_has_createhome();
  if (createhome_ == NULL) {
    createhome_ = new ::khero::CreateHomeResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.createHome)
  return createhome_;
}
::khero::CreateHomeResponse* Response::release_createhome() {
  // @@protoc_insertion_point(field_release:khero.Response.createHome)
  clear_has_createhome();
  ::khero::CreateHomeResponse* temp = createhome_;
  createhome_ = NULL;
  return temp;
}
void Response::set_allocated_createhome(::khero::CreateHomeResponse* createhome) {
  delete createhome_;
  createhome_ = createhome;
  if (createhome) {
    set_has_createhome();
  } else {
    clear_has_createhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.createHome)
}

// optional .khero.JoinHomeResponse joinHome = 7;
bool Response::has_joinhome() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Response::set_has_joinhome() {
  _has_bits_[0] |= 0x00000040u;
}
void Response::clear_has_joinhome() {
  _has_bits_[0] &= ~0x00000040u;
}
void Response::clear_joinhome() {
  if (joinhome_ != NULL) joinhome_->::khero::JoinHomeResponse::Clear();
  clear_has_joinhome();
}
const ::khero::JoinHomeResponse& Response::joinhome() const {
  // @@protoc_insertion_point(field_get:khero.Response.joinHome)
  return joinhome_ != NULL ? *joinhome_
                         : *::khero::JoinHomeResponse::internal_default_instance();
}
::khero::JoinHomeResponse* Response::mutable_joinhome() {
  set_has_joinhome();
  if (joinhome_ == NULL) {
    joinhome_ = new ::khero::JoinHomeResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.joinHome)
  return joinhome_;
}
::khero::JoinHomeResponse* Response::release_joinhome() {
  // @@protoc_insertion_point(field_release:khero.Response.joinHome)
  clear_has_joinhome();
  ::khero::JoinHomeResponse* temp = joinhome_;
  joinhome_ = NULL;
  return temp;
}
void Response::set_allocated_joinhome(::khero::JoinHomeResponse* joinhome) {
  delete joinhome_;
  joinhome_ = joinhome;
  if (joinhome) {
    set_has_joinhome();
  } else {
    clear_has_joinhome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.joinHome)
}

// optional .khero.HomeInfoResponse homeInfo = 8;
bool Response::has_homeinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Response::set_has_homeinfo() {
  _has_bits_[0] |= 0x00000080u;
}
void Response::clear_has_homeinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
void Response::clear_homeinfo() {
  if (homeinfo_ != NULL) homeinfo_->::khero::HomeInfoResponse::Clear();
  clear_has_homeinfo();
}
const ::khero::HomeInfoResponse& Response::homeinfo() const {
  // @@protoc_insertion_point(field_get:khero.Response.homeInfo)
  return homeinfo_ != NULL ? *homeinfo_
                         : *::khero::HomeInfoResponse::internal_default_instance();
}
::khero::HomeInfoResponse* Response::mutable_homeinfo() {
  set_has_homeinfo();
  if (homeinfo_ == NULL) {
    homeinfo_ = new ::khero::HomeInfoResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.homeInfo)
  return homeinfo_;
}
::khero::HomeInfoResponse* Response::release_homeinfo() {
  // @@protoc_insertion_point(field_release:khero.Response.homeInfo)
  clear_has_homeinfo();
  ::khero::HomeInfoResponse* temp = homeinfo_;
  homeinfo_ = NULL;
  return temp;
}
void Response::set_allocated_homeinfo(::khero::HomeInfoResponse* homeinfo) {
  delete homeinfo_;
  homeinfo_ = homeinfo;
  if (homeinfo) {
    set_has_homeinfo();
  } else {
    clear_has_homeinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.homeInfo)
}

// optional .khero.RoleListResponse roleList = 9;
bool Response::has_rolelist() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Response::set_has_rolelist() {
  _has_bits_[0] |= 0x00000100u;
}
void Response::clear_has_rolelist() {
  _has_bits_[0] &= ~0x00000100u;
}
void Response::clear_rolelist() {
  if (rolelist_ != NULL) rolelist_->::khero::RoleListResponse::Clear();
  clear_has_rolelist();
}
const ::khero::RoleListResponse& Response::rolelist() const {
  // @@protoc_insertion_point(field_get:khero.Response.roleList)
  return rolelist_ != NULL ? *rolelist_
                         : *::khero::RoleListResponse::internal_default_instance();
}
::khero::RoleListResponse* Response::mutable_rolelist() {
  set_has_rolelist();
  if (rolelist_ == NULL) {
    rolelist_ = new ::khero::RoleListResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.roleList)
  return rolelist_;
}
::khero::RoleListResponse* Response::release_rolelist() {
  // @@protoc_insertion_point(field_release:khero.Response.roleList)
  clear_has_rolelist();
  ::khero::RoleListResponse* temp = rolelist_;
  rolelist_ = NULL;
  return temp;
}
void Response::set_allocated_rolelist(::khero::RoleListResponse* rolelist) {
  delete rolelist_;
  rolelist_ = rolelist;
  if (rolelist) {
    set_has_rolelist();
  } else {
    clear_has_rolelist();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.roleList)
}

// optional .khero.RoleInfoResponse roleInfo = 10;
bool Response::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Response::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000200u;
}
void Response::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000200u;
}
void Response::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::khero::RoleInfoResponse::Clear();
  clear_has_roleinfo();
}
const ::khero::RoleInfoResponse& Response::roleinfo() const {
  // @@protoc_insertion_point(field_get:khero.Response.roleInfo)
  return roleinfo_ != NULL ? *roleinfo_
                         : *::khero::RoleInfoResponse::internal_default_instance();
}
::khero::RoleInfoResponse* Response::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) {
    roleinfo_ = new ::khero::RoleInfoResponse;
  }
  // @@protoc_insertion_point(field_mutable:khero.Response.roleInfo)
  return roleinfo_;
}
::khero::RoleInfoResponse* Response::release_roleinfo() {
  // @@protoc_insertion_point(field_release:khero.Response.roleInfo)
  clear_has_roleinfo();
  ::khero::RoleInfoResponse* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
void Response::set_allocated_roleinfo(::khero::RoleInfoResponse* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Response.roleInfo)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notification::kWelcomeFieldNumber;
const int Notification::kFrameFieldNumber;
const int Notification::kGameStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notification::Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.Notification)
}

void Notification::InitAsDefaultInstance() {
  welcome_ = const_cast< ::khero::WelcomeNotification*>(
      ::khero::WelcomeNotification::internal_default_instance());
  frame_ = const_cast< ::khero::FrameNotification*>(
      ::khero::FrameNotification::internal_default_instance());
  gamestart_ = const_cast< ::khero::GameStartNotification*>(
      ::khero::GameStartNotification::internal_default_instance());
}

Notification::Notification(const Notification& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.Notification)
}

void Notification::SharedCtor() {
  _cached_size_ = 0;
  welcome_ = NULL;
  frame_ = NULL;
  gamestart_ = NULL;
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:khero.Notification)
  SharedDtor();
}

void Notification::SharedDtor() {
  if (this != &Notification_default_instance_.get()) {
    delete welcome_;
    delete frame_;
    delete gamestart_;
  }
}

void Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Notification_descriptor_;
}

const Notification& Notification::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Notification> Notification_default_instance_;

Notification* Notification::New(::google::protobuf::Arena* arena) const {
  Notification* n = new Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.Notification)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_welcome()) {
      if (welcome_ != NULL) welcome_->::khero::WelcomeNotification::Clear();
    }
    if (has_frame()) {
      if (frame_ != NULL) frame_->::khero::FrameNotification::Clear();
    }
    if (has_gamestart()) {
      if (gamestart_ != NULL) gamestart_->::khero::GameStartNotification::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .khero.WelcomeNotification welcome = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_welcome()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_frame;
        break;
      }

      // optional .khero.FrameNotification frame = 2;
      case 2: {
        if (tag == 18) {
         parse_frame:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_frame()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gameStart;
        break;
      }

      // optional .khero.GameStartNotification gameStart = 3;
      case 3: {
        if (tag == 26) {
         parse_gameStart:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamestart()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.Notification)
  return false;
#undef DO_
}

void Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.Notification)
  // optional .khero.WelcomeNotification welcome = 1;
  if (has_welcome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->welcome_, output);
  }

  // optional .khero.FrameNotification frame = 2;
  if (has_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->frame_, output);
  }

  // optional .khero.GameStartNotification gameStart = 3;
  if (has_gamestart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->gamestart_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.Notification)
}

::google::protobuf::uint8* Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.Notification)
  // optional .khero.WelcomeNotification welcome = 1;
  if (has_welcome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->welcome_, false, target);
  }

  // optional .khero.FrameNotification frame = 2;
  if (has_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->frame_, false, target);
  }

  // optional .khero.GameStartNotification gameStart = 3;
  if (has_gamestart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->gamestart_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.Notification)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .khero.WelcomeNotification welcome = 1;
    if (has_welcome()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->welcome_);
    }

    // optional .khero.FrameNotification frame = 2;
    if (has_frame()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->frame_);
    }

    // optional .khero.GameStartNotification gameStart = 3;
    if (has_gamestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamestart_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.Notification)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.Notification)
    UnsafeMergeFrom(*source);
  }
}

void Notification::MergeFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.Notification)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Notification::UnsafeMergeFrom(const Notification& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_welcome()) {
      mutable_welcome()->::khero::WelcomeNotification::MergeFrom(from.welcome());
    }
    if (from.has_frame()) {
      mutable_frame()->::khero::FrameNotification::MergeFrom(from.frame());
    }
    if (from.has_gamestart()) {
      mutable_gamestart()->::khero::GameStartNotification::MergeFrom(from.gamestart());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.Notification)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Notification::IsInitialized() const {

  if (has_welcome()) {
    if (!this->welcome_->IsInitialized()) return false;
  }
  if (has_frame()) {
    if (!this->frame_->IsInitialized()) return false;
  }
  return true;
}

void Notification::Swap(Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notification::InternalSwap(Notification* other) {
  std::swap(welcome_, other->welcome_);
  std::swap(frame_, other->frame_);
  std::swap(gamestart_, other->gamestart_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Notification_descriptor_;
  metadata.reflection = Notification_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Notification

// optional .khero.WelcomeNotification welcome = 1;
bool Notification::has_welcome() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Notification::set_has_welcome() {
  _has_bits_[0] |= 0x00000001u;
}
void Notification::clear_has_welcome() {
  _has_bits_[0] &= ~0x00000001u;
}
void Notification::clear_welcome() {
  if (welcome_ != NULL) welcome_->::khero::WelcomeNotification::Clear();
  clear_has_welcome();
}
const ::khero::WelcomeNotification& Notification::welcome() const {
  // @@protoc_insertion_point(field_get:khero.Notification.welcome)
  return welcome_ != NULL ? *welcome_
                         : *::khero::WelcomeNotification::internal_default_instance();
}
::khero::WelcomeNotification* Notification::mutable_welcome() {
  set_has_welcome();
  if (welcome_ == NULL) {
    welcome_ = new ::khero::WelcomeNotification;
  }
  // @@protoc_insertion_point(field_mutable:khero.Notification.welcome)
  return welcome_;
}
::khero::WelcomeNotification* Notification::release_welcome() {
  // @@protoc_insertion_point(field_release:khero.Notification.welcome)
  clear_has_welcome();
  ::khero::WelcomeNotification* temp = welcome_;
  welcome_ = NULL;
  return temp;
}
void Notification::set_allocated_welcome(::khero::WelcomeNotification* welcome) {
  delete welcome_;
  welcome_ = welcome;
  if (welcome) {
    set_has_welcome();
  } else {
    clear_has_welcome();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Notification.welcome)
}

// optional .khero.FrameNotification frame = 2;
bool Notification::has_frame() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Notification::set_has_frame() {
  _has_bits_[0] |= 0x00000002u;
}
void Notification::clear_has_frame() {
  _has_bits_[0] &= ~0x00000002u;
}
void Notification::clear_frame() {
  if (frame_ != NULL) frame_->::khero::FrameNotification::Clear();
  clear_has_frame();
}
const ::khero::FrameNotification& Notification::frame() const {
  // @@protoc_insertion_point(field_get:khero.Notification.frame)
  return frame_ != NULL ? *frame_
                         : *::khero::FrameNotification::internal_default_instance();
}
::khero::FrameNotification* Notification::mutable_frame() {
  set_has_frame();
  if (frame_ == NULL) {
    frame_ = new ::khero::FrameNotification;
  }
  // @@protoc_insertion_point(field_mutable:khero.Notification.frame)
  return frame_;
}
::khero::FrameNotification* Notification::release_frame() {
  // @@protoc_insertion_point(field_release:khero.Notification.frame)
  clear_has_frame();
  ::khero::FrameNotification* temp = frame_;
  frame_ = NULL;
  return temp;
}
void Notification::set_allocated_frame(::khero::FrameNotification* frame) {
  delete frame_;
  frame_ = frame;
  if (frame) {
    set_has_frame();
  } else {
    clear_has_frame();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Notification.frame)
}

// optional .khero.GameStartNotification gameStart = 3;
bool Notification::has_gamestart() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Notification::set_has_gamestart() {
  _has_bits_[0] |= 0x00000004u;
}
void Notification::clear_has_gamestart() {
  _has_bits_[0] &= ~0x00000004u;
}
void Notification::clear_gamestart() {
  if (gamestart_ != NULL) gamestart_->::khero::GameStartNotification::Clear();
  clear_has_gamestart();
}
const ::khero::GameStartNotification& Notification::gamestart() const {
  // @@protoc_insertion_point(field_get:khero.Notification.gameStart)
  return gamestart_ != NULL ? *gamestart_
                         : *::khero::GameStartNotification::internal_default_instance();
}
::khero::GameStartNotification* Notification::mutable_gamestart() {
  set_has_gamestart();
  if (gamestart_ == NULL) {
    gamestart_ = new ::khero::GameStartNotification;
  }
  // @@protoc_insertion_point(field_mutable:khero.Notification.gameStart)
  return gamestart_;
}
::khero::GameStartNotification* Notification::release_gamestart() {
  // @@protoc_insertion_point(field_release:khero.Notification.gameStart)
  clear_has_gamestart();
  ::khero::GameStartNotification* temp = gamestart_;
  gamestart_ = NULL;
  return temp;
}
void Notification::set_allocated_gamestart(::khero::GameStartNotification* gamestart) {
  delete gamestart_;
  gamestart_ = gamestart;
  if (gamestart) {
    set_has_gamestart();
  } else {
    clear_has_gamestart();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.Notification.gameStart)
}

inline const Notification* Notification::internal_default_instance() {
  return &Notification_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugCommand::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugCommand::DebugCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.DebugCommand)
}

void DebugCommand::InitAsDefaultInstance() {
}

DebugCommand::DebugCommand(const DebugCommand& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.DebugCommand)
}

void DebugCommand::SharedCtor() {
  _cached_size_ = 0;
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DebugCommand::~DebugCommand() {
  // @@protoc_insertion_point(destructor:khero.DebugCommand)
  SharedDtor();
}

void DebugCommand::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugCommand::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DebugCommand_descriptor_;
}

const DebugCommand& DebugCommand::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DebugCommand> DebugCommand_default_instance_;

DebugCommand* DebugCommand::New(::google::protobuf::Arena* arena) const {
  DebugCommand* n = new DebugCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.DebugCommand)
  if (has_command()) {
    command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DebugCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.DebugCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string command = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.DebugCommand.command");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.DebugCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.DebugCommand)
  return false;
#undef DO_
}

void DebugCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.DebugCommand)
  // required string command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.DebugCommand.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.DebugCommand)
}

::google::protobuf::uint8* DebugCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.DebugCommand)
  // required string command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.DebugCommand.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.DebugCommand)
  return target;
}

size_t DebugCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.DebugCommand)
  size_t total_size = 0;

  // required string command = 1;
  if (has_command()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.DebugCommand)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DebugCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.DebugCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.DebugCommand)
    UnsafeMergeFrom(*source);
  }
}

void DebugCommand::MergeFrom(const DebugCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.DebugCommand)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DebugCommand::UnsafeMergeFrom(const DebugCommand& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command()) {
      set_has_command();
      command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DebugCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.DebugCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugCommand::CopyFrom(const DebugCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.DebugCommand)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DebugCommand::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DebugCommand::Swap(DebugCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugCommand::InternalSwap(DebugCommand* other) {
  command_.Swap(&other->command_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugCommand::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DebugCommand_descriptor_;
  metadata.reflection = DebugCommand_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DebugCommand

// required string command = 1;
bool DebugCommand::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DebugCommand::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
void DebugCommand::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
void DebugCommand::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
const ::std::string& DebugCommand::command() const {
  // @@protoc_insertion_point(field_get:khero.DebugCommand.command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DebugCommand::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.DebugCommand.command)
}
void DebugCommand::set_command(const char* value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.DebugCommand.command)
}
void DebugCommand::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.DebugCommand.command)
}
::std::string* DebugCommand::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:khero.DebugCommand.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DebugCommand::release_command() {
  // @@protoc_insertion_point(field_release:khero.DebugCommand.command)
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DebugCommand::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:khero.DebugCommand.command)
}

inline const DebugCommand* DebugCommand::internal_default_instance() {
  return &DebugCommand_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterRequest::kUsernameFieldNumber;
const int RegisterRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterRequest::RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.RegisterRequest)
}

void RegisterRequest::InitAsDefaultInstance() {
}

RegisterRequest::RegisterRequest(const RegisterRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.RegisterRequest)
}

void RegisterRequest::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:khero.RegisterRequest)
  SharedDtor();
}

void RegisterRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterRequest_descriptor_;
}

const RegisterRequest& RegisterRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegisterRequest> RegisterRequest_default_instance_;

RegisterRequest* RegisterRequest::New(::google::protobuf::Arena* arena) const {
  RegisterRequest* n = new RegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.RegisterRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.RegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.RegisterRequest.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.RegisterRequest.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.RegisterRequest)
  return false;
#undef DO_
}

void RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.RegisterRequest)
  // required string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.RegisterRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.RegisterRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.RegisterRequest)
}

::google::protobuf::uint8* RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.RegisterRequest)
  // required string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.RegisterRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.RegisterRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.RegisterRequest)
  return target;
}

size_t RegisterRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.RegisterRequest)
  size_t total_size = 0;

  if (has_username()) {
    // required string username = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.RegisterRequest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string username = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.RegisterRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.RegisterRequest)
    UnsafeMergeFrom(*source);
  }
}

void RegisterRequest::MergeFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.RegisterRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegisterRequest::UnsafeMergeFrom(const RegisterRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.RegisterRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegisterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RegisterRequest::Swap(RegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterRequest::InternalSwap(RegisterRequest* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterRequest_descriptor_;
  metadata.reflection = RegisterRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterRequest

// required string username = 1;
bool RegisterRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& RegisterRequest::username() const {
  // @@protoc_insertion_point(field_get:khero.RegisterRequest.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.RegisterRequest.username)
}
void RegisterRequest::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.RegisterRequest.username)
}
void RegisterRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.RegisterRequest.username)
}
::std::string* RegisterRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:khero.RegisterRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterRequest::release_username() {
  // @@protoc_insertion_point(field_release:khero.RegisterRequest.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:khero.RegisterRequest.username)
}

// required string password = 2;
bool RegisterRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegisterRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void RegisterRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegisterRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& RegisterRequest::password() const {
  // @@protoc_insertion_point(field_get:khero.RegisterRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.RegisterRequest.password)
}
void RegisterRequest::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.RegisterRequest.password)
}
void RegisterRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.RegisterRequest.password)
}
::std::string* RegisterRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:khero.RegisterRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterRequest::release_password() {
  // @@protoc_insertion_point(field_release:khero.RegisterRequest.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:khero.RegisterRequest.password)
}

inline const RegisterRequest* RegisterRequest::internal_default_instance() {
  return &RegisterRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResponse::kResultFieldNumber;
const int RegisterResponse::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResponse::RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.RegisterResponse)
}

void RegisterResponse::InitAsDefaultInstance() {
}

RegisterResponse::RegisterResponse(const RegisterResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.RegisterResponse)
}

void RegisterResponse::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = false;
}

RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:khero.RegisterResponse)
  SharedDtor();
}

void RegisterResponse::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterResponse_descriptor_;
}

const RegisterResponse& RegisterResponse::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegisterResponse> RegisterResponse_default_instance_;

RegisterResponse* RegisterResponse::New(::google::protobuf::Arena* arena) const {
  RegisterResponse* n = new RegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.RegisterResponse)
  if (_has_bits_[0 / 32] & 3u) {
    result_ = false;
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.RegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.RegisterResponse.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.RegisterResponse)
  return false;
#undef DO_
}

void RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.RegisterResponse)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.RegisterResponse.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.RegisterResponse)
}

::google::protobuf::uint8* RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.RegisterResponse)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.RegisterResponse.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.RegisterResponse)
  return target;
}

size_t RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.RegisterResponse)
  size_t total_size = 0;

  // required bool result = 1;
  if (has_result()) {
    total_size += 1 + 1;
  }
  // optional string text = 2;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.RegisterResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.RegisterResponse)
    UnsafeMergeFrom(*source);
  }
}

void RegisterResponse::MergeFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.RegisterResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegisterResponse::UnsafeMergeFrom(const RegisterResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.RegisterResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegisterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RegisterResponse::Swap(RegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResponse::InternalSwap(RegisterResponse* other) {
  std::swap(result_, other->result_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegisterResponse_descriptor_;
  metadata.reflection = RegisterResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterResponse

// required bool result = 1;
bool RegisterResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
bool RegisterResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.RegisterResponse.result)
  return result_;
}
void RegisterResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.RegisterResponse.result)
}

// optional string text = 2;
bool RegisterResponse::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegisterResponse::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
void RegisterResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegisterResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& RegisterResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.RegisterResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.RegisterResponse.text)
}
void RegisterResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.RegisterResponse.text)
}
void RegisterResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.RegisterResponse.text)
}
::std::string* RegisterResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.RegisterResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.RegisterResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.RegisterResponse.text)
}

inline const RegisterResponse* RegisterResponse::internal_default_instance() {
  return &RegisterResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kUsernameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.LoginRequest)
}

void LoginRequest::InitAsDefaultInstance() {
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.LoginRequest)
}

void LoginRequest::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:khero.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> LoginRequest_default_instance_;

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.LoginRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.LoginRequest.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.LoginRequest.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.LoginRequest)
  // required string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.LoginRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.LoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.LoginRequest)
  // required string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.LoginRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.LoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.LoginRequest)
  return target;
}

size_t LoginRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.LoginRequest)
  size_t total_size = 0;

  if (has_username()) {
    // required string username = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.LoginRequest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string username = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.LoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.LoginRequest)
    UnsafeMergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.LoginRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginRequest::UnsafeMergeFrom(const LoginRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.LoginRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// required string username = 1;
bool LoginRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:khero.LoginRequest.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.LoginRequest.username)
}
void LoginRequest::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.LoginRequest.username)
}
void LoginRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.LoginRequest.username)
}
::std::string* LoginRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:khero.LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:khero.LoginRequest.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:khero.LoginRequest.username)
}

// required string password = 2;
bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:khero.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.LoginRequest.password)
}
void LoginRequest::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.LoginRequest.password)
}
void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.LoginRequest.password)
}
::std::string* LoginRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:khero.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:khero.LoginRequest.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:khero.LoginRequest.password)
}

inline const LoginRequest* LoginRequest::internal_default_instance() {
  return &LoginRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.LoginResponse)
}

void LoginResponse::InitAsDefaultInstance() {
}

LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.LoginResponse)
}

void LoginResponse::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0;
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:khero.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResponse_descriptor_;
}

const LoginResponse& LoginResponse::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> LoginResponse_default_instance_;

LoginResponse* LoginResponse::New(::google::protobuf::Arena* arena) const {
  LoginResponse* n = new LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.LoginResponse)
  playerid_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 playerId = 1;
      case 1: {
        if (tag == 8) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.LoginResponse)
  // required int32 playerId = 1;
  if (has_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.LoginResponse)
  // required int32 playerId = 1;
  if (has_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.LoginResponse)
  size_t total_size = 0;

  // required int32 playerId = 1;
  if (has_playerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.LoginResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.LoginResponse)
    UnsafeMergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.LoginResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginResponse::UnsafeMergeFrom(const LoginResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_playerid()) {
      set_playerid(from.playerid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.LoginResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  std::swap(playerid_, other->playerid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResponse_descriptor_;
  metadata.reflection = LoginResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResponse

// required int32 playerId = 1;
bool LoginResponse::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginResponse::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginResponse::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginResponse::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
::google::protobuf::int32 LoginResponse::playerid() const {
  // @@protoc_insertion_point(field_get:khero.LoginResponse.playerId)
  return playerid_;
}
void LoginResponse::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:khero.LoginResponse.playerId)
}

inline const LoginResponse* LoginResponse::internal_default_instance() {
  return &LoginResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyMsg::kKeyCodeFieldNumber;
const int KeyMsg::kKeyDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyMsg::KeyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.KeyMsg)
}

void KeyMsg::InitAsDefaultInstance() {
}

KeyMsg::KeyMsg(const KeyMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.KeyMsg)
}

void KeyMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&keycode_, 0, reinterpret_cast<char*>(&keydown_) -
    reinterpret_cast<char*>(&keycode_) + sizeof(keydown_));
}

KeyMsg::~KeyMsg() {
  // @@protoc_insertion_point(destructor:khero.KeyMsg)
  SharedDtor();
}

void KeyMsg::SharedDtor() {
}

void KeyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyMsg_descriptor_;
}

const KeyMsg& KeyMsg::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KeyMsg> KeyMsg_default_instance_;

KeyMsg* KeyMsg::New(::google::protobuf::Arena* arena) const {
  KeyMsg* n = new KeyMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.KeyMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KeyMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KeyMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(keycode_, keydown_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KeyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.KeyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 keyCode = 1;
      case 1: {
        if (tag == 8) {
          set_has_keycode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keycode_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_keyDown;
        break;
      }

      // required bool keyDown = 2;
      case 2: {
        if (tag == 16) {
         parse_keyDown:
          set_has_keydown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keydown_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.KeyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.KeyMsg)
  return false;
#undef DO_
}

void KeyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.KeyMsg)
  // required int32 keyCode = 1;
  if (has_keycode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->keycode(), output);
  }

  // required bool keyDown = 2;
  if (has_keydown()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->keydown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.KeyMsg)
}

::google::protobuf::uint8* KeyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.KeyMsg)
  // required int32 keyCode = 1;
  if (has_keycode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->keycode(), target);
  }

  // required bool keyDown = 2;
  if (has_keydown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->keydown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.KeyMsg)
  return target;
}

size_t KeyMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.KeyMsg)
  size_t total_size = 0;

  if (has_keycode()) {
    // required int32 keyCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keycode());
  }

  if (has_keydown()) {
    // required bool keyDown = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t KeyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.KeyMsg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 keyCode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keycode());

    // required bool keyDown = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.KeyMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KeyMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.KeyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.KeyMsg)
    UnsafeMergeFrom(*source);
  }
}

void KeyMsg::MergeFrom(const KeyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.KeyMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KeyMsg::UnsafeMergeFrom(const KeyMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_keycode()) {
      set_keycode(from.keycode());
    }
    if (from.has_keydown()) {
      set_keydown(from.keydown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void KeyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.KeyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyMsg::CopyFrom(const KeyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.KeyMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KeyMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void KeyMsg::Swap(KeyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyMsg::InternalSwap(KeyMsg* other) {
  std::swap(keycode_, other->keycode_);
  std::swap(keydown_, other->keydown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyMsg_descriptor_;
  metadata.reflection = KeyMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyMsg

// required int32 keyCode = 1;
bool KeyMsg::has_keycode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeyMsg::set_has_keycode() {
  _has_bits_[0] |= 0x00000001u;
}
void KeyMsg::clear_has_keycode() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeyMsg::clear_keycode() {
  keycode_ = 0;
  clear_has_keycode();
}
::google::protobuf::int32 KeyMsg::keycode() const {
  // @@protoc_insertion_point(field_get:khero.KeyMsg.keyCode)
  return keycode_;
}
void KeyMsg::set_keycode(::google::protobuf::int32 value) {
  set_has_keycode();
  keycode_ = value;
  // @@protoc_insertion_point(field_set:khero.KeyMsg.keyCode)
}

// required bool keyDown = 2;
bool KeyMsg::has_keydown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KeyMsg::set_has_keydown() {
  _has_bits_[0] |= 0x00000002u;
}
void KeyMsg::clear_has_keydown() {
  _has_bits_[0] &= ~0x00000002u;
}
void KeyMsg::clear_keydown() {
  keydown_ = false;
  clear_has_keydown();
}
bool KeyMsg::keydown() const {
  // @@protoc_insertion_point(field_get:khero.KeyMsg.keyDown)
  return keydown_;
}
void KeyMsg::set_keydown(bool value) {
  set_has_keydown();
  keydown_ = value;
  // @@protoc_insertion_point(field_set:khero.KeyMsg.keyDown)
}

inline const KeyMsg* KeyMsg::internal_default_instance() {
  return &KeyMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TouchMsg::kTouchXFieldNumber;
const int TouchMsg::kTouchYFieldNumber;
const int TouchMsg::kTouchUpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TouchMsg::TouchMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.TouchMsg)
}

void TouchMsg::InitAsDefaultInstance() {
}

TouchMsg::TouchMsg(const TouchMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.TouchMsg)
}

void TouchMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&touchx_, 0, reinterpret_cast<char*>(&touchup_) -
    reinterpret_cast<char*>(&touchx_) + sizeof(touchup_));
}

TouchMsg::~TouchMsg() {
  // @@protoc_insertion_point(destructor:khero.TouchMsg)
  SharedDtor();
}

void TouchMsg::SharedDtor() {
}

void TouchMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TouchMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TouchMsg_descriptor_;
}

const TouchMsg& TouchMsg::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TouchMsg> TouchMsg_default_instance_;

TouchMsg* TouchMsg::New(::google::protobuf::Arena* arena) const {
  TouchMsg* n = new TouchMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TouchMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.TouchMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TouchMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TouchMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(touchx_, touchup_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TouchMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.TouchMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float touchX = 1;
      case 1: {
        if (tag == 13) {
          set_has_touchx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &touchx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_touchY;
        break;
      }

      // required float touchY = 2;
      case 2: {
        if (tag == 21) {
         parse_touchY:
          set_has_touchy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &touchy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_touchUp;
        break;
      }

      // required bool touchUp = 3;
      case 3: {
        if (tag == 24) {
         parse_touchUp:
          set_has_touchup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &touchup_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.TouchMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.TouchMsg)
  return false;
#undef DO_
}

void TouchMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.TouchMsg)
  // required float touchX = 1;
  if (has_touchx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->touchx(), output);
  }

  // required float touchY = 2;
  if (has_touchy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->touchy(), output);
  }

  // required bool touchUp = 3;
  if (has_touchup()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->touchup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.TouchMsg)
}

::google::protobuf::uint8* TouchMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.TouchMsg)
  // required float touchX = 1;
  if (has_touchx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->touchx(), target);
  }

  // required float touchY = 2;
  if (has_touchy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->touchy(), target);
  }

  // required bool touchUp = 3;
  if (has_touchup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->touchup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.TouchMsg)
  return target;
}

size_t TouchMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.TouchMsg)
  size_t total_size = 0;

  if (has_touchx()) {
    // required float touchX = 1;
    total_size += 1 + 4;
  }

  if (has_touchy()) {
    // required float touchY = 2;
    total_size += 1 + 4;
  }

  if (has_touchup()) {
    // required bool touchUp = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t TouchMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.TouchMsg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float touchX = 1;
    total_size += 1 + 4;

    // required float touchY = 2;
    total_size += 1 + 4;

    // required bool touchUp = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TouchMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.TouchMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TouchMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TouchMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.TouchMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.TouchMsg)
    UnsafeMergeFrom(*source);
  }
}

void TouchMsg::MergeFrom(const TouchMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.TouchMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TouchMsg::UnsafeMergeFrom(const TouchMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_touchx()) {
      set_touchx(from.touchx());
    }
    if (from.has_touchy()) {
      set_touchy(from.touchy());
    }
    if (from.has_touchup()) {
      set_touchup(from.touchup());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TouchMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.TouchMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TouchMsg::CopyFrom(const TouchMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.TouchMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TouchMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void TouchMsg::Swap(TouchMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TouchMsg::InternalSwap(TouchMsg* other) {
  std::swap(touchx_, other->touchx_);
  std::swap(touchy_, other->touchy_);
  std::swap(touchup_, other->touchup_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TouchMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TouchMsg_descriptor_;
  metadata.reflection = TouchMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TouchMsg

// required float touchX = 1;
bool TouchMsg::has_touchx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TouchMsg::set_has_touchx() {
  _has_bits_[0] |= 0x00000001u;
}
void TouchMsg::clear_has_touchx() {
  _has_bits_[0] &= ~0x00000001u;
}
void TouchMsg::clear_touchx() {
  touchx_ = 0;
  clear_has_touchx();
}
float TouchMsg::touchx() const {
  // @@protoc_insertion_point(field_get:khero.TouchMsg.touchX)
  return touchx_;
}
void TouchMsg::set_touchx(float value) {
  set_has_touchx();
  touchx_ = value;
  // @@protoc_insertion_point(field_set:khero.TouchMsg.touchX)
}

// required float touchY = 2;
bool TouchMsg::has_touchy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TouchMsg::set_has_touchy() {
  _has_bits_[0] |= 0x00000002u;
}
void TouchMsg::clear_has_touchy() {
  _has_bits_[0] &= ~0x00000002u;
}
void TouchMsg::clear_touchy() {
  touchy_ = 0;
  clear_has_touchy();
}
float TouchMsg::touchy() const {
  // @@protoc_insertion_point(field_get:khero.TouchMsg.touchY)
  return touchy_;
}
void TouchMsg::set_touchy(float value) {
  set_has_touchy();
  touchy_ = value;
  // @@protoc_insertion_point(field_set:khero.TouchMsg.touchY)
}

// required bool touchUp = 3;
bool TouchMsg::has_touchup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TouchMsg::set_has_touchup() {
  _has_bits_[0] |= 0x00000004u;
}
void TouchMsg::clear_has_touchup() {
  _has_bits_[0] &= ~0x00000004u;
}
void TouchMsg::clear_touchup() {
  touchup_ = false;
  clear_has_touchup();
}
bool TouchMsg::touchup() const {
  // @@protoc_insertion_point(field_get:khero.TouchMsg.touchUp)
  return touchup_;
}
void TouchMsg::set_touchup(bool value) {
  set_has_touchup();
  touchup_ = value;
  // @@protoc_insertion_point(field_set:khero.TouchMsg.touchUp)
}

inline const TouchMsg* TouchMsg::internal_default_instance() {
  return &TouchMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperateRequest::kPlayerIdFieldNumber;
const int OperateRequest::kKeyMsgFieldNumber;
const int OperateRequest::kTouchMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperateRequest::OperateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.OperateRequest)
}

void OperateRequest::InitAsDefaultInstance() {
  keymsg_ = const_cast< ::khero::KeyMsg*>(
      ::khero::KeyMsg::internal_default_instance());
  touchmsg_ = const_cast< ::khero::TouchMsg*>(
      ::khero::TouchMsg::internal_default_instance());
}

OperateRequest::OperateRequest(const OperateRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.OperateRequest)
}

void OperateRequest::SharedCtor() {
  _cached_size_ = 0;
  keymsg_ = NULL;
  touchmsg_ = NULL;
  playerid_ = 0;
}

OperateRequest::~OperateRequest() {
  // @@protoc_insertion_point(destructor:khero.OperateRequest)
  SharedDtor();
}

void OperateRequest::SharedDtor() {
  if (this != &OperateRequest_default_instance_.get()) {
    delete keymsg_;
    delete touchmsg_;
  }
}

void OperateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperateRequest_descriptor_;
}

const OperateRequest& OperateRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OperateRequest> OperateRequest_default_instance_;

OperateRequest* OperateRequest::New(::google::protobuf::Arena* arena) const {
  OperateRequest* n = new OperateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.OperateRequest)
  if (_has_bits_[0 / 32] & 7u) {
    playerid_ = 0;
    if (has_keymsg()) {
      if (keymsg_ != NULL) keymsg_->::khero::KeyMsg::Clear();
    }
    if (has_touchmsg()) {
      if (touchmsg_ != NULL) touchmsg_->::khero::TouchMsg::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OperateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.OperateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 playerId = 1;
      case 1: {
        if (tag == 8) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_keyMsg;
        break;
      }

      // optional .khero.KeyMsg keyMsg = 2;
      case 2: {
        if (tag == 18) {
         parse_keyMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_keymsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_touchMsg;
        break;
      }

      // optional .khero.TouchMsg touchMsg = 3;
      case 3: {
        if (tag == 26) {
         parse_touchMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_touchmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.OperateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.OperateRequest)
  return false;
#undef DO_
}

void OperateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.OperateRequest)
  // required int32 playerId = 1;
  if (has_playerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // optional .khero.KeyMsg keyMsg = 2;
  if (has_keymsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->keymsg_, output);
  }

  // optional .khero.TouchMsg touchMsg = 3;
  if (has_touchmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->touchmsg_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.OperateRequest)
}

::google::protobuf::uint8* OperateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.OperateRequest)
  // required int32 playerId = 1;
  if (has_playerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // optional .khero.KeyMsg keyMsg = 2;
  if (has_keymsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->keymsg_, false, target);
  }

  // optional .khero.TouchMsg touchMsg = 3;
  if (has_touchmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->touchmsg_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.OperateRequest)
  return target;
}

size_t OperateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.OperateRequest)
  size_t total_size = 0;

  // required int32 playerId = 1;
  if (has_playerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional .khero.KeyMsg keyMsg = 2;
    if (has_keymsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->keymsg_);
    }

    // optional .khero.TouchMsg touchMsg = 3;
    if (has_touchmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->touchmsg_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.OperateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OperateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.OperateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.OperateRequest)
    UnsafeMergeFrom(*source);
  }
}

void OperateRequest::MergeFrom(const OperateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.OperateRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OperateRequest::UnsafeMergeFrom(const OperateRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_playerid()) {
      set_playerid(from.playerid());
    }
    if (from.has_keymsg()) {
      mutable_keymsg()->::khero::KeyMsg::MergeFrom(from.keymsg());
    }
    if (from.has_touchmsg()) {
      mutable_touchmsg()->::khero::TouchMsg::MergeFrom(from.touchmsg());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OperateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.OperateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateRequest::CopyFrom(const OperateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.OperateRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OperateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_keymsg()) {
    if (!this->keymsg_->IsInitialized()) return false;
  }
  if (has_touchmsg()) {
    if (!this->touchmsg_->IsInitialized()) return false;
  }
  return true;
}

void OperateRequest::Swap(OperateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperateRequest::InternalSwap(OperateRequest* other) {
  std::swap(playerid_, other->playerid_);
  std::swap(keymsg_, other->keymsg_);
  std::swap(touchmsg_, other->touchmsg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperateRequest_descriptor_;
  metadata.reflection = OperateRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperateRequest

// required int32 playerId = 1;
bool OperateRequest::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OperateRequest::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
void OperateRequest::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OperateRequest::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
::google::protobuf::int32 OperateRequest::playerid() const {
  // @@protoc_insertion_point(field_get:khero.OperateRequest.playerId)
  return playerid_;
}
void OperateRequest::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:khero.OperateRequest.playerId)
}

// optional .khero.KeyMsg keyMsg = 2;
bool OperateRequest::has_keymsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OperateRequest::set_has_keymsg() {
  _has_bits_[0] |= 0x00000002u;
}
void OperateRequest::clear_has_keymsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void OperateRequest::clear_keymsg() {
  if (keymsg_ != NULL) keymsg_->::khero::KeyMsg::Clear();
  clear_has_keymsg();
}
const ::khero::KeyMsg& OperateRequest::keymsg() const {
  // @@protoc_insertion_point(field_get:khero.OperateRequest.keyMsg)
  return keymsg_ != NULL ? *keymsg_
                         : *::khero::KeyMsg::internal_default_instance();
}
::khero::KeyMsg* OperateRequest::mutable_keymsg() {
  set_has_keymsg();
  if (keymsg_ == NULL) {
    keymsg_ = new ::khero::KeyMsg;
  }
  // @@protoc_insertion_point(field_mutable:khero.OperateRequest.keyMsg)
  return keymsg_;
}
::khero::KeyMsg* OperateRequest::release_keymsg() {
  // @@protoc_insertion_point(field_release:khero.OperateRequest.keyMsg)
  clear_has_keymsg();
  ::khero::KeyMsg* temp = keymsg_;
  keymsg_ = NULL;
  return temp;
}
void OperateRequest::set_allocated_keymsg(::khero::KeyMsg* keymsg) {
  delete keymsg_;
  keymsg_ = keymsg;
  if (keymsg) {
    set_has_keymsg();
  } else {
    clear_has_keymsg();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.OperateRequest.keyMsg)
}

// optional .khero.TouchMsg touchMsg = 3;
bool OperateRequest::has_touchmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OperateRequest::set_has_touchmsg() {
  _has_bits_[0] |= 0x00000004u;
}
void OperateRequest::clear_has_touchmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
void OperateRequest::clear_touchmsg() {
  if (touchmsg_ != NULL) touchmsg_->::khero::TouchMsg::Clear();
  clear_has_touchmsg();
}
const ::khero::TouchMsg& OperateRequest::touchmsg() const {
  // @@protoc_insertion_point(field_get:khero.OperateRequest.touchMsg)
  return touchmsg_ != NULL ? *touchmsg_
                         : *::khero::TouchMsg::internal_default_instance();
}
::khero::TouchMsg* OperateRequest::mutable_touchmsg() {
  set_has_touchmsg();
  if (touchmsg_ == NULL) {
    touchmsg_ = new ::khero::TouchMsg;
  }
  // @@protoc_insertion_point(field_mutable:khero.OperateRequest.touchMsg)
  return touchmsg_;
}
::khero::TouchMsg* OperateRequest::release_touchmsg() {
  // @@protoc_insertion_point(field_release:khero.OperateRequest.touchMsg)
  clear_has_touchmsg();
  ::khero::TouchMsg* temp = touchmsg_;
  touchmsg_ = NULL;
  return temp;
}
void OperateRequest::set_allocated_touchmsg(::khero::TouchMsg* touchmsg) {
  delete touchmsg_;
  touchmsg_ = touchmsg;
  if (touchmsg) {
    set_has_touchmsg();
  } else {
    clear_has_touchmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:khero.OperateRequest.touchMsg)
}

inline const OperateRequest* OperateRequest::internal_default_instance() {
  return &OperateRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStartRequest::kHomeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStartRequest::GameStartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.GameStartRequest)
}

void GameStartRequest::InitAsDefaultInstance() {
}

GameStartRequest::GameStartRequest(const GameStartRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.GameStartRequest)
}

void GameStartRequest::SharedCtor() {
  _cached_size_ = 0;
  homeid_ = 0;
}

GameStartRequest::~GameStartRequest() {
  // @@protoc_insertion_point(destructor:khero.GameStartRequest)
  SharedDtor();
}

void GameStartRequest::SharedDtor() {
}

void GameStartRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameStartRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameStartRequest_descriptor_;
}

const GameStartRequest& GameStartRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GameStartRequest> GameStartRequest_default_instance_;

GameStartRequest* GameStartRequest::New(::google::protobuf::Arena* arena) const {
  GameStartRequest* n = new GameStartRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.GameStartRequest)
  homeid_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GameStartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.GameStartRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 homeId = 1;
      case 1: {
        if (tag == 8) {
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.GameStartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.GameStartRequest)
  return false;
#undef DO_
}

void GameStartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.GameStartRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->homeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.GameStartRequest)
}

::google::protobuf::uint8* GameStartRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.GameStartRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->homeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.GameStartRequest)
  return target;
}

size_t GameStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.GameStartRequest)
  size_t total_size = 0;

  // required int32 homeId = 1;
  if (has_homeid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameStartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.GameStartRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GameStartRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStartRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.GameStartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.GameStartRequest)
    UnsafeMergeFrom(*source);
  }
}

void GameStartRequest::MergeFrom(const GameStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.GameStartRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GameStartRequest::UnsafeMergeFrom(const GameStartRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GameStartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.GameStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStartRequest::CopyFrom(const GameStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.GameStartRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GameStartRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GameStartRequest::Swap(GameStartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameStartRequest::InternalSwap(GameStartRequest* other) {
  std::swap(homeid_, other->homeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameStartRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameStartRequest_descriptor_;
  metadata.reflection = GameStartRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameStartRequest

// required int32 homeId = 1;
bool GameStartRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameStartRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
void GameStartRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameStartRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 GameStartRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.GameStartRequest.homeId)
  return homeid_;
}
void GameStartRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.GameStartRequest.homeId)
}

inline const GameStartRequest* GameStartRequest::internal_default_instance() {
  return &GameStartRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateHomeRequest::kHomeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateHomeRequest::CreateHomeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.CreateHomeRequest)
}

void CreateHomeRequest::InitAsDefaultInstance() {
}

CreateHomeRequest::CreateHomeRequest(const CreateHomeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.CreateHomeRequest)
}

void CreateHomeRequest::SharedCtor() {
  _cached_size_ = 0;
  homename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateHomeRequest::~CreateHomeRequest() {
  // @@protoc_insertion_point(destructor:khero.CreateHomeRequest)
  SharedDtor();
}

void CreateHomeRequest::SharedDtor() {
  homename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateHomeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateHomeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateHomeRequest_descriptor_;
}

const CreateHomeRequest& CreateHomeRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateHomeRequest> CreateHomeRequest_default_instance_;

CreateHomeRequest* CreateHomeRequest::New(::google::protobuf::Arena* arena) const {
  CreateHomeRequest* n = new CreateHomeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateHomeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.CreateHomeRequest)
  if (has_homename()) {
    homename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateHomeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.CreateHomeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string homeName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_homename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->homename().data(), this->homename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.CreateHomeRequest.homeName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.CreateHomeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.CreateHomeRequest)
  return false;
#undef DO_
}

void CreateHomeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.CreateHomeRequest)
  // required string homeName = 1;
  if (has_homename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->homename().data(), this->homename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.CreateHomeRequest.homeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->homename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.CreateHomeRequest)
}

::google::protobuf::uint8* CreateHomeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.CreateHomeRequest)
  // required string homeName = 1;
  if (has_homename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->homename().data(), this->homename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.CreateHomeRequest.homeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->homename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.CreateHomeRequest)
  return target;
}

size_t CreateHomeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.CreateHomeRequest)
  size_t total_size = 0;

  // required string homeName = 1;
  if (has_homename()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->homename());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateHomeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.CreateHomeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateHomeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateHomeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.CreateHomeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.CreateHomeRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreateHomeRequest::MergeFrom(const CreateHomeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.CreateHomeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateHomeRequest::UnsafeMergeFrom(const CreateHomeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homename()) {
      set_has_homename();
      homename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homename_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateHomeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.CreateHomeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateHomeRequest::CopyFrom(const CreateHomeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.CreateHomeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateHomeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateHomeRequest::Swap(CreateHomeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateHomeRequest::InternalSwap(CreateHomeRequest* other) {
  homename_.Swap(&other->homename_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateHomeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateHomeRequest_descriptor_;
  metadata.reflection = CreateHomeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateHomeRequest

// required string homeName = 1;
bool CreateHomeRequest::has_homename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateHomeRequest::set_has_homename() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateHomeRequest::clear_has_homename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateHomeRequest::clear_homename() {
  homename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_homename();
}
const ::std::string& CreateHomeRequest::homename() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeRequest.homeName)
  return homename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateHomeRequest::set_homename(const ::std::string& value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.CreateHomeRequest.homeName)
}
void CreateHomeRequest::set_homename(const char* value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.CreateHomeRequest.homeName)
}
void CreateHomeRequest::set_homename(const char* value, size_t size) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.CreateHomeRequest.homeName)
}
::std::string* CreateHomeRequest::mutable_homename() {
  set_has_homename();
  // @@protoc_insertion_point(field_mutable:khero.CreateHomeRequest.homeName)
  return homename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateHomeRequest::release_homename() {
  // @@protoc_insertion_point(field_release:khero.CreateHomeRequest.homeName)
  clear_has_homename();
  return homename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateHomeRequest::set_allocated_homename(::std::string* homename) {
  if (homename != NULL) {
    set_has_homename();
  } else {
    clear_has_homename();
  }
  homename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), homename);
  // @@protoc_insertion_point(field_set_allocated:khero.CreateHomeRequest.homeName)
}

inline const CreateHomeRequest* CreateHomeRequest::internal_default_instance() {
  return &CreateHomeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateHomeResponse::kResultFieldNumber;
const int CreateHomeResponse::kHomeIdFieldNumber;
const int CreateHomeResponse::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateHomeResponse::CreateHomeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.CreateHomeResponse)
}

void CreateHomeResponse::InitAsDefaultInstance() {
}

CreateHomeResponse::CreateHomeResponse(const CreateHomeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.CreateHomeResponse)
}

void CreateHomeResponse::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&homeid_) -
    reinterpret_cast<char*>(&result_) + sizeof(homeid_));
}

CreateHomeResponse::~CreateHomeResponse() {
  // @@protoc_insertion_point(destructor:khero.CreateHomeResponse)
  SharedDtor();
}

void CreateHomeResponse::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateHomeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateHomeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateHomeResponse_descriptor_;
}

const CreateHomeResponse& CreateHomeResponse::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateHomeResponse> CreateHomeResponse_default_instance_;

CreateHomeResponse* CreateHomeResponse::New(::google::protobuf::Arena* arena) const {
  CreateHomeResponse* n = new CreateHomeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateHomeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.CreateHomeResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateHomeResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateHomeResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(result_, homeid_);
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateHomeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.CreateHomeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_homeId;
        break;
      }

      // optional int32 homeId = 2;
      case 2: {
        if (tag == 16) {
         parse_homeId:
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_text;
        break;
      }

      // optional string text = 3;
      case 3: {
        if (tag == 26) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.CreateHomeResponse.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.CreateHomeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.CreateHomeResponse)
  return false;
#undef DO_
}

void CreateHomeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.CreateHomeResponse)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // optional int32 homeId = 2;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->homeid(), output);
  }

  // optional string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.CreateHomeResponse.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.CreateHomeResponse)
}

::google::protobuf::uint8* CreateHomeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.CreateHomeResponse)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // optional int32 homeId = 2;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->homeid(), target);
  }

  // optional string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.CreateHomeResponse.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.CreateHomeResponse)
  return target;
}

size_t CreateHomeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.CreateHomeResponse)
  size_t total_size = 0;

  // required bool result = 1;
  if (has_result()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional int32 homeId = 2;
    if (has_homeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->homeid());
    }

    // optional string text = 3;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateHomeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.CreateHomeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateHomeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateHomeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.CreateHomeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.CreateHomeResponse)
    UnsafeMergeFrom(*source);
  }
}

void CreateHomeResponse::MergeFrom(const CreateHomeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.CreateHomeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateHomeResponse::UnsafeMergeFrom(const CreateHomeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateHomeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.CreateHomeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateHomeResponse::CopyFrom(const CreateHomeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.CreateHomeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateHomeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateHomeResponse::Swap(CreateHomeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateHomeResponse::InternalSwap(CreateHomeResponse* other) {
  std::swap(result_, other->result_);
  std::swap(homeid_, other->homeid_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateHomeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateHomeResponse_descriptor_;
  metadata.reflection = CreateHomeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateHomeResponse

// required bool result = 1;
bool CreateHomeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateHomeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateHomeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateHomeResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
bool CreateHomeResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeResponse.result)
  return result_;
}
void CreateHomeResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.CreateHomeResponse.result)
}

// optional int32 homeId = 2;
bool CreateHomeResponse::has_homeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateHomeResponse::set_has_homeid() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateHomeResponse::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateHomeResponse::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 CreateHomeResponse::homeid() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeResponse.homeId)
  return homeid_;
}
void CreateHomeResponse::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.CreateHomeResponse.homeId)
}

// optional string text = 3;
bool CreateHomeResponse::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreateHomeResponse::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
void CreateHomeResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreateHomeResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& CreateHomeResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.CreateHomeResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateHomeResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.CreateHomeResponse.text)
}
void CreateHomeResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.CreateHomeResponse.text)
}
void CreateHomeResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.CreateHomeResponse.text)
}
::std::string* CreateHomeResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.CreateHomeResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateHomeResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.CreateHomeResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateHomeResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.CreateHomeResponse.text)
}

inline const CreateHomeResponse* CreateHomeResponse::internal_default_instance() {
  return &CreateHomeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinHomeRequest::kHomeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinHomeRequest::JoinHomeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.JoinHomeRequest)
}

void JoinHomeRequest::InitAsDefaultInstance() {
}

JoinHomeRequest::JoinHomeRequest(const JoinHomeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.JoinHomeRequest)
}

void JoinHomeRequest::SharedCtor() {
  _cached_size_ = 0;
  homeid_ = 0;
}

JoinHomeRequest::~JoinHomeRequest() {
  // @@protoc_insertion_point(destructor:khero.JoinHomeRequest)
  SharedDtor();
}

void JoinHomeRequest::SharedDtor() {
}

void JoinHomeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinHomeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinHomeRequest_descriptor_;
}

const JoinHomeRequest& JoinHomeRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<JoinHomeRequest> JoinHomeRequest_default_instance_;

JoinHomeRequest* JoinHomeRequest::New(::google::protobuf::Arena* arena) const {
  JoinHomeRequest* n = new JoinHomeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinHomeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.JoinHomeRequest)
  homeid_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JoinHomeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.JoinHomeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 homeId = 1;
      case 1: {
        if (tag == 8) {
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.JoinHomeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.JoinHomeRequest)
  return false;
#undef DO_
}

void JoinHomeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.JoinHomeRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->homeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.JoinHomeRequest)
}

::google::protobuf::uint8* JoinHomeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.JoinHomeRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->homeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.JoinHomeRequest)
  return target;
}

size_t JoinHomeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.JoinHomeRequest)
  size_t total_size = 0;

  // required int32 homeId = 1;
  if (has_homeid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinHomeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.JoinHomeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JoinHomeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinHomeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.JoinHomeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.JoinHomeRequest)
    UnsafeMergeFrom(*source);
  }
}

void JoinHomeRequest::MergeFrom(const JoinHomeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.JoinHomeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void JoinHomeRequest::UnsafeMergeFrom(const JoinHomeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void JoinHomeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.JoinHomeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinHomeRequest::CopyFrom(const JoinHomeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.JoinHomeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool JoinHomeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void JoinHomeRequest::Swap(JoinHomeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinHomeRequest::InternalSwap(JoinHomeRequest* other) {
  std::swap(homeid_, other->homeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinHomeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinHomeRequest_descriptor_;
  metadata.reflection = JoinHomeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinHomeRequest

// required int32 homeId = 1;
bool JoinHomeRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JoinHomeRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
void JoinHomeRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void JoinHomeRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 JoinHomeRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeRequest.homeId)
  return homeid_;
}
void JoinHomeRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeRequest.homeId)
}

inline const JoinHomeRequest* JoinHomeRequest::internal_default_instance() {
  return &JoinHomeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinHomeResponse::kHomeIdFieldNumber;
const int JoinHomeResponse::kSeatIdFieldNumber;
const int JoinHomeResponse::kResultFieldNumber;
const int JoinHomeResponse::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinHomeResponse::JoinHomeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.JoinHomeResponse)
}

void JoinHomeResponse::InitAsDefaultInstance() {
}

JoinHomeResponse::JoinHomeResponse(const JoinHomeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.JoinHomeResponse)
}

void JoinHomeResponse::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&homeid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&homeid_) + sizeof(result_));
}

JoinHomeResponse::~JoinHomeResponse() {
  // @@protoc_insertion_point(destructor:khero.JoinHomeResponse)
  SharedDtor();
}

void JoinHomeResponse::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinHomeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinHomeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JoinHomeResponse_descriptor_;
}

const JoinHomeResponse& JoinHomeResponse::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<JoinHomeResponse> JoinHomeResponse_default_instance_;

JoinHomeResponse* JoinHomeResponse::New(::google::protobuf::Arena* arena) const {
  JoinHomeResponse* n = new JoinHomeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinHomeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.JoinHomeResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(JoinHomeResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<JoinHomeResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(homeid_, result_);
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JoinHomeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.JoinHomeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 homeId = 1;
      case 1: {
        if (tag == 8) {
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seatId;
        break;
      }

      // required int32 seatId = 2;
      case 2: {
        if (tag == 16) {
         parse_seatId:
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // required bool result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_text;
        break;
      }

      // optional string text = 4;
      case 4: {
        if (tag == 34) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.JoinHomeResponse.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.JoinHomeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.JoinHomeResponse)
  return false;
#undef DO_
}

void JoinHomeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.JoinHomeResponse)
  // required int32 homeId = 1;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->homeid(), output);
  }

  // required int32 seatId = 2;
  if (has_seatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seatid(), output);
  }

  // required bool result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  // optional string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.JoinHomeResponse.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.JoinHomeResponse)
}

::google::protobuf::uint8* JoinHomeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.JoinHomeResponse)
  // required int32 homeId = 1;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->homeid(), target);
  }

  // required int32 seatId = 2;
  if (has_seatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seatid(), target);
  }

  // required bool result = 3;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  // optional string text = 4;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.JoinHomeResponse.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.JoinHomeResponse)
  return target;
}

size_t JoinHomeResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.JoinHomeResponse)
  size_t total_size = 0;

  if (has_homeid()) {
    // required int32 homeId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }

  if (has_seatid()) {
    // required int32 seatId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seatid());
  }

  if (has_result()) {
    // required bool result = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t JoinHomeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.JoinHomeResponse)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 homeId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());

    // required int32 seatId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seatid());

    // required bool result = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string text = 4;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinHomeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.JoinHomeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JoinHomeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinHomeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.JoinHomeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.JoinHomeResponse)
    UnsafeMergeFrom(*source);
  }
}

void JoinHomeResponse::MergeFrom(const JoinHomeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.JoinHomeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void JoinHomeResponse::UnsafeMergeFrom(const JoinHomeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
    if (from.has_seatid()) {
      set_seatid(from.seatid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void JoinHomeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.JoinHomeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinHomeResponse::CopyFrom(const JoinHomeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.JoinHomeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool JoinHomeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void JoinHomeResponse::Swap(JoinHomeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinHomeResponse::InternalSwap(JoinHomeResponse* other) {
  std::swap(homeid_, other->homeid_);
  std::swap(seatid_, other->seatid_);
  std::swap(result_, other->result_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinHomeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JoinHomeResponse_descriptor_;
  metadata.reflection = JoinHomeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinHomeResponse

// required int32 homeId = 1;
bool JoinHomeResponse::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JoinHomeResponse::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
void JoinHomeResponse::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void JoinHomeResponse::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 JoinHomeResponse::homeid() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.homeId)
  return homeid_;
}
void JoinHomeResponse::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.homeId)
}

// required int32 seatId = 2;
bool JoinHomeResponse::has_seatid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JoinHomeResponse::set_has_seatid() {
  _has_bits_[0] |= 0x00000002u;
}
void JoinHomeResponse::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000002u;
}
void JoinHomeResponse::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
::google::protobuf::int32 JoinHomeResponse::seatid() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.seatId)
  return seatid_;
}
void JoinHomeResponse::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.seatId)
}

// required bool result = 3;
bool JoinHomeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JoinHomeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void JoinHomeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void JoinHomeResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
bool JoinHomeResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.result)
  return result_;
}
void JoinHomeResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.result)
}

// optional string text = 4;
bool JoinHomeResponse::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void JoinHomeResponse::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
void JoinHomeResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
void JoinHomeResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& JoinHomeResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.JoinHomeResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinHomeResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.JoinHomeResponse.text)
}
void JoinHomeResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.JoinHomeResponse.text)
}
void JoinHomeResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.JoinHomeResponse.text)
}
::std::string* JoinHomeResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.JoinHomeResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JoinHomeResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.JoinHomeResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JoinHomeResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.JoinHomeResponse.text)
}

inline const JoinHomeResponse* JoinHomeResponse::internal_default_instance() {
  return &JoinHomeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeInfoRequest::kHomeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeInfoRequest::HomeInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.HomeInfoRequest)
}

void HomeInfoRequest::InitAsDefaultInstance() {
}

HomeInfoRequest::HomeInfoRequest(const HomeInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.HomeInfoRequest)
}

void HomeInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  homeid_ = 0;
}

HomeInfoRequest::~HomeInfoRequest() {
  // @@protoc_insertion_point(destructor:khero.HomeInfoRequest)
  SharedDtor();
}

void HomeInfoRequest::SharedDtor() {
}

void HomeInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HomeInfoRequest_descriptor_;
}

const HomeInfoRequest& HomeInfoRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HomeInfoRequest> HomeInfoRequest_default_instance_;

HomeInfoRequest* HomeInfoRequest::New(::google::protobuf::Arena* arena) const {
  HomeInfoRequest* n = new HomeInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.HomeInfoRequest)
  homeid_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HomeInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.HomeInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 homeId = 1;
      case 1: {
        if (tag == 8) {
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.HomeInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.HomeInfoRequest)
  return false;
#undef DO_
}

void HomeInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.HomeInfoRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->homeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.HomeInfoRequest)
}

::google::protobuf::uint8* HomeInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.HomeInfoRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->homeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.HomeInfoRequest)
  return target;
}

size_t HomeInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.HomeInfoRequest)
  size_t total_size = 0;

  // required int32 homeId = 1;
  if (has_homeid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.HomeInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HomeInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.HomeInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.HomeInfoRequest)
    UnsafeMergeFrom(*source);
  }
}

void HomeInfoRequest::MergeFrom(const HomeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.HomeInfoRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HomeInfoRequest::UnsafeMergeFrom(const HomeInfoRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HomeInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.HomeInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeInfoRequest::CopyFrom(const HomeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.HomeInfoRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HomeInfoRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HomeInfoRequest::Swap(HomeInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeInfoRequest::InternalSwap(HomeInfoRequest* other) {
  std::swap(homeid_, other->homeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HomeInfoRequest_descriptor_;
  metadata.reflection = HomeInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeInfoRequest

// required int32 homeId = 1;
bool HomeInfoRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HomeInfoRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
void HomeInfoRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void HomeInfoRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 HomeInfoRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoRequest.homeId)
  return homeid_;
}
void HomeInfoRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoRequest.homeId)
}

inline const HomeInfoRequest* HomeInfoRequest::internal_default_instance() {
  return &HomeInfoRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HomeInfoResponse::kResultFieldNumber;
const int HomeInfoResponse::kHomeIdFieldNumber;
const int HomeInfoResponse::kHomeNameFieldNumber;
const int HomeInfoResponse::kOwnerFieldNumber;
const int HomeInfoResponse::kPlayerNumFieldNumber;
const int HomeInfoResponse::kSeatIdsFieldNumber;
const int HomeInfoResponse::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HomeInfoResponse::HomeInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.HomeInfoResponse)
}

void HomeInfoResponse::InitAsDefaultInstance() {
}

HomeInfoResponse::HomeInfoResponse(const HomeInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.HomeInfoResponse)
}

void HomeInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  homename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&seatids_) -
    reinterpret_cast<char*>(&result_) + sizeof(seatids_));
}

HomeInfoResponse::~HomeInfoResponse() {
  // @@protoc_insertion_point(destructor:khero.HomeInfoResponse)
  SharedDtor();
}

void HomeInfoResponse::SharedDtor() {
  homename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HomeInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HomeInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HomeInfoResponse_descriptor_;
}

const HomeInfoResponse& HomeInfoResponse::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HomeInfoResponse> HomeInfoResponse_default_instance_;

HomeInfoResponse* HomeInfoResponse::New(::google::protobuf::Arena* arena) const {
  HomeInfoResponse* n = new HomeInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HomeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.HomeInfoResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HomeInfoResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HomeInfoResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(result_, seatids_);
    if (has_homename()) {
      homename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_text()) {
      text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HomeInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.HomeInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (tag == 8) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_homeId;
        break;
      }

      // required int32 homeId = 2;
      case 2: {
        if (tag == 16) {
         parse_homeId:
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_homeName;
        break;
      }

      // required string homeName = 3;
      case 3: {
        if (tag == 26) {
         parse_homeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_homename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->homename().data(), this->homename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.HomeInfoResponse.homeName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_owner;
        break;
      }

      // required int32 owner = 4;
      case 4: {
        if (tag == 32) {
         parse_owner:
          set_has_owner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &owner_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_playerNum;
        break;
      }

      // required int32 playerNum = 5;
      case 5: {
        if (tag == 40) {
         parse_playerNum:
          set_has_playernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playernum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_seatIds;
        break;
      }

      // optional int32 seatIds = 6;
      case 6: {
        if (tag == 48) {
         parse_seatIds:
          set_has_seatids();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seatids_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_text;
        break;
      }

      // optional string text = 7;
      case 7: {
        if (tag == 58) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.HomeInfoResponse.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.HomeInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.HomeInfoResponse)
  return false;
#undef DO_
}

void HomeInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.HomeInfoResponse)
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // required int32 homeId = 2;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->homeid(), output);
  }

  // required string homeName = 3;
  if (has_homename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->homename().data(), this->homename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.HomeInfoResponse.homeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->homename(), output);
  }

  // required int32 owner = 4;
  if (has_owner()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->owner(), output);
  }

  // required int32 playerNum = 5;
  if (has_playernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->playernum(), output);
  }

  // optional int32 seatIds = 6;
  if (has_seatids()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->seatids(), output);
  }

  // optional string text = 7;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.HomeInfoResponse.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.HomeInfoResponse)
}

::google::protobuf::uint8* HomeInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.HomeInfoResponse)
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // required int32 homeId = 2;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->homeid(), target);
  }

  // required string homeName = 3;
  if (has_homename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->homename().data(), this->homename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.HomeInfoResponse.homeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->homename(), target);
  }

  // required int32 owner = 4;
  if (has_owner()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->owner(), target);
  }

  // required int32 playerNum = 5;
  if (has_playernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->playernum(), target);
  }

  // optional int32 seatIds = 6;
  if (has_seatids()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->seatids(), target);
  }

  // optional string text = 7;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.HomeInfoResponse.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.HomeInfoResponse)
  return target;
}

size_t HomeInfoResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.HomeInfoResponse)
  size_t total_size = 0;

  if (has_result()) {
    // required bool result = 1;
    total_size += 1 + 1;
  }

  if (has_homeid()) {
    // required int32 homeId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }

  if (has_homename()) {
    // required string homeName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->homename());
  }

  if (has_owner()) {
    // required int32 owner = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner());
  }

  if (has_playernum()) {
    // required int32 playerNum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playernum());
  }

  return total_size;
}
size_t HomeInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.HomeInfoResponse)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bool result = 1;
    total_size += 1 + 1;

    // required int32 homeId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());

    // required string homeName = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->homename());

    // required int32 owner = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->owner());

    // required int32 playerNum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playernum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[5 / 32] & 96u) {
    // optional int32 seatIds = 6;
    if (has_seatids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seatids());
    }

    // optional string text = 7;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HomeInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.HomeInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HomeInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HomeInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.HomeInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.HomeInfoResponse)
    UnsafeMergeFrom(*source);
  }
}

void HomeInfoResponse::MergeFrom(const HomeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.HomeInfoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HomeInfoResponse::UnsafeMergeFrom(const HomeInfoResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
    if (from.has_homename()) {
      set_has_homename();
      homename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homename_);
    }
    if (from.has_owner()) {
      set_owner(from.owner());
    }
    if (from.has_playernum()) {
      set_playernum(from.playernum());
    }
    if (from.has_seatids()) {
      set_seatids(from.seatids());
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HomeInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.HomeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HomeInfoResponse::CopyFrom(const HomeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.HomeInfoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HomeInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void HomeInfoResponse::Swap(HomeInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HomeInfoResponse::InternalSwap(HomeInfoResponse* other) {
  std::swap(result_, other->result_);
  std::swap(homeid_, other->homeid_);
  homename_.Swap(&other->homename_);
  std::swap(owner_, other->owner_);
  std::swap(playernum_, other->playernum_);
  std::swap(seatids_, other->seatids_);
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HomeInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HomeInfoResponse_descriptor_;
  metadata.reflection = HomeInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HomeInfoResponse

// required bool result = 1;
bool HomeInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HomeInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void HomeInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void HomeInfoResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
bool HomeInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.result)
  return result_;
}
void HomeInfoResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.result)
}

// required int32 homeId = 2;
bool HomeInfoResponse::has_homeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HomeInfoResponse::set_has_homeid() {
  _has_bits_[0] |= 0x00000002u;
}
void HomeInfoResponse::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void HomeInfoResponse::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 HomeInfoResponse::homeid() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.homeId)
  return homeid_;
}
void HomeInfoResponse::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.homeId)
}

// required string homeName = 3;
bool HomeInfoResponse::has_homename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HomeInfoResponse::set_has_homename() {
  _has_bits_[0] |= 0x00000004u;
}
void HomeInfoResponse::clear_has_homename() {
  _has_bits_[0] &= ~0x00000004u;
}
void HomeInfoResponse::clear_homename() {
  homename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_homename();
}
const ::std::string& HomeInfoResponse::homename() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.homeName)
  return homename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeInfoResponse::set_homename(const ::std::string& value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.homeName)
}
void HomeInfoResponse::set_homename(const char* value) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.HomeInfoResponse.homeName)
}
void HomeInfoResponse::set_homename(const char* value, size_t size) {
  set_has_homename();
  homename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.HomeInfoResponse.homeName)
}
::std::string* HomeInfoResponse::mutable_homename() {
  set_has_homename();
  // @@protoc_insertion_point(field_mutable:khero.HomeInfoResponse.homeName)
  return homename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeInfoResponse::release_homename() {
  // @@protoc_insertion_point(field_release:khero.HomeInfoResponse.homeName)
  clear_has_homename();
  return homename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeInfoResponse::set_allocated_homename(::std::string* homename) {
  if (homename != NULL) {
    set_has_homename();
  } else {
    clear_has_homename();
  }
  homename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), homename);
  // @@protoc_insertion_point(field_set_allocated:khero.HomeInfoResponse.homeName)
}

// required int32 owner = 4;
bool HomeInfoResponse::has_owner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HomeInfoResponse::set_has_owner() {
  _has_bits_[0] |= 0x00000008u;
}
void HomeInfoResponse::clear_has_owner() {
  _has_bits_[0] &= ~0x00000008u;
}
void HomeInfoResponse::clear_owner() {
  owner_ = 0;
  clear_has_owner();
}
::google::protobuf::int32 HomeInfoResponse::owner() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.owner)
  return owner_;
}
void HomeInfoResponse::set_owner(::google::protobuf::int32 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.owner)
}

// required int32 playerNum = 5;
bool HomeInfoResponse::has_playernum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HomeInfoResponse::set_has_playernum() {
  _has_bits_[0] |= 0x00000010u;
}
void HomeInfoResponse::clear_has_playernum() {
  _has_bits_[0] &= ~0x00000010u;
}
void HomeInfoResponse::clear_playernum() {
  playernum_ = 0;
  clear_has_playernum();
}
::google::protobuf::int32 HomeInfoResponse::playernum() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.playerNum)
  return playernum_;
}
void HomeInfoResponse::set_playernum(::google::protobuf::int32 value) {
  set_has_playernum();
  playernum_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.playerNum)
}

// optional int32 seatIds = 6;
bool HomeInfoResponse::has_seatids() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HomeInfoResponse::set_has_seatids() {
  _has_bits_[0] |= 0x00000020u;
}
void HomeInfoResponse::clear_has_seatids() {
  _has_bits_[0] &= ~0x00000020u;
}
void HomeInfoResponse::clear_seatids() {
  seatids_ = 0;
  clear_has_seatids();
}
::google::protobuf::int32 HomeInfoResponse::seatids() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.seatIds)
  return seatids_;
}
void HomeInfoResponse::set_seatids(::google::protobuf::int32 value) {
  set_has_seatids();
  seatids_ = value;
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.seatIds)
}

// optional string text = 7;
bool HomeInfoResponse::has_text() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void HomeInfoResponse::set_has_text() {
  _has_bits_[0] |= 0x00000040u;
}
void HomeInfoResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000040u;
}
void HomeInfoResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& HomeInfoResponse::text() const {
  // @@protoc_insertion_point(field_get:khero.HomeInfoResponse.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeInfoResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.HomeInfoResponse.text)
}
void HomeInfoResponse::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.HomeInfoResponse.text)
}
void HomeInfoResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.HomeInfoResponse.text)
}
::std::string* HomeInfoResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.HomeInfoResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HomeInfoResponse::release_text() {
  // @@protoc_insertion_point(field_release:khero.HomeInfoResponse.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HomeInfoResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.HomeInfoResponse.text)
}

inline const HomeInfoResponse* HomeInfoResponse::internal_default_instance() {
  return &HomeInfoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WelcomeNotification::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelcomeNotification::WelcomeNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.WelcomeNotification)
}

void WelcomeNotification::InitAsDefaultInstance() {
}

WelcomeNotification::WelcomeNotification(const WelcomeNotification& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.WelcomeNotification)
}

void WelcomeNotification::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WelcomeNotification::~WelcomeNotification() {
  // @@protoc_insertion_point(destructor:khero.WelcomeNotification)
  SharedDtor();
}

void WelcomeNotification::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WelcomeNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelcomeNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelcomeNotification_descriptor_;
}

const WelcomeNotification& WelcomeNotification::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WelcomeNotification> WelcomeNotification_default_instance_;

WelcomeNotification* WelcomeNotification::New(::google::protobuf::Arena* arena) const {
  WelcomeNotification* n = new WelcomeNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WelcomeNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.WelcomeNotification)
  if (has_text()) {
    text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WelcomeNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.WelcomeNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "khero.WelcomeNotification.text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.WelcomeNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.WelcomeNotification)
  return false;
#undef DO_
}

void WelcomeNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.WelcomeNotification)
  // required string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.WelcomeNotification.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.WelcomeNotification)
}

::google::protobuf::uint8* WelcomeNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.WelcomeNotification)
  // required string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "khero.WelcomeNotification.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.WelcomeNotification)
  return target;
}

size_t WelcomeNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.WelcomeNotification)
  size_t total_size = 0;

  // required string text = 1;
  if (has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelcomeNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.WelcomeNotification)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WelcomeNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WelcomeNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.WelcomeNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.WelcomeNotification)
    UnsafeMergeFrom(*source);
  }
}

void WelcomeNotification::MergeFrom(const WelcomeNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.WelcomeNotification)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WelcomeNotification::UnsafeMergeFrom(const WelcomeNotification& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WelcomeNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.WelcomeNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelcomeNotification::CopyFrom(const WelcomeNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.WelcomeNotification)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WelcomeNotification::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void WelcomeNotification::Swap(WelcomeNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelcomeNotification::InternalSwap(WelcomeNotification* other) {
  text_.Swap(&other->text_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WelcomeNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelcomeNotification_descriptor_;
  metadata.reflection = WelcomeNotification_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WelcomeNotification

// required string text = 1;
bool WelcomeNotification::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WelcomeNotification::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void WelcomeNotification::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void WelcomeNotification::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& WelcomeNotification::text() const {
  // @@protoc_insertion_point(field_get:khero.WelcomeNotification.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WelcomeNotification::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:khero.WelcomeNotification.text)
}
void WelcomeNotification::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:khero.WelcomeNotification.text)
}
void WelcomeNotification::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:khero.WelcomeNotification.text)
}
::std::string* WelcomeNotification::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:khero.WelcomeNotification.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WelcomeNotification::release_text() {
  // @@protoc_insertion_point(field_release:khero.WelcomeNotification.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WelcomeNotification::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:khero.WelcomeNotification.text)
}

inline const WelcomeNotification* WelcomeNotification::internal_default_instance() {
  return &WelcomeNotification_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListRequest::kHomeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListRequest::RoleListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.RoleListRequest)
}

void RoleListRequest::InitAsDefaultInstance() {
}

RoleListRequest::RoleListRequest(const RoleListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.RoleListRequest)
}

void RoleListRequest::SharedCtor() {
  _cached_size_ = 0;
  homeid_ = 0;
}

RoleListRequest::~RoleListRequest() {
  // @@protoc_insertion_point(destructor:khero.RoleListRequest)
  SharedDtor();
}

void RoleListRequest::SharedDtor() {
}

void RoleListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleListRequest_descriptor_;
}

const RoleListRequest& RoleListRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoleListRequest> RoleListRequest_default_instance_;

RoleListRequest* RoleListRequest::New(::google::protobuf::Arena* arena) const {
  RoleListRequest* n = new RoleListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.RoleListRequest)
  homeid_ = 0;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.RoleListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 homeId = 1;
      case 1: {
        if (tag == 8) {
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.RoleListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.RoleListRequest)
  return false;
#undef DO_
}

void RoleListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.RoleListRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->homeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.RoleListRequest)
}

::google::protobuf::uint8* RoleListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.RoleListRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->homeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.RoleListRequest)
  return target;
}

size_t RoleListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.RoleListRequest)
  size_t total_size = 0;

  // required int32 homeId = 1;
  if (has_homeid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.RoleListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoleListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.RoleListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.RoleListRequest)
    UnsafeMergeFrom(*source);
  }
}

void RoleListRequest::MergeFrom(const RoleListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.RoleListRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoleListRequest::UnsafeMergeFrom(const RoleListRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoleListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.RoleListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListRequest::CopyFrom(const RoleListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.RoleListRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoleListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RoleListRequest::Swap(RoleListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListRequest::InternalSwap(RoleListRequest* other) {
  std::swap(homeid_, other->homeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleListRequest_descriptor_;
  metadata.reflection = RoleListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListRequest

// required int32 homeId = 1;
bool RoleListRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoleListRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
void RoleListRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoleListRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 RoleListRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.RoleListRequest.homeId)
  return homeid_;
}
void RoleListRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleListRequest.homeId)
}

inline const RoleListRequest* RoleListRequest::internal_default_instance() {
  return &RoleListRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListResponse::kRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListResponse::RoleListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.RoleListResponse)
}

void RoleListResponse::InitAsDefaultInstance() {
}

RoleListResponse::RoleListResponse(const RoleListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.RoleListResponse)
}

void RoleListResponse::SharedCtor() {
  _cached_size_ = 0;
}

RoleListResponse::~RoleListResponse() {
  // @@protoc_insertion_point(destructor:khero.RoleListResponse)
  SharedDtor();
}

void RoleListResponse::SharedDtor() {
}

void RoleListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleListResponse_descriptor_;
}

const RoleListResponse& RoleListResponse::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoleListResponse> RoleListResponse_default_instance_;

RoleListResponse* RoleListResponse::New(::google::protobuf::Arena* arena) const {
  RoleListResponse* n = new RoleListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.RoleListResponse)
  roles_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.RoleListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 roles = 1;
      case 1: {
        if (tag == 8) {
         parse_roles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_roles())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_roles;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.RoleListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.RoleListResponse)
  return false;
#undef DO_
}

void RoleListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.RoleListResponse)
  // repeated int32 roles = 1;
  for (int i = 0; i < this->roles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->roles(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.RoleListResponse)
}

::google::protobuf::uint8* RoleListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.RoleListResponse)
  // repeated int32 roles = 1;
  for (int i = 0; i < this->roles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->roles(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.RoleListResponse)
  return target;
}

size_t RoleListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.RoleListResponse)
  size_t total_size = 0;

  // repeated int32 roles = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->roles_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->roles(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->roles_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.RoleListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoleListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.RoleListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.RoleListResponse)
    UnsafeMergeFrom(*source);
  }
}

void RoleListResponse::MergeFrom(const RoleListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.RoleListResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoleListResponse::UnsafeMergeFrom(const RoleListResponse& from) {
  GOOGLE_DCHECK(&from != this);
  roles_.UnsafeMergeFrom(from.roles_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoleListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.RoleListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListResponse::CopyFrom(const RoleListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.RoleListResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoleListResponse::IsInitialized() const {

  return true;
}

void RoleListResponse::Swap(RoleListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListResponse::InternalSwap(RoleListResponse* other) {
  roles_.UnsafeArenaSwap(&other->roles_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleListResponse_descriptor_;
  metadata.reflection = RoleListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListResponse

// repeated int32 roles = 1;
int RoleListResponse::roles_size() const {
  return roles_.size();
}
void RoleListResponse::clear_roles() {
  roles_.Clear();
}
::google::protobuf::int32 RoleListResponse::roles(int index) const {
  // @@protoc_insertion_point(field_get:khero.RoleListResponse.roles)
  return roles_.Get(index);
}
void RoleListResponse::set_roles(int index, ::google::protobuf::int32 value) {
  roles_.Set(index, value);
  // @@protoc_insertion_point(field_set:khero.RoleListResponse.roles)
}
void RoleListResponse::add_roles(::google::protobuf::int32 value) {
  roles_.Add(value);
  // @@protoc_insertion_point(field_add:khero.RoleListResponse.roles)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleListResponse::roles() const {
  // @@protoc_insertion_point(field_list:khero.RoleListResponse.roles)
  return roles_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleListResponse::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:khero.RoleListResponse.roles)
  return &roles_;
}

inline const RoleListResponse* RoleListResponse::internal_default_instance() {
  return &RoleListResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleInfoRequest::kHomeIdFieldNumber;
const int RoleInfoRequest::kRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleInfoRequest::RoleInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.RoleInfoRequest)
}

void RoleInfoRequest::InitAsDefaultInstance() {
}

RoleInfoRequest::RoleInfoRequest(const RoleInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.RoleInfoRequest)
}

void RoleInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&homeid_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&homeid_) + sizeof(roleid_));
}

RoleInfoRequest::~RoleInfoRequest() {
  // @@protoc_insertion_point(destructor:khero.RoleInfoRequest)
  SharedDtor();
}

void RoleInfoRequest::SharedDtor() {
}

void RoleInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleInfoRequest_descriptor_;
}

const RoleInfoRequest& RoleInfoRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoleInfoRequest> RoleInfoRequest_default_instance_;

RoleInfoRequest* RoleInfoRequest::New(::google::protobuf::Arena* arena) const {
  RoleInfoRequest* n = new RoleInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.RoleInfoRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleInfoRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleInfoRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(homeid_, roleid_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.RoleInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 homeId = 1;
      case 1: {
        if (tag == 8) {
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_roleId;
        break;
      }

      // required int32 roleId = 2;
      case 2: {
        if (tag == 16) {
         parse_roleId:
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.RoleInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.RoleInfoRequest)
  return false;
#undef DO_
}

void RoleInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.RoleInfoRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->homeid(), output);
  }

  // required int32 roleId = 2;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.RoleInfoRequest)
}

::google::protobuf::uint8* RoleInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.RoleInfoRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->homeid(), target);
  }

  // required int32 roleId = 2;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.RoleInfoRequest)
  return target;
}

size_t RoleInfoRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.RoleInfoRequest)
  size_t total_size = 0;

  if (has_homeid()) {
    // required int32 homeId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }

  if (has_roleid()) {
    // required int32 roleId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  return total_size;
}
size_t RoleInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.RoleInfoRequest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 homeId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());

    // required int32 roleId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.RoleInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoleInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.RoleInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.RoleInfoRequest)
    UnsafeMergeFrom(*source);
  }
}

void RoleInfoRequest::MergeFrom(const RoleInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.RoleInfoRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoleInfoRequest::UnsafeMergeFrom(const RoleInfoRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoleInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.RoleInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleInfoRequest::CopyFrom(const RoleInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.RoleInfoRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoleInfoRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RoleInfoRequest::Swap(RoleInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleInfoRequest::InternalSwap(RoleInfoRequest* other) {
  std::swap(homeid_, other->homeid_);
  std::swap(roleid_, other->roleid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleInfoRequest_descriptor_;
  metadata.reflection = RoleInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleInfoRequest

// required int32 homeId = 1;
bool RoleInfoRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoleInfoRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
void RoleInfoRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoleInfoRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 RoleInfoRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoRequest.homeId)
  return homeid_;
}
void RoleInfoRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoRequest.homeId)
}

// required int32 roleId = 2;
bool RoleInfoRequest::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoleInfoRequest::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
void RoleInfoRequest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoleInfoRequest::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
::google::protobuf::int32 RoleInfoRequest::roleid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoRequest.roleId)
  return roleid_;
}
void RoleInfoRequest::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoRequest.roleId)
}

inline const RoleInfoRequest* RoleInfoRequest::internal_default_instance() {
  return &RoleInfoRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleInfoResponse::kSeatIdFieldNumber;
const int RoleInfoResponse::kXFieldNumber;
const int RoleInfoResponse::kYFieldNumber;
const int RoleInfoResponse::kMaxSpeedFieldNumber;
const int RoleInfoResponse::kMinSpeedFieldNumber;
const int RoleInfoResponse::kDegreeFieldNumber;
const int RoleInfoResponse::kAngularVelocityFieldNumber;
const int RoleInfoResponse::kGunNumFieldNumber;
const int RoleInfoResponse::kGunDemageFieldNumber;
const int RoleInfoResponse::kGunMagazineCapacityFieldNumber;
const int RoleInfoResponse::kGunFireRateFieldNumber;
const int RoleInfoResponse::kGunFireRangeFieldNumber;
const int RoleInfoResponse::kMissileDemageFieldNumber;
const int RoleInfoResponse::kMissileNumFieldNumber;
const int RoleInfoResponse::kMissileSpeedFieldNumber;
const int RoleInfoResponse::kMissileMaxAngularVelocityFieldNumber;
const int RoleInfoResponse::kBombDemageFieldNumber;
const int RoleInfoResponse::kBombNumFieldNumber;
const int RoleInfoResponse::kBombFireRateFieldNumber;
const int RoleInfoResponse::kCampIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleInfoResponse::RoleInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.RoleInfoResponse)
}

void RoleInfoResponse::InitAsDefaultInstance() {
}

RoleInfoResponse::RoleInfoResponse(const RoleInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.RoleInfoResponse)
}

void RoleInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seatid_, 0, reinterpret_cast<char*>(&campid_) -
    reinterpret_cast<char*>(&seatid_) + sizeof(campid_));
}

RoleInfoResponse::~RoleInfoResponse() {
  // @@protoc_insertion_point(destructor:khero.RoleInfoResponse)
  SharedDtor();
}

void RoleInfoResponse::SharedDtor() {
}

void RoleInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleInfoResponse_descriptor_;
}

const RoleInfoResponse& RoleInfoResponse::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoleInfoResponse> RoleInfoResponse_default_instance_;

RoleInfoResponse* RoleInfoResponse::New(::google::protobuf::Arena* arena) const {
  RoleInfoResponse* n = new RoleInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.RoleInfoResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleInfoResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleInfoResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seatid_, gunnum_);
  ZR_(gundemage_, missilemaxangularvelocity_);
  ZR_(bombdemage_, campid_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoleInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.RoleInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 seatId = 1;
      case 1: {
        if (tag == 8) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // required float x = 2;
      case 2: {
        if (tag == 21) {
         parse_x:
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // required float y = 3;
      case 3: {
        if (tag == 29) {
         parse_y:
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_max_speed;
        break;
      }

      // required float max_speed = 4;
      case 4: {
        if (tag == 37) {
         parse_max_speed:
          set_has_max_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_speed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_min_speed;
        break;
      }

      // required float min_speed = 5;
      case 5: {
        if (tag == 45) {
         parse_min_speed:
          set_has_min_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_speed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_degree;
        break;
      }

      // required float degree = 6;
      case 6: {
        if (tag == 53) {
         parse_degree:
          set_has_degree();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &degree_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_angularVelocity;
        break;
      }

      // required float angularVelocity = 7;
      case 7: {
        if (tag == 61) {
         parse_angularVelocity:
          set_has_angularvelocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angularvelocity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_gunNum;
        break;
      }

      // required int32 gunNum = 8;
      case 8: {
        if (tag == 64) {
         parse_gunNum:
          set_has_gunnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gunnum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_gunDemage;
        break;
      }

      // required float gunDemage = 9;
      case 9: {
        if (tag == 77) {
         parse_gunDemage:
          set_has_gundemage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gundemage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_gunMagazineCapacity;
        break;
      }

      // required int32 gunMagazineCapacity = 10;
      case 10: {
        if (tag == 80) {
         parse_gunMagazineCapacity:
          set_has_gunmagazinecapacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gunmagazinecapacity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_gunFireRate;
        break;
      }

      // required float gunFireRate = 11;
      case 11: {
        if (tag == 93) {
         parse_gunFireRate:
          set_has_gunfirerate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gunfirerate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_gunFireRange;
        break;
      }

      // required float gunFireRange = 12;
      case 12: {
        if (tag == 101) {
         parse_gunFireRange:
          set_has_gunfirerange();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gunfirerange_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(109)) goto parse_missileDemage;
        break;
      }

      // required float missileDemage = 13;
      case 13: {
        if (tag == 109) {
         parse_missileDemage:
          set_has_missiledemage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &missiledemage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_missileNum;
        break;
      }

      // required int32 missileNum = 14;
      case 14: {
        if (tag == 112) {
         parse_missileNum:
          set_has_missilenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &missilenum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(125)) goto parse_missileSpeed;
        break;
      }

      // required float missileSpeed = 15;
      case 15: {
        if (tag == 125) {
         parse_missileSpeed:
          set_has_missilespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &missilespeed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(133)) goto parse_missileMaxAngularVelocity;
        break;
      }

      // required float missileMaxAngularVelocity = 16;
      case 16: {
        if (tag == 133) {
         parse_missileMaxAngularVelocity:
          set_has_missilemaxangularvelocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &missilemaxangularvelocity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(141)) goto parse_bombDemage;
        break;
      }

      // required float bombDemage = 17;
      case 17: {
        if (tag == 141) {
         parse_bombDemage:
          set_has_bombdemage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bombdemage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(149)) goto parse_bombNum;
        break;
      }

      // required float bombNum = 18;
      case 18: {
        if (tag == 149) {
         parse_bombNum:
          set_has_bombnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bombnum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(157)) goto parse_bombFireRate;
        break;
      }

      // required float bombFireRate = 19;
      case 19: {
        if (tag == 157) {
         parse_bombFireRate:
          set_has_bombfirerate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bombfirerate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_campId;
        break;
      }

      // required int32 campId = 20;
      case 20: {
        if (tag == 160) {
         parse_campId:
          set_has_campid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.RoleInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.RoleInfoResponse)
  return false;
#undef DO_
}

void RoleInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.RoleInfoResponse)
  // required int32 seatId = 1;
  if (has_seatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seatid(), output);
  }

  // required float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // required float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // required float max_speed = 4;
  if (has_max_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->max_speed(), output);
  }

  // required float min_speed = 5;
  if (has_min_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->min_speed(), output);
  }

  // required float degree = 6;
  if (has_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->degree(), output);
  }

  // required float angularVelocity = 7;
  if (has_angularvelocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->angularvelocity(), output);
  }

  // required int32 gunNum = 8;
  if (has_gunnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gunnum(), output);
  }

  // required float gunDemage = 9;
  if (has_gundemage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->gundemage(), output);
  }

  // required int32 gunMagazineCapacity = 10;
  if (has_gunmagazinecapacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->gunmagazinecapacity(), output);
  }

  // required float gunFireRate = 11;
  if (has_gunfirerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->gunfirerate(), output);
  }

  // required float gunFireRange = 12;
  if (has_gunfirerange()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->gunfirerange(), output);
  }

  // required float missileDemage = 13;
  if (has_missiledemage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->missiledemage(), output);
  }

  // required int32 missileNum = 14;
  if (has_missilenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->missilenum(), output);
  }

  // required float missileSpeed = 15;
  if (has_missilespeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->missilespeed(), output);
  }

  // required float missileMaxAngularVelocity = 16;
  if (has_missilemaxangularvelocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->missilemaxangularvelocity(), output);
  }

  // required float bombDemage = 17;
  if (has_bombdemage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->bombdemage(), output);
  }

  // required float bombNum = 18;
  if (has_bombnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->bombnum(), output);
  }

  // required float bombFireRate = 19;
  if (has_bombfirerate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->bombfirerate(), output);
  }

  // required int32 campId = 20;
  if (has_campid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->campid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.RoleInfoResponse)
}

::google::protobuf::uint8* RoleInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.RoleInfoResponse)
  // required int32 seatId = 1;
  if (has_seatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seatid(), target);
  }

  // required float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // required float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // required float max_speed = 4;
  if (has_max_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->max_speed(), target);
  }

  // required float min_speed = 5;
  if (has_min_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->min_speed(), target);
  }

  // required float degree = 6;
  if (has_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->degree(), target);
  }

  // required float angularVelocity = 7;
  if (has_angularvelocity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->angularvelocity(), target);
  }

  // required int32 gunNum = 8;
  if (has_gunnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gunnum(), target);
  }

  // required float gunDemage = 9;
  if (has_gundemage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->gundemage(), target);
  }

  // required int32 gunMagazineCapacity = 10;
  if (has_gunmagazinecapacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->gunmagazinecapacity(), target);
  }

  // required float gunFireRate = 11;
  if (has_gunfirerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->gunfirerate(), target);
  }

  // required float gunFireRange = 12;
  if (has_gunfirerange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->gunfirerange(), target);
  }

  // required float missileDemage = 13;
  if (has_missiledemage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->missiledemage(), target);
  }

  // required int32 missileNum = 14;
  if (has_missilenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->missilenum(), target);
  }

  // required float missileSpeed = 15;
  if (has_missilespeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->missilespeed(), target);
  }

  // required float missileMaxAngularVelocity = 16;
  if (has_missilemaxangularvelocity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->missilemaxangularvelocity(), target);
  }

  // required float bombDemage = 17;
  if (has_bombdemage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->bombdemage(), target);
  }

  // required float bombNum = 18;
  if (has_bombnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->bombnum(), target);
  }

  // required float bombFireRate = 19;
  if (has_bombfirerate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->bombfirerate(), target);
  }

  // required int32 campId = 20;
  if (has_campid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->campid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.RoleInfoResponse)
  return target;
}

size_t RoleInfoResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.RoleInfoResponse)
  size_t total_size = 0;

  if (has_seatid()) {
    // required int32 seatId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seatid());
  }

  if (has_x()) {
    // required float x = 2;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 3;
    total_size += 1 + 4;
  }

  if (has_max_speed()) {
    // required float max_speed = 4;
    total_size += 1 + 4;
  }

  if (has_min_speed()) {
    // required float min_speed = 5;
    total_size += 1 + 4;
  }

  if (has_degree()) {
    // required float degree = 6;
    total_size += 1 + 4;
  }

  if (has_angularvelocity()) {
    // required float angularVelocity = 7;
    total_size += 1 + 4;
  }

  if (has_gunnum()) {
    // required int32 gunNum = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gunnum());
  }

  if (has_gundemage()) {
    // required float gunDemage = 9;
    total_size += 1 + 4;
  }

  if (has_gunmagazinecapacity()) {
    // required int32 gunMagazineCapacity = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gunmagazinecapacity());
  }

  if (has_gunfirerate()) {
    // required float gunFireRate = 11;
    total_size += 1 + 4;
  }

  if (has_gunfirerange()) {
    // required float gunFireRange = 12;
    total_size += 1 + 4;
  }

  if (has_missiledemage()) {
    // required float missileDemage = 13;
    total_size += 1 + 4;
  }

  if (has_missilenum()) {
    // required int32 missileNum = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->missilenum());
  }

  if (has_missilespeed()) {
    // required float missileSpeed = 15;
    total_size += 1 + 4;
  }

  if (has_missilemaxangularvelocity()) {
    // required float missileMaxAngularVelocity = 16;
    total_size += 2 + 4;
  }

  if (has_bombdemage()) {
    // required float bombDemage = 17;
    total_size += 2 + 4;
  }

  if (has_bombnum()) {
    // required float bombNum = 18;
    total_size += 2 + 4;
  }

  if (has_bombfirerate()) {
    // required float bombFireRate = 19;
    total_size += 2 + 4;
  }

  if (has_campid()) {
    // required int32 campId = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->campid());
  }

  return total_size;
}
size_t RoleInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.RoleInfoResponse)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000fffff) ^ 0x000fffff) == 0) {  // All required fields are present.
    // required int32 seatId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seatid());

    // required float x = 2;
    total_size += 1 + 4;

    // required float y = 3;
    total_size += 1 + 4;

    // required float max_speed = 4;
    total_size += 1 + 4;

    // required float min_speed = 5;
    total_size += 1 + 4;

    // required float degree = 6;
    total_size += 1 + 4;

    // required float angularVelocity = 7;
    total_size += 1 + 4;

    // required int32 gunNum = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gunnum());

    // required float gunDemage = 9;
    total_size += 1 + 4;

    // required int32 gunMagazineCapacity = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gunmagazinecapacity());

    // required float gunFireRate = 11;
    total_size += 1 + 4;

    // required float gunFireRange = 12;
    total_size += 1 + 4;

    // required float missileDemage = 13;
    total_size += 1 + 4;

    // required int32 missileNum = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->missilenum());

    // required float missileSpeed = 15;
    total_size += 1 + 4;

    // required float missileMaxAngularVelocity = 16;
    total_size += 2 + 4;

    // required float bombDemage = 17;
    total_size += 2 + 4;

    // required float bombNum = 18;
    total_size += 2 + 4;

    // required float bombFireRate = 19;
    total_size += 2 + 4;

    // required int32 campId = 20;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->campid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.RoleInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoleInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.RoleInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.RoleInfoResponse)
    UnsafeMergeFrom(*source);
  }
}

void RoleInfoResponse::MergeFrom(const RoleInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.RoleInfoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoleInfoResponse::UnsafeMergeFrom(const RoleInfoResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seatid()) {
      set_seatid(from.seatid());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_max_speed()) {
      set_max_speed(from.max_speed());
    }
    if (from.has_min_speed()) {
      set_min_speed(from.min_speed());
    }
    if (from.has_degree()) {
      set_degree(from.degree());
    }
    if (from.has_angularvelocity()) {
      set_angularvelocity(from.angularvelocity());
    }
    if (from.has_gunnum()) {
      set_gunnum(from.gunnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_gundemage()) {
      set_gundemage(from.gundemage());
    }
    if (from.has_gunmagazinecapacity()) {
      set_gunmagazinecapacity(from.gunmagazinecapacity());
    }
    if (from.has_gunfirerate()) {
      set_gunfirerate(from.gunfirerate());
    }
    if (from.has_gunfirerange()) {
      set_gunfirerange(from.gunfirerange());
    }
    if (from.has_missiledemage()) {
      set_missiledemage(from.missiledemage());
    }
    if (from.has_missilenum()) {
      set_missilenum(from.missilenum());
    }
    if (from.has_missilespeed()) {
      set_missilespeed(from.missilespeed());
    }
    if (from.has_missilemaxangularvelocity()) {
      set_missilemaxangularvelocity(from.missilemaxangularvelocity());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_bombdemage()) {
      set_bombdemage(from.bombdemage());
    }
    if (from.has_bombnum()) {
      set_bombnum(from.bombnum());
    }
    if (from.has_bombfirerate()) {
      set_bombfirerate(from.bombfirerate());
    }
    if (from.has_campid()) {
      set_campid(from.campid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoleInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.RoleInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleInfoResponse::CopyFrom(const RoleInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.RoleInfoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoleInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000fffff) != 0x000fffff) return false;

  return true;
}

void RoleInfoResponse::Swap(RoleInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleInfoResponse::InternalSwap(RoleInfoResponse* other) {
  std::swap(seatid_, other->seatid_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(max_speed_, other->max_speed_);
  std::swap(min_speed_, other->min_speed_);
  std::swap(degree_, other->degree_);
  std::swap(angularvelocity_, other->angularvelocity_);
  std::swap(gunnum_, other->gunnum_);
  std::swap(gundemage_, other->gundemage_);
  std::swap(gunmagazinecapacity_, other->gunmagazinecapacity_);
  std::swap(gunfirerate_, other->gunfirerate_);
  std::swap(gunfirerange_, other->gunfirerange_);
  std::swap(missiledemage_, other->missiledemage_);
  std::swap(missilenum_, other->missilenum_);
  std::swap(missilespeed_, other->missilespeed_);
  std::swap(missilemaxangularvelocity_, other->missilemaxangularvelocity_);
  std::swap(bombdemage_, other->bombdemage_);
  std::swap(bombnum_, other->bombnum_);
  std::swap(bombfirerate_, other->bombfirerate_);
  std::swap(campid_, other->campid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleInfoResponse_descriptor_;
  metadata.reflection = RoleInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleInfoResponse

// required int32 seatId = 1;
bool RoleInfoResponse::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoleInfoResponse::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
void RoleInfoResponse::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoleInfoResponse::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
::google::protobuf::int32 RoleInfoResponse::seatid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.seatId)
  return seatid_;
}
void RoleInfoResponse::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.seatId)
}

// required float x = 2;
bool RoleInfoResponse::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoleInfoResponse::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void RoleInfoResponse::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoleInfoResponse::clear_x() {
  x_ = 0;
  clear_has_x();
}
float RoleInfoResponse::x() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.x)
  return x_;
}
void RoleInfoResponse::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.x)
}

// required float y = 3;
bool RoleInfoResponse::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoleInfoResponse::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void RoleInfoResponse::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoleInfoResponse::clear_y() {
  y_ = 0;
  clear_has_y();
}
float RoleInfoResponse::y() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.y)
  return y_;
}
void RoleInfoResponse::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.y)
}

// required float max_speed = 4;
bool RoleInfoResponse::has_max_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoleInfoResponse::set_has_max_speed() {
  _has_bits_[0] |= 0x00000008u;
}
void RoleInfoResponse::clear_has_max_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoleInfoResponse::clear_max_speed() {
  max_speed_ = 0;
  clear_has_max_speed();
}
float RoleInfoResponse::max_speed() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.max_speed)
  return max_speed_;
}
void RoleInfoResponse::set_max_speed(float value) {
  set_has_max_speed();
  max_speed_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.max_speed)
}

// required float min_speed = 5;
bool RoleInfoResponse::has_min_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoleInfoResponse::set_has_min_speed() {
  _has_bits_[0] |= 0x00000010u;
}
void RoleInfoResponse::clear_has_min_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoleInfoResponse::clear_min_speed() {
  min_speed_ = 0;
  clear_has_min_speed();
}
float RoleInfoResponse::min_speed() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.min_speed)
  return min_speed_;
}
void RoleInfoResponse::set_min_speed(float value) {
  set_has_min_speed();
  min_speed_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.min_speed)
}

// required float degree = 6;
bool RoleInfoResponse::has_degree() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoleInfoResponse::set_has_degree() {
  _has_bits_[0] |= 0x00000020u;
}
void RoleInfoResponse::clear_has_degree() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoleInfoResponse::clear_degree() {
  degree_ = 0;
  clear_has_degree();
}
float RoleInfoResponse::degree() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.degree)
  return degree_;
}
void RoleInfoResponse::set_degree(float value) {
  set_has_degree();
  degree_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.degree)
}

// required float angularVelocity = 7;
bool RoleInfoResponse::has_angularvelocity() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoleInfoResponse::set_has_angularvelocity() {
  _has_bits_[0] |= 0x00000040u;
}
void RoleInfoResponse::clear_has_angularvelocity() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoleInfoResponse::clear_angularvelocity() {
  angularvelocity_ = 0;
  clear_has_angularvelocity();
}
float RoleInfoResponse::angularvelocity() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.angularVelocity)
  return angularvelocity_;
}
void RoleInfoResponse::set_angularvelocity(float value) {
  set_has_angularvelocity();
  angularvelocity_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.angularVelocity)
}

// required int32 gunNum = 8;
bool RoleInfoResponse::has_gunnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RoleInfoResponse::set_has_gunnum() {
  _has_bits_[0] |= 0x00000080u;
}
void RoleInfoResponse::clear_has_gunnum() {
  _has_bits_[0] &= ~0x00000080u;
}
void RoleInfoResponse::clear_gunnum() {
  gunnum_ = 0;
  clear_has_gunnum();
}
::google::protobuf::int32 RoleInfoResponse::gunnum() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunNum)
  return gunnum_;
}
void RoleInfoResponse::set_gunnum(::google::protobuf::int32 value) {
  set_has_gunnum();
  gunnum_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunNum)
}

// required float gunDemage = 9;
bool RoleInfoResponse::has_gundemage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RoleInfoResponse::set_has_gundemage() {
  _has_bits_[0] |= 0x00000100u;
}
void RoleInfoResponse::clear_has_gundemage() {
  _has_bits_[0] &= ~0x00000100u;
}
void RoleInfoResponse::clear_gundemage() {
  gundemage_ = 0;
  clear_has_gundemage();
}
float RoleInfoResponse::gundemage() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunDemage)
  return gundemage_;
}
void RoleInfoResponse::set_gundemage(float value) {
  set_has_gundemage();
  gundemage_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunDemage)
}

// required int32 gunMagazineCapacity = 10;
bool RoleInfoResponse::has_gunmagazinecapacity() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RoleInfoResponse::set_has_gunmagazinecapacity() {
  _has_bits_[0] |= 0x00000200u;
}
void RoleInfoResponse::clear_has_gunmagazinecapacity() {
  _has_bits_[0] &= ~0x00000200u;
}
void RoleInfoResponse::clear_gunmagazinecapacity() {
  gunmagazinecapacity_ = 0;
  clear_has_gunmagazinecapacity();
}
::google::protobuf::int32 RoleInfoResponse::gunmagazinecapacity() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunMagazineCapacity)
  return gunmagazinecapacity_;
}
void RoleInfoResponse::set_gunmagazinecapacity(::google::protobuf::int32 value) {
  set_has_gunmagazinecapacity();
  gunmagazinecapacity_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunMagazineCapacity)
}

// required float gunFireRate = 11;
bool RoleInfoResponse::has_gunfirerate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RoleInfoResponse::set_has_gunfirerate() {
  _has_bits_[0] |= 0x00000400u;
}
void RoleInfoResponse::clear_has_gunfirerate() {
  _has_bits_[0] &= ~0x00000400u;
}
void RoleInfoResponse::clear_gunfirerate() {
  gunfirerate_ = 0;
  clear_has_gunfirerate();
}
float RoleInfoResponse::gunfirerate() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunFireRate)
  return gunfirerate_;
}
void RoleInfoResponse::set_gunfirerate(float value) {
  set_has_gunfirerate();
  gunfirerate_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunFireRate)
}

// required float gunFireRange = 12;
bool RoleInfoResponse::has_gunfirerange() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RoleInfoResponse::set_has_gunfirerange() {
  _has_bits_[0] |= 0x00000800u;
}
void RoleInfoResponse::clear_has_gunfirerange() {
  _has_bits_[0] &= ~0x00000800u;
}
void RoleInfoResponse::clear_gunfirerange() {
  gunfirerange_ = 0;
  clear_has_gunfirerange();
}
float RoleInfoResponse::gunfirerange() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.gunFireRange)
  return gunfirerange_;
}
void RoleInfoResponse::set_gunfirerange(float value) {
  set_has_gunfirerange();
  gunfirerange_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.gunFireRange)
}

// required float missileDemage = 13;
bool RoleInfoResponse::has_missiledemage() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void RoleInfoResponse::set_has_missiledemage() {
  _has_bits_[0] |= 0x00001000u;
}
void RoleInfoResponse::clear_has_missiledemage() {
  _has_bits_[0] &= ~0x00001000u;
}
void RoleInfoResponse::clear_missiledemage() {
  missiledemage_ = 0;
  clear_has_missiledemage();
}
float RoleInfoResponse::missiledemage() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileDemage)
  return missiledemage_;
}
void RoleInfoResponse::set_missiledemage(float value) {
  set_has_missiledemage();
  missiledemage_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileDemage)
}

// required int32 missileNum = 14;
bool RoleInfoResponse::has_missilenum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void RoleInfoResponse::set_has_missilenum() {
  _has_bits_[0] |= 0x00002000u;
}
void RoleInfoResponse::clear_has_missilenum() {
  _has_bits_[0] &= ~0x00002000u;
}
void RoleInfoResponse::clear_missilenum() {
  missilenum_ = 0;
  clear_has_missilenum();
}
::google::protobuf::int32 RoleInfoResponse::missilenum() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileNum)
  return missilenum_;
}
void RoleInfoResponse::set_missilenum(::google::protobuf::int32 value) {
  set_has_missilenum();
  missilenum_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileNum)
}

// required float missileSpeed = 15;
bool RoleInfoResponse::has_missilespeed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void RoleInfoResponse::set_has_missilespeed() {
  _has_bits_[0] |= 0x00004000u;
}
void RoleInfoResponse::clear_has_missilespeed() {
  _has_bits_[0] &= ~0x00004000u;
}
void RoleInfoResponse::clear_missilespeed() {
  missilespeed_ = 0;
  clear_has_missilespeed();
}
float RoleInfoResponse::missilespeed() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileSpeed)
  return missilespeed_;
}
void RoleInfoResponse::set_missilespeed(float value) {
  set_has_missilespeed();
  missilespeed_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileSpeed)
}

// required float missileMaxAngularVelocity = 16;
bool RoleInfoResponse::has_missilemaxangularvelocity() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void RoleInfoResponse::set_has_missilemaxangularvelocity() {
  _has_bits_[0] |= 0x00008000u;
}
void RoleInfoResponse::clear_has_missilemaxangularvelocity() {
  _has_bits_[0] &= ~0x00008000u;
}
void RoleInfoResponse::clear_missilemaxangularvelocity() {
  missilemaxangularvelocity_ = 0;
  clear_has_missilemaxangularvelocity();
}
float RoleInfoResponse::missilemaxangularvelocity() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.missileMaxAngularVelocity)
  return missilemaxangularvelocity_;
}
void RoleInfoResponse::set_missilemaxangularvelocity(float value) {
  set_has_missilemaxangularvelocity();
  missilemaxangularvelocity_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.missileMaxAngularVelocity)
}

// required float bombDemage = 17;
bool RoleInfoResponse::has_bombdemage() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void RoleInfoResponse::set_has_bombdemage() {
  _has_bits_[0] |= 0x00010000u;
}
void RoleInfoResponse::clear_has_bombdemage() {
  _has_bits_[0] &= ~0x00010000u;
}
void RoleInfoResponse::clear_bombdemage() {
  bombdemage_ = 0;
  clear_has_bombdemage();
}
float RoleInfoResponse::bombdemage() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.bombDemage)
  return bombdemage_;
}
void RoleInfoResponse::set_bombdemage(float value) {
  set_has_bombdemage();
  bombdemage_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.bombDemage)
}

// required float bombNum = 18;
bool RoleInfoResponse::has_bombnum() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void RoleInfoResponse::set_has_bombnum() {
  _has_bits_[0] |= 0x00020000u;
}
void RoleInfoResponse::clear_has_bombnum() {
  _has_bits_[0] &= ~0x00020000u;
}
void RoleInfoResponse::clear_bombnum() {
  bombnum_ = 0;
  clear_has_bombnum();
}
float RoleInfoResponse::bombnum() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.bombNum)
  return bombnum_;
}
void RoleInfoResponse::set_bombnum(float value) {
  set_has_bombnum();
  bombnum_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.bombNum)
}

// required float bombFireRate = 19;
bool RoleInfoResponse::has_bombfirerate() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void RoleInfoResponse::set_has_bombfirerate() {
  _has_bits_[0] |= 0x00040000u;
}
void RoleInfoResponse::clear_has_bombfirerate() {
  _has_bits_[0] &= ~0x00040000u;
}
void RoleInfoResponse::clear_bombfirerate() {
  bombfirerate_ = 0;
  clear_has_bombfirerate();
}
float RoleInfoResponse::bombfirerate() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.bombFireRate)
  return bombfirerate_;
}
void RoleInfoResponse::set_bombfirerate(float value) {
  set_has_bombfirerate();
  bombfirerate_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.bombFireRate)
}

// required int32 campId = 20;
bool RoleInfoResponse::has_campid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void RoleInfoResponse::set_has_campid() {
  _has_bits_[0] |= 0x00080000u;
}
void RoleInfoResponse::clear_has_campid() {
  _has_bits_[0] &= ~0x00080000u;
}
void RoleInfoResponse::clear_campid() {
  campid_ = 0;
  clear_has_campid();
}
::google::protobuf::int32 RoleInfoResponse::campid() const {
  // @@protoc_insertion_point(field_get:khero.RoleInfoResponse.campId)
  return campid_;
}
void RoleInfoResponse::set_campid(::google::protobuf::int32 value) {
  set_has_campid();
  campid_ = value;
  // @@protoc_insertion_point(field_set:khero.RoleInfoResponse.campId)
}

inline const RoleInfoResponse* RoleInfoResponse::internal_default_instance() {
  return &RoleInfoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameNotification::kFrameIdFieldNumber;
const int FrameNotification::kOperatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameNotification::FrameNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.FrameNotification)
}

void FrameNotification::InitAsDefaultInstance() {
}

FrameNotification::FrameNotification(const FrameNotification& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.FrameNotification)
}

void FrameNotification::SharedCtor() {
  _cached_size_ = 0;
  frameid_ = 0;
}

FrameNotification::~FrameNotification() {
  // @@protoc_insertion_point(destructor:khero.FrameNotification)
  SharedDtor();
}

void FrameNotification::SharedDtor() {
}

void FrameNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameNotification_descriptor_;
}

const FrameNotification& FrameNotification::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameNotification> FrameNotification_default_instance_;

FrameNotification* FrameNotification::New(::google::protobuf::Arena* arena) const {
  FrameNotification* n = new FrameNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.FrameNotification)
  frameid_ = 0;
  operates_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.FrameNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 frameId = 1;
      case 1: {
        if (tag == 8) {
          set_has_frameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frameid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_operates;
        break;
      }

      // repeated .khero.OperateRequest operates = 2;
      case 2: {
        if (tag == 18) {
         parse_operates:
          DO_(input->IncrementRecursionDepth());
         parse_loop_operates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_operates;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.FrameNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.FrameNotification)
  return false;
#undef DO_
}

void FrameNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.FrameNotification)
  // required int32 frameId = 1;
  if (has_frameid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->frameid(), output);
  }

  // repeated .khero.OperateRequest operates = 2;
  for (unsigned int i = 0, n = this->operates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->operates(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.FrameNotification)
}

::google::protobuf::uint8* FrameNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.FrameNotification)
  // required int32 frameId = 1;
  if (has_frameid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->frameid(), target);
  }

  // repeated .khero.OperateRequest operates = 2;
  for (unsigned int i = 0, n = this->operates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->operates(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.FrameNotification)
  return target;
}

size_t FrameNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.FrameNotification)
  size_t total_size = 0;

  // required int32 frameId = 1;
  if (has_frameid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frameid());
  }
  // repeated .khero.OperateRequest operates = 2;
  {
    unsigned int count = this->operates_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->operates(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.FrameNotification)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.FrameNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.FrameNotification)
    UnsafeMergeFrom(*source);
  }
}

void FrameNotification::MergeFrom(const FrameNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.FrameNotification)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameNotification::UnsafeMergeFrom(const FrameNotification& from) {
  GOOGLE_DCHECK(&from != this);
  operates_.MergeFrom(from.operates_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_frameid()) {
      set_frameid(from.frameid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.FrameNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameNotification::CopyFrom(const FrameNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.FrameNotification)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameNotification::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->operates())) return false;
  return true;
}

void FrameNotification::Swap(FrameNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameNotification::InternalSwap(FrameNotification* other) {
  std::swap(frameid_, other->frameid_);
  operates_.UnsafeArenaSwap(&other->operates_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameNotification_descriptor_;
  metadata.reflection = FrameNotification_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameNotification

// required int32 frameId = 1;
bool FrameNotification::has_frameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameNotification::set_has_frameid() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameNotification::clear_has_frameid() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameNotification::clear_frameid() {
  frameid_ = 0;
  clear_has_frameid();
}
::google::protobuf::int32 FrameNotification::frameid() const {
  // @@protoc_insertion_point(field_get:khero.FrameNotification.frameId)
  return frameid_;
}
void FrameNotification::set_frameid(::google::protobuf::int32 value) {
  set_has_frameid();
  frameid_ = value;
  // @@protoc_insertion_point(field_set:khero.FrameNotification.frameId)
}

// repeated .khero.OperateRequest operates = 2;
int FrameNotification::operates_size() const {
  return operates_.size();
}
void FrameNotification::clear_operates() {
  operates_.Clear();
}
const ::khero::OperateRequest& FrameNotification::operates(int index) const {
  // @@protoc_insertion_point(field_get:khero.FrameNotification.operates)
  return operates_.Get(index);
}
::khero::OperateRequest* FrameNotification::mutable_operates(int index) {
  // @@protoc_insertion_point(field_mutable:khero.FrameNotification.operates)
  return operates_.Mutable(index);
}
::khero::OperateRequest* FrameNotification::add_operates() {
  // @@protoc_insertion_point(field_add:khero.FrameNotification.operates)
  return operates_.Add();
}
::google::protobuf::RepeatedPtrField< ::khero::OperateRequest >*
FrameNotification::mutable_operates() {
  // @@protoc_insertion_point(field_mutable_list:khero.FrameNotification.operates)
  return &operates_;
}
const ::google::protobuf::RepeatedPtrField< ::khero::OperateRequest >&
FrameNotification::operates() const {
  // @@protoc_insertion_point(field_list:khero.FrameNotification.operates)
  return operates_;
}

inline const FrameNotification* FrameNotification::internal_default_instance() {
  return &FrameNotification_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStartNotification::GameStartNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.GameStartNotification)
}

void GameStartNotification::InitAsDefaultInstance() {
}

GameStartNotification::GameStartNotification(const GameStartNotification& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.GameStartNotification)
}

void GameStartNotification::SharedCtor() {
  _cached_size_ = 0;
}

GameStartNotification::~GameStartNotification() {
  // @@protoc_insertion_point(destructor:khero.GameStartNotification)
  SharedDtor();
}

void GameStartNotification::SharedDtor() {
}

void GameStartNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameStartNotification::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameStartNotification_descriptor_;
}

const GameStartNotification& GameStartNotification::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GameStartNotification> GameStartNotification_default_instance_;

GameStartNotification* GameStartNotification::New(::google::protobuf::Arena* arena) const {
  GameStartNotification* n = new GameStartNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameStartNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.GameStartNotification)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GameStartNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.GameStartNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:khero.GameStartNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.GameStartNotification)
  return false;
#undef DO_
}

void GameStartNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.GameStartNotification)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.GameStartNotification)
}

::google::protobuf::uint8* GameStartNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.GameStartNotification)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.GameStartNotification)
  return target;
}

size_t GameStartNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.GameStartNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameStartNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.GameStartNotification)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GameStartNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStartNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.GameStartNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.GameStartNotification)
    UnsafeMergeFrom(*source);
  }
}

void GameStartNotification::MergeFrom(const GameStartNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.GameStartNotification)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GameStartNotification::UnsafeMergeFrom(const GameStartNotification& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GameStartNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.GameStartNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStartNotification::CopyFrom(const GameStartNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.GameStartNotification)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GameStartNotification::IsInitialized() const {

  return true;
}

void GameStartNotification::Swap(GameStartNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameStartNotification::InternalSwap(GameStartNotification* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameStartNotification::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameStartNotification_descriptor_;
  metadata.reflection = GameStartNotification_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameStartNotification

inline const GameStartNotification* GameStartNotification::internal_default_instance() {
  return &GameStartNotification_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadingCompleteRequest::kHomeIdFieldNumber;
const int LoadingCompleteRequest::kSeatIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadingCompleteRequest::LoadingCompleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:khero.LoadingCompleteRequest)
}

void LoadingCompleteRequest::InitAsDefaultInstance() {
}

LoadingCompleteRequest::LoadingCompleteRequest(const LoadingCompleteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:khero.LoadingCompleteRequest)
}

void LoadingCompleteRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&homeid_, 0, reinterpret_cast<char*>(&seatid_) -
    reinterpret_cast<char*>(&homeid_) + sizeof(seatid_));
}

LoadingCompleteRequest::~LoadingCompleteRequest() {
  // @@protoc_insertion_point(destructor:khero.LoadingCompleteRequest)
  SharedDtor();
}

void LoadingCompleteRequest::SharedDtor() {
}

void LoadingCompleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadingCompleteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadingCompleteRequest_descriptor_;
}

const LoadingCompleteRequest& LoadingCompleteRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoadingCompleteRequest> LoadingCompleteRequest_default_instance_;

LoadingCompleteRequest* LoadingCompleteRequest::New(::google::protobuf::Arena* arena) const {
  LoadingCompleteRequest* n = new LoadingCompleteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadingCompleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:khero.LoadingCompleteRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LoadingCompleteRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LoadingCompleteRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(homeid_, seatid_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoadingCompleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:khero.LoadingCompleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 homeId = 1;
      case 1: {
        if (tag == 8) {
          set_has_homeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &homeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seatId;
        break;
      }

      // required int32 seatId = 2;
      case 2: {
        if (tag == 16) {
         parse_seatId:
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:khero.LoadingCompleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:khero.LoadingCompleteRequest)
  return false;
#undef DO_
}

void LoadingCompleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:khero.LoadingCompleteRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->homeid(), output);
  }

  // required int32 seatId = 2;
  if (has_seatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seatid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:khero.LoadingCompleteRequest)
}

::google::protobuf::uint8* LoadingCompleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:khero.LoadingCompleteRequest)
  // required int32 homeId = 1;
  if (has_homeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->homeid(), target);
  }

  // required int32 seatId = 2;
  if (has_seatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seatid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:khero.LoadingCompleteRequest)
  return target;
}

size_t LoadingCompleteRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:khero.LoadingCompleteRequest)
  size_t total_size = 0;

  if (has_homeid()) {
    // required int32 homeId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());
  }

  if (has_seatid()) {
    // required int32 seatId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seatid());
  }

  return total_size;
}
size_t LoadingCompleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:khero.LoadingCompleteRequest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 homeId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->homeid());

    // required int32 seatId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seatid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadingCompleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:khero.LoadingCompleteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoadingCompleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadingCompleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:khero.LoadingCompleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:khero.LoadingCompleteRequest)
    UnsafeMergeFrom(*source);
  }
}

void LoadingCompleteRequest::MergeFrom(const LoadingCompleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:khero.LoadingCompleteRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoadingCompleteRequest::UnsafeMergeFrom(const LoadingCompleteRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_homeid()) {
      set_homeid(from.homeid());
    }
    if (from.has_seatid()) {
      set_seatid(from.seatid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void LoadingCompleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:khero.LoadingCompleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadingCompleteRequest::CopyFrom(const LoadingCompleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:khero.LoadingCompleteRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoadingCompleteRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LoadingCompleteRequest::Swap(LoadingCompleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadingCompleteRequest::InternalSwap(LoadingCompleteRequest* other) {
  std::swap(homeid_, other->homeid_);
  std::swap(seatid_, other->seatid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadingCompleteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadingCompleteRequest_descriptor_;
  metadata.reflection = LoadingCompleteRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadingCompleteRequest

// required int32 homeId = 1;
bool LoadingCompleteRequest::has_homeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoadingCompleteRequest::set_has_homeid() {
  _has_bits_[0] |= 0x00000001u;
}
void LoadingCompleteRequest::clear_has_homeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoadingCompleteRequest::clear_homeid() {
  homeid_ = 0;
  clear_has_homeid();
}
::google::protobuf::int32 LoadingCompleteRequest::homeid() const {
  // @@protoc_insertion_point(field_get:khero.LoadingCompleteRequest.homeId)
  return homeid_;
}
void LoadingCompleteRequest::set_homeid(::google::protobuf::int32 value) {
  set_has_homeid();
  homeid_ = value;
  // @@protoc_insertion_point(field_set:khero.LoadingCompleteRequest.homeId)
}

// required int32 seatId = 2;
bool LoadingCompleteRequest::has_seatid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoadingCompleteRequest::set_has_seatid() {
  _has_bits_[0] |= 0x00000002u;
}
void LoadingCompleteRequest::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoadingCompleteRequest::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
::google::protobuf::int32 LoadingCompleteRequest::seatid() const {
  // @@protoc_insertion_point(field_get:khero.LoadingCompleteRequest.seatId)
  return seatid_;
}
void LoadingCompleteRequest::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:khero.LoadingCompleteRequest.seatId)
}

inline const LoadingCompleteRequest* LoadingCompleteRequest::internal_default_instance() {
  return &LoadingCompleteRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace khero

// @@protoc_insertion_point(global_scope)
